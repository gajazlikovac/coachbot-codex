{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/contexts/AsideContext.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, Dispatch, useContext, useState } from 'react';\n\ninterface AsideContextType {\n  isAsideOpen: boolean;\n  toggleAside: () => void;\n  setIsAsideOpen: Dispatch<boolean>;\n}\n\nconst AsideContext = createContext<AsideContextType | undefined>(undefined);\n\nexport function useAsideContext() {\n  const context = useContext(AsideContext);\n\n  if (context === undefined) {\n    throw new Error('useAsideContext must be used within a RootProvider');\n  }\n\n  return context;\n}\n\nexport const AsideContextProvider = ({ isOpen, children }: { isOpen?: boolean; children: React.ReactNode }) => {\n  const [isAsideOpen, setIsAsideOpen] = useState(isOpen ?? true);\n\n  const toggleAside = () => {\n    setIsAsideOpen((prev) => !prev);\n  };\n\n  return <AsideContext.Provider value={{ isAsideOpen, toggleAside, setIsAsideOpen }}>{children}</AsideContext.Provider>;\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;GARgB;AAUT,MAAM,uBAAuB,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAmD;;IACxG,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;IAEzD,MAAM,cAAc;QAClB,eAAe,CAAC,OAAS,CAAC;IAC5B;IAEA,qBAAO,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAa;YAAa;QAAe;kBAAI;;;;;;AACtF;IARa;KAAA","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/models/chat.models.ts"],"sourcesContent":["import { AnalyzeStageData } from './api.models';\nimport { Style } from './instruction.models';\n\nexport interface Chat {\n  id: string;\n  name: string;\n  userId: string;\n  created_at: Date | string;\n  currentStage?: string | null;\n  ChatLifeAreas?: JSON;\n  Summary?: JSON;\n  Messages?: Message[];\n  stageAnalysis?: AnalyzeStageData;\n}\n\nexport interface Message {\n  id: string;\n  content: string;\n  originalContent?: string | null;\n  star?: boolean | null;\n  role: MessageRole | string;\n  chatId?: string;\n  created_at?: Date | string;\n  type?: string | null;\n  stage?: string | null;\n  status?: MessageStatus;\n  isLoading?: boolean;\n  error?: boolean;\n  recurring?: boolean;\n}\n\nexport enum MessageStatus {\n  generating = 'generating',\n  complete = 'complete',\n}\n\nexport enum MessageRole {\n  user = 'user',\n  assistant = 'assistant',\n}\n\nexport enum ChatMode {\n  new = 'new',\n  recurring = 'recurring',\n}\n\nexport interface ChatInfo {\n  stage: string;\n  style: Style | null;\n  mode: ChatMode;\n}\n"],"names":[],"mappings":";;;;;AA+BO,IAAA,AAAK,uCAAA;;;WAAA;;AAKL,IAAA,AAAK,qCAAA;;;WAAA;;AAKL,IAAA,AAAK,kCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/chat.utils.ts"],"sourcesContent":["import { AnalyzeStageData } from '../models/api.models';\nimport { ChatInfo, ChatMode, Message, MessageRole } from '../models/chat.models';\nimport { SessionDetailsTab } from '../models/common.models';\nimport { Locale } from '../models/locale.models';\n\n/**\n * Generates a formatted chat session name with the current day and time\n * Format: \"Session - Day [HH:MM]\" (e.g., \"Session - Mon [14:30]\")\n * @returns {string} Formatted session name\n */\nexport const generateSessionName = (locale: Locale | string = 'en-US'): string => {\n  const now = new Date();\n\n  // Get day abbreviation (Mon, Tue, etc.)\n  const day = now.toLocaleDateString(locale, { weekday: 'short' });\n\n  // Get hours and minutes with padding\n  const hours = now.getHours().toString().padStart(2, '0');\n  const minutes = now.getMinutes().toString().padStart(2, '0');\n\n  return `Session - ${day} [${hours}:${minutes}]`;\n};\n\n/**\n * Generates a UUID v4 string with fallback for environments without crypto.randomUUID\n * @returns {string} UUID v4 string\n */\nexport const generateUUID = (): string => {\n  if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n\n  // Fallback implementation\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const getMessage = (content: string, role: MessageRole, { stage, mode }: ChatInfo): Message => ({\n  id: generateUUID(),\n  content,\n  stage,\n  role,\n  created_at: new Date().toISOString(),\n  recurring: mode === ChatMode.recurring,\n});\n\nexport const mapSessionStageAnalysis = (data?: AnalyzeStageData): SessionDetailsTab[] | undefined => {\n  if (!data?.reasoning || !data?.criteria_missing) {\n    return [{ name: 'Details', descriptions: [] }];\n  }\n\n  return [\n    {\n      name: 'Details',\n      descriptions: [\n        { type: 'text', value: data.reasoning },\n        {\n          type: 'list',\n          value: data.criteria_missing.map((item) => `▪︎  ${item}`),\n          title: data.criteria_missing.length ? 'Missing Criterias' : '',\n        },\n      ],\n    },\n  ];\n};\n"],"names":[],"mappings":";;;;;;AACA;;AASO,MAAM,sBAAsB,CAAC,SAA0B,OAAO;IACnE,MAAM,MAAM,IAAI;IAEhB,wCAAwC;IACxC,MAAM,MAAM,IAAI,kBAAkB,CAAC,QAAQ;QAAE,SAAS;IAAQ;IAE9D,qCAAqC;IACrC,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IAExD,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,CAAC;AACjD;AAMO,MAAM,eAAe;IAC1B,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,UAAU,KAAK,YAAY;QAC5E,OAAO,OAAO,UAAU;IAC1B;IAEA,0BAA0B;IAC1B,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAC;QAC9D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,MAAM,IAAI,MAAM,MAAM,IAAI,AAAC,IAAI,MAAO;QACtC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF;AAEO,MAAM,aAAa,CAAC,SAAiB,MAAmB,EAAE,KAAK,EAAE,IAAI,EAAY,GAAc,CAAC;QACrG,IAAI;QACJ;QACA;QACA;QACA,YAAY,IAAI,OAAO,WAAW;QAClC,WAAW,SAAS,yIAAA,CAAA,WAAQ,CAAC,SAAS;IACxC,CAAC;AAEM,MAAM,0BAA0B,CAAC;IACtC,IAAI,CAAC,MAAM,aAAa,CAAC,MAAM,kBAAkB;QAC/C,OAAO;YAAC;gBAAE,MAAM;gBAAW,cAAc,EAAE;YAAC;SAAE;IAChD;IAEA,OAAO;QACL;YACE,MAAM;YACN,cAAc;gBACZ;oBAAE,MAAM;oBAAQ,OAAO,KAAK,SAAS;gBAAC;gBACtC;oBACE,MAAM;oBACN,OAAO,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAS,CAAC,IAAI,EAAE,MAAM;oBACxD,OAAO,KAAK,gBAAgB,CAAC,MAAM,GAAG,sBAAsB;gBAC9D;aACD;QACH;KACD;AACH","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/sessionActions.ts"],"sourcesContent":["'use server';\n\nimport 'server-only';\n\nimport { revalidatePath, revalidateTag } from 'next/cache';\nimport { isDynamicServerError } from 'next/dist/client/components/hooks-server-context';\nimport { cookies } from 'next/headers';\n\nimport { SESSION_COOKIE_NAME } from '@/lib/constants';\nimport { SessionPayload } from '@/lib/models/auth.models';\nimport { deleteCookie, getCookie } from '@/lib/utils/cookie.utils';\nimport { encrypt } from '@/lib/utils/encryption.utils';\n\nconst secretKey = process.env.SESSION_JWT_KEY;\n\nexport async function createSession(userId: string, accessAllowed: boolean, assistantId: string) {\n  try {\n    const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000);\n    const session = (await encrypt({ userId, expiresAt, accessAllowed, assistantId }, secretKey)) || '';\n    const cookieStore = await cookies();\n\n    cookieStore.set(SESSION_COOKIE_NAME, session, {\n      httpOnly: true,\n      secure: true,\n      expires: expiresAt,\n      sameSite: 'lax',\n      path: '/',\n    });\n  } catch (error) {\n    console.error('[sessionActions] Error creating session:', error);\n\n    throw new Error('[session] Session creation error');\n  }\n}\n\nexport async function verifySession(): Promise<SessionPayload | null> {\n  try {\n    const session = await getCookie<SessionPayload>(SESSION_COOKIE_NAME, true, secretKey);\n\n    return session;\n  } catch (error) {\n    if (isDynamicServerError(error)) {\n      return null;\n    }\n    console.error('[sessionActions] Error verifying session:', error);\n\n    return null;\n  }\n}\n\nexport async function getSessionUser(): Promise<string | undefined> {\n  try {\n    const session = await verifySession();\n\n    return session?.userId;\n  } catch (error) {\n    console.error('[sessionActions] Error getting session user:', error);\n\n    return;\n  }\n}\n\nexport async function updateSession(\n  newData?: Partial<SessionPayload>,\n  tags?: string[],\n  paths?: string[]\n): Promise<void> {\n  try {\n    const payload = await verifySession();\n\n    if (!payload) return;\n\n    const cookieStore = await cookies();\n    const session = (await encrypt({ ...payload, ...newData }, secretKey)) || '';\n\n    cookieStore.set(SESSION_COOKIE_NAME, session, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'lax',\n      path: '/',\n    });\n\n    tags && tags.forEach(revalidateTag);\n    paths && paths.forEach((path) => revalidatePath(path));\n  } catch (error) {\n    console.error('[sessionActions] Error updating session:', error);\n  }\n}\n\nexport async function deleteSession() {\n  await deleteCookie(SESSION_COOKIE_NAME);\n}\n"],"names":[],"mappings":";;;;;;IA8DsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/contexts/RootContextProvider.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, Dispatch, SetStateAction, use, useContext, useEffect, useState } from 'react';\n\nimport { Assistant } from '@/lib/models/assistant.models';\nimport { Chat, ChatInfo, ChatMode } from '@/lib/models/chat.models';\nimport { SessionDetails, User } from '@/lib/models/common.models';\nimport { Stage } from '@/lib/models/instruction.models';\nimport { mapSessionStageAnalysis } from '@/lib/utils/chat.utils';\nimport { updateSession } from '@/server/actions/sessionActions';\n\ninterface RootContextType {\n  selectedChat: Chat | null;\n  user: User | null;\n  setSelectedChat: (chat: Chat | null) => void;\n  setChatInfo: Dispatch<SetStateAction<ChatInfo>>;\n  chatInfo: ChatInfo;\n  sessionDetails?: SessionDetails;\n  assistants: Assistant[];\n  selectedAssistant: Assistant;\n  updateSelectedAssistant: (assistant: Assistant) => Promise<void>;\n}\n\nconst RootContext = createContext<RootContextType | undefined>(undefined);\n\nexport function useRootContext() {\n  const context = useContext(RootContext);\n\n  if (context === undefined) {\n    throw new Error('useRootContext must be used within a RootProvider');\n  }\n\n  return context;\n}\n\nexport const RootContextProvider = ({\n  firstStage$,\n  assistants$,\n  user$,\n  children,\n  sessionAssistantId,\n}: {\n  firstStage$: Promise<Stage | null>;\n  assistants$: Promise<Assistant[]>;\n  user$: Promise<User | null>;\n  children: React.ReactNode;\n  sessionAssistantId: string;\n}) => {\n  const firstStage = use(firstStage$);\n  const assistants = use(assistants$);\n  const currentUser = use(user$);\n  const [user, setUser] = useState<User | null>(currentUser);\n  const [selectedAssistant, setSelectedAssistant] = useState<Assistant>(assistants[0]);\n\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [chatInfo, setChatInfo] = useState<ChatInfo>({\n    stage: firstStage?.name || '',\n    style: null,\n    mode: ChatMode.new,\n  });\n  const [sessionDetails, setSessionDetails] = useState<SessionDetails>({\n    // progress: mockTabsData.progress,\n    // context: mockTabsData.context,\n  } as SessionDetails);\n\n  const updateSelectedAssistant = async (assistant: Assistant) => {\n    await updateSession(\n      { assistantId: assistant?.id ?? null },\n      ['stages', 'styles', 'firstStage', 'moderationRules'],\n      ['/instructions']\n    );\n    setSelectedAssistant(assistant ?? null);\n  };\n\n  useEffect(() => {\n    setChatInfo((prevInfo) => ({ ...prevInfo, stage: selectedChat?.currentStage || firstStage?.name || '' }));\n    setSessionDetails((prev) => ({ ...prev, details: mapSessionStageAnalysis(selectedChat?.stageAnalysis) }));\n  }, [selectedChat]);\n\n  useEffect(() => {\n    setChatInfo((prevInfo) => ({ ...prevInfo, stage: selectedChat?.currentStage || firstStage?.name || '' }));\n  }, [firstStage, selectedChat?.currentStage]);\n\n  useEffect(() => setUser(user), [user]);\n\n  useEffect(() => {\n    if (assistants.length) {\n      const selectedAssistant = sessionAssistantId && assistants.find((a) => a.id === sessionAssistantId);\n      selectedAssistant ? setSelectedAssistant(selectedAssistant) : updateSelectedAssistant(assistants[0]);\n    }\n  }, [sessionAssistantId, assistants]);\n\n  return (\n    <RootContext.Provider\n      value={{\n        user,\n        sessionDetails,\n        chatInfo,\n        selectedChat,\n        assistants,\n        selectedAssistant,\n        updateSelectedAssistant,\n        setSelectedChat,\n        setChatInfo,\n      }}\n    >\n      {children}\n    </RootContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAEA;AAGA;AAGA;AACA;;;AATA;;;;;AAuBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;GARgB;AAUT,MAAM,sBAAsB,CAAC,EAClC,WAAW,EACX,WAAW,EACX,KAAK,EACL,QAAQ,EACR,kBAAkB,EAOnB;;IACC,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,MAAG,AAAD,EAAE;IACvB,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,MAAG,AAAD,EAAE;IACvB,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,MAAG,AAAD,EAAE;IACxB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,UAAU,CAAC,EAAE;IAEnF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;QACjD,OAAO,YAAY,QAAQ;QAC3B,OAAO;QACP,MAAM,yIAAA,CAAA,WAAQ,CAAC,GAAG;IACpB;IACA,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAGrE;IAEA,MAAM,0BAA0B,OAAO;QACrC,MAAM,CAAA,GAAA,mKAAA,CAAA,gBAAa,AAAD,EAChB;YAAE,aAAa,WAAW,MAAM;QAAK,GACrC;YAAC;YAAU;YAAU;YAAc;SAAkB,EACrD;YAAC;SAAgB;QAEnB,qBAAqB,aAAa;IACpC;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR;iDAAY,CAAC,WAAa,CAAC;wBAAE,GAAG,QAAQ;wBAAE,OAAO,cAAc,gBAAgB,YAAY,QAAQ;oBAAG,CAAC;;YACvG;iDAAkB,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,SAAS,CAAA,GAAA,uIAAA,CAAA,0BAAuB,AAAD,EAAE,cAAc;oBAAe,CAAC;;QACzG;wCAAG;QAAC;KAAa;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR;iDAAY,CAAC,WAAa,CAAC;wBAAE,GAAG,QAAQ;wBAAE,OAAO,cAAc,gBAAgB,YAAY,QAAQ;oBAAG,CAAC;;QACzG;wCAAG;QAAC;QAAY,cAAc;KAAa;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE,IAAM,QAAQ;wCAAO;QAAC;KAAK;IAErC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,IAAI,WAAW,MAAM,EAAE;gBACrB,MAAM,oBAAoB,sBAAsB,WAAW,IAAI;qDAAC,CAAC,IAAM,EAAE,EAAE,KAAK;;gBAChF,oBAAoB,qBAAqB,qBAAqB,wBAAwB,UAAU,CAAC,EAAE;YACrG;QACF;wCAAG;QAAC;QAAoB;KAAW;IAEnC,qBACE,6LAAC,YAAY,QAAQ;QACnB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;IA1Ea;KAAA","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/assistantActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { PriceConfiguration } from '@prisma/client';\n\nimport { Assistant, AssistantConfiguration, AssistantEditable, AssistantMeta } from '@/lib/models/assistant.models';\nimport { State, Template } from '@/lib/models/common.models';\nimport { assistantPriceSchema, assistantSchema, mapRelationConfig } from '@/lib/utils/db.utils';\nimport {\n  createUserAssistant,\n  deleteUserAssistant,\n  duplicateAssistant,\n  getAllTemplates,\n  getUserAssitants,\n  updateAssistantMeta,\n  updateUserAssistant,\n  upsertAssistantPrice,\n} from '../db/assistantClient';\nimport { getFullConfiguration } from '../db/configurationClient';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function getCurrentAssistant(): Promise<string> {\n  try {\n    const { assistantId } = (await verifySession()) || {};\n\n    return assistantId || '';\n  } catch (error) {\n    console.error(`[authActions] Error fetching current assistant`, error);\n\n    return '';\n  }\n}\n\nexport async function getTemplates(): Promise<Template[]> {\n  try {\n    const templates: any[] = await getAllTemplates();\n\n    return templates.map(mapRelationConfig);\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching templates:`, e);\n    return [];\n  }\n}\n\nexport async function getAssistants(include?: any): Promise<Assistant[]> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return [];\n\n    const assistants = await getUserAssitants(userId, include);\n\n    return assistants;\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching assistants for user ${userId}:`, e);\n    return [];\n  }\n}\n\nexport async function upsertAssistant(\n  { template, ...assistantData }: AssistantEditable,\n  id?: string\n): Promise<State<Assistant | null>> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n    let assistant;\n\n    if (!userId) return { value: null };\n\n    const parsedData = assistantSchema.safeParse({ template, ...assistantData });\n\n    if (!parsedData.success) {\n      return { errors: parsedData.error.errors.map(({ message, path }) => ({ name: path.join('.'), message })) };\n    }\n\n    if (!!id) {\n      assistant = await updateUserAssistant(userId, id, {\n        name: assistantData.name,\n        description: assistantData.description,\n        mode: assistantData.mode,\n        status: assistantData.status,\n      });\n    } else {\n      assistant = await createUserAssistant(userId, assistantData, template as any);\n    }\n\n    revalidateTag('assistants');\n\n    return { value: assistant };\n  } catch (e) {\n    console.error(`[assistantClient] Error ${!!id ? 'updating' : 'creating'} assistant for user ${userId}:`, e);\n    return { value: null, error: '' };\n  }\n}\n\nexport async function getAssistantConfiguration(\n  id?: string,\n  full: boolean = true\n): Promise<AssistantConfiguration | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    return (await getFullConfiguration(assistantId || '', full)) as any;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function createCopyAssistant(assistant: Assistant): Promise<Assistant | null> {\n  try {\n    const userId = await getSessionUser();\n\n    if (!assistant || !userId) {\n      console.warn('Assistant not passed or user not authenticated!');\n      return null;\n    }\n\n    const copy = await duplicateAssistant(userId, assistant);\n    revalidateTag('assistants');\n\n    return copy;\n  } catch (error) {\n    console.error(`[instructionsClient] Error creating copy of assistant ${assistant.id}:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaData(id: string, data: Partial<AssistantMeta>): Promise<AssistantMeta | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    const updatedMeta = await updateAssistantMeta(assistantId, data as any);\n\n    revalidateTag('assistants');\n    return updatedMeta;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaPrice(\n  assistant: Assistant,\n  formData: FormData\n): Promise<State<PriceConfiguration | null>> {\n  let assistantId;\n  try {\n    assistantId = assistant.id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.unexpectedError', value: null };\n    }\n    const price = [...formData].reduce((data: any, [key, value]: any) => ({ ...data, [key]: value }), {});\n    const validatedData = assistantPriceSchema.parse(price);\n\n    if (validatedData instanceof Error) {\n      return { error: validatedData.message };\n    }\n\n    const updatedPrice = await upsertAssistantPrice(assistant.meta?.id || '', {\n      ...validatedData,\n      trialDays: !!validatedData.trialDays ? 14 : null,\n    } as any);\n\n    revalidateTag('assistants');\n    return { successMessage: 'General.successMessages.dataSaved', value: updatedPrice };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} meta price data:`, error);\n\n    return { error: 'General.errors.unexpectedError', value: null };\n  }\n}\n\nexport async function deleteAssistant(id: string) {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return;\n\n    await deleteUserAssistant(userId, id);\n    revalidateTag('assistants');\n  } catch (error) {\n    console.error(`[assistantClient] Error removing user ${userId} assistant ${id}:`, error);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAgMsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Button.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { twMerge } from 'tailwind-merge';\n\nconst baseStyles =\n  'inline-flex border border-transparent items-center justify-center gap-x-2 rounded-lg py-2 px-5 font-medium text-base disabled:opacty-30 disabled:pointer-events-none';\n\nconst variantStyles = {\n  solid: {\n    primary:\n      'bg-dark-aquamarine text-white hover:bg-transparent hover:text-dark-aquamarine hover:border-dark-aquamarine',\n    gray: 'bg-white/[8%] border-background-border/[16%] text-light-gray hover:border-main hover:text-main',\n    aquamarine:\n      'bg-white/[8%] border-background-border/[18%] text-dark-aquamarine hover:bg-dark-aquamarine hover:text-main',\n    dark: 'bg-background text-main hover:bg-main hover:text-background ',\n    light: 'bg-main text-background hover:bg-storm-gray hover:border-main hover:text-main',\n  },\n  outline: {\n    darkGray: 'border-dark-gray text-light-gray hover:text-main hover:border-storm-gray',\n    red: 'border-salmon text-salmon hover:text-main hover:border-main',\n  },\n  dashed: {\n    gray: 'border border-dashed border-storm-gray text-light-gray hover:border-main hover:text-main',\n  },\n};\n\ntype ButtonProps = (\n  | { variant?: 'solid'; color?: keyof typeof variantStyles.solid }\n  | { variant: 'outline'; color?: keyof typeof variantStyles.outline }\n  | { variant: 'dashed'; color?: keyof typeof variantStyles.dashed }\n) &\n  (\n    | (Omit<React.ComponentPropsWithoutRef<'button'>, 'color'> & { href?: undefined })\n    | (Omit<React.ComponentPropsWithoutRef<typeof Link>, 'color'> & { href: string })\n  );\n\nexport function Button({ className, variant, color, ...props }: ButtonProps) {\n  const variantConfig: any = variant ? variantStyles[variant] : undefined;\n  className = twMerge(baseStyles, variantConfig && color && variantConfig[color], className);\n\n  return typeof props.href === 'undefined' ? (\n    <button className={twMerge('disabled:cursor-not-allowed disabled:opacity-75', className)} {...props} />\n  ) : (\n    <Link prefetch={false} className={className} {...props} />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,aACJ;AAEF,MAAM,gBAAgB;IACpB,OAAO;QACL,SACE;QACF,MAAM;QACN,YACE;QACF,MAAM;QACN,OAAO;IACT;IACA,SAAS;QACP,UAAU;QACV,KAAK;IACP;IACA,QAAQ;QACN,MAAM;IACR;AACF;AAYO,SAAS,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,OAAoB;IACzE,MAAM,gBAAqB,UAAU,aAAa,CAAC,QAAQ,GAAG;IAC9D,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,YAAY,iBAAiB,SAAS,aAAa,CAAC,MAAM,EAAE;IAEhF,OAAO,OAAO,MAAM,IAAI,KAAK,4BAC3B,6LAAC;QAAO,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,mDAAmD;QAAa,GAAG,KAAK;;;;;6BAEnG,6LAAC,+JAAA,CAAA,UAAI;QAAC,UAAU;QAAO,WAAW;QAAY,GAAG,KAAK;;;;;;AAE1D;KATgB","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/CollapsiblePanel.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Disclosure, DisclosureButton, DisclosurePanel } from '@headlessui/react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nexport default function CollapsiblePanel({\n  title,\n  subTitle,\n  subTitleClass,\n  toggleText,\n  toggleClass,\n  iconClass,\n  children,\n  className,\n  titleClass,\n  contentClassName,\n  togglerRef,\n  additionalToggler,\n}: {\n  title: string;\n  subTitle?: string;\n  subTitleClass?: string;\n  toggleClass?: string;\n  toggleText?: boolean;\n  children?: ReactNode;\n  iconClass?: string;\n  titleClass?: string;\n  className?: string;\n  contentClassName?: string;\n  togglerRef?: any;\n  additionalToggler?: ReactNode;\n}) {\n  const t = useTranslations();\n\n  return (\n    <div className=\"flex min-h-0 min-w-0 shrink flex-col\">\n      <Disclosure>\n        <DisclosureButton\n          ref={togglerRef}\n          className={twMerge(\n            'group z-10 flex min-w-0 items-center justify-between gap-x-1 rounded-xl border border-storm-gray px-3 py-2.5 text-base font-medium text-light-gray',\n            'data-[open]:rounded-b-none data-[open]:border-b-0 data-[open]:border-light-gray data-[open]:bg-background',\n            className\n          )}\n        >\n          <div className={twMerge('flex min-w-0 gap-x-2')}>\n            {iconClass && <i className={twMerge(iconClass)}></i>}\n            <div className={twMerge('flex min-w-0 flex-col gap-y-1 text-start', !title && 'justify-center')}>\n              {title && <h3 className={twMerge('m-0 p-0', titleClass)}> {title}</h3>}\n              {subTitle && <p className={twMerge('', subTitleClass)}>{subTitle}</p>}\n            </div>\n          </div>\n\n          <div className=\"flex gap-x-4\">\n            {additionalToggler}\n            <span className=\"inline-flex items-center gap-x-2\">\n              {toggleText && (\n                <>\n                  <span className=\"hidden group-data-[open]:block\"> {t('General.closeButton')}</span>\n                  <span className=\"block group-data-[open]:hidden\">{t('General.openButton')}</span>\n                </>\n              )}\n              <i className={twMerge('cbi-arrow-down rotate-0 group-data-[open]:rotate-180', toggleClass)}></i>\n            </span>\n          </div>\n        </DisclosureButton>\n        <DisclosurePanel\n          transition\n          className={twMerge(\n            'origin-top border border-light-gray bg-background px-5 py-10 text-main transition duration-200 ease-in-out',\n            'data-[closed]:-translate-y-0 data-[closed]:opacity-0',\n            'data-[open]:rounded-b-xl data-[open]:border-t-0 data-[open]:pt-7',\n            contentClassName\n          )}\n        >\n          {children}\n        </DisclosurePanel>\n      </Disclosure>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;;AAEe,SAAS,iBAAiB,EACvC,KAAK,EACL,QAAQ,EACR,aAAa,EACb,UAAU,EACV,WAAW,EACX,SAAS,EACT,QAAQ,EACR,SAAS,EACT,UAAU,EACV,gBAAgB,EAChB,UAAU,EACV,iBAAiB,EAclB;;IACC,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IAExB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,0LAAA,CAAA,aAAU;;8BACT,6LAAC,0LAAA,CAAA,mBAAgB;oBACf,KAAK;oBACL,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,sJACA,6GACA;;sCAGF,6LAAC;4BAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;;gCACrB,2BAAa,6LAAC;oCAAE,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;8CACpC,6LAAC;oCAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,4CAA4C,CAAC,SAAS;;wCAC3E,uBAAS,6LAAC;4CAAG,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,WAAW;;gDAAa;gDAAE;;;;;;;wCAC1D,0BAAY,6LAAC;4CAAE,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,IAAI;sDAAiB;;;;;;;;;;;;;;;;;;sCAI5D,6LAAC;4BAAI,WAAU;;gCACZ;8CACD,6LAAC;oCAAK,WAAU;;wCACb,4BACC;;8DACE,6LAAC;oDAAK,WAAU;;wDAAiC;wDAAE,EAAE;;;;;;;8DACrD,6LAAC;oDAAK,WAAU;8DAAkC,EAAE;;;;;;;;sDAGxD,6LAAC;4CAAE,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,wDAAwD;;;;;;;;;;;;;;;;;;;;;;;;8BAIpF,6LAAC,0LAAA,CAAA,kBAAe;oBACd,UAAU;oBACV,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,8GACA,wDACA,oEACA;8BAGD;;;;;;;;;;;;;;;;;AAKX;GA3EwB;;QA2BZ,yMAAA,CAAA,kBAAe;;;KA3BH","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/models/analytic.models.ts"],"sourcesContent":["export interface HeapUser {\n  email: string;\n  username?: string;\n  stripeId?: string;\n  subscriptionId?: string;\n  coachLimit?: string | null;\n}\n\nexport interface HeapEventProperties {\n  [key: string]: string | number | boolean;\n}\n\nexport enum HeapTrackEvent {\n  create_new_chat = 'create_new_chat',\n  save_main_instruction = 'save_main_instruction',\n  save_main_onboarding = 'save_main_onboarding',\n  save_stage = 'save_stage',\n  save_moderation = 'save_moderation',\n  save_style = 'save_style',\n}\n"],"names":[],"mappings":";;;AAYO,IAAA,AAAK,wCAAA;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/file.utils.ts"],"sourcesContent":["import { Assistant, AssistantConfiguration } from '../models/assistant.models';\nimport { Message } from '../models/chat.models';\nimport { Stage } from '../models/instruction.models';\n\nexport const handleFileDownload = (fileName: string, fileUrl: string, downloadLink: HTMLAnchorElement | null) => {\n  if (!fileUrl || !downloadLink) return;\n\n  downloadLink.href = fileUrl;\n  downloadLink.download = fileName;\n  downloadLink.click();\n};\n\nexport const generateAssistantFile = ({ name }: Assistant, config: AssistantConfiguration | null) => {\n  const { stages, instructions, onboarding } = config || {};\n  const adjustMarkdownHeaders = (content?: string | null) => content?.replace(/#{1,5} /gm, (match) => `##${match}`);\n  const stagesInstructions = stages?.map(\n    ({ name, instructions, analyzer }: Stage) =>\n      `### ${name}\\n\\n #### Instructions:\\n\\n${adjustMarkdownHeaders(instructions)}\\n\\n #### Analyzer:\\n\\n${adjustMarkdownHeaders(analyzer)}\\n\\n`\n  );\n  const onboardingInstructions = onboarding\n    ? `\\n\\n ## Onboarding Instructions:\\n\\n ${adjustMarkdownHeaders(onboarding)}`\n    : '';\n  const content = `# ${name}\\n\\n ## Main Instructions:\\n\\n ${adjustMarkdownHeaders(instructions)}${onboardingInstructions}\\n\\n ## Stages:\\n\\n ${stagesInstructions?.join('\\n\\n')}`;\n\n  const blob = new Blob([content], { type: 'text/markdown' });\n\n  return URL.createObjectURL(blob);\n};\n\nexport const generateChatFile = (messages: Message[]) => {\n  const content: string = messages.reduce(\n    (text: string, { role, content }: Message) => text + `**[${role}]:** ${content}\\n\\n`,\n    '# Chat Transcription:\\n\\n'\n  );\n\n  const blob = new Blob([content], { type: 'text/markdown' });\n\n  return URL.createObjectURL(blob);\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,qBAAqB,CAAC,UAAkB,SAAiB;IACpE,IAAI,CAAC,WAAW,CAAC,cAAc;IAE/B,aAAa,IAAI,GAAG;IACpB,aAAa,QAAQ,GAAG;IACxB,aAAa,KAAK;AACpB;AAEO,MAAM,wBAAwB,CAAC,EAAE,IAAI,EAAa,EAAE;IACzD,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC;IACxD,MAAM,wBAAwB,CAAC,UAA4B,SAAS,QAAQ,aAAa,CAAC,QAAU,CAAC,EAAE,EAAE,OAAO;IAChH,MAAM,qBAAqB,QAAQ,IACjC,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAS,GACtC,CAAC,IAAI,EAAE,KAAK,2BAA2B,EAAE,sBAAsB,cAAc,uBAAuB,EAAE,sBAAsB,UAAU,IAAI,CAAC;IAE/I,MAAM,yBAAyB,aAC3B,CAAC,qCAAqC,EAAE,sBAAsB,aAAa,GAC3E;IACJ,MAAM,UAAU,CAAC,EAAE,EAAE,KAAK,+BAA+B,EAAE,sBAAsB,gBAAgB,uBAAuB,oBAAoB,EAAE,oBAAoB,KAAK,SAAS;IAEhL,MAAM,OAAO,IAAI,KAAK;QAAC;KAAQ,EAAE;QAAE,MAAM;IAAgB;IAEzD,OAAO,IAAI,eAAe,CAAC;AAC7B;AAEO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,UAAkB,SAAS,MAAM,CACrC,CAAC,MAAc,EAAE,IAAI,EAAE,OAAO,EAAW,GAAK,OAAO,CAAC,GAAG,EAAE,KAAK,KAAK,EAAE,QAAQ,IAAI,CAAC,EACpF;IAGF,MAAM,OAAO,IAAI,KAAK;QAAC;KAAQ,EAAE;QAAE,MAAM;IAAgB;IAEzD,OAAO,IAAI,eAAe,CAAC;AAC7B","debugId":null}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/assistantActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { PriceConfiguration } from '@prisma/client';\n\nimport { Assistant, AssistantConfiguration, AssistantEditable, AssistantMeta } from '@/lib/models/assistant.models';\nimport { State, Template } from '@/lib/models/common.models';\nimport { assistantPriceSchema, assistantSchema, mapRelationConfig } from '@/lib/utils/db.utils';\nimport {\n  createUserAssistant,\n  deleteUserAssistant,\n  duplicateAssistant,\n  getAllTemplates,\n  getUserAssitants,\n  updateAssistantMeta,\n  updateUserAssistant,\n  upsertAssistantPrice,\n} from '../db/assistantClient';\nimport { getFullConfiguration } from '../db/configurationClient';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function getCurrentAssistant(): Promise<string> {\n  try {\n    const { assistantId } = (await verifySession()) || {};\n\n    return assistantId || '';\n  } catch (error) {\n    console.error(`[authActions] Error fetching current assistant`, error);\n\n    return '';\n  }\n}\n\nexport async function getTemplates(): Promise<Template[]> {\n  try {\n    const templates: any[] = await getAllTemplates();\n\n    return templates.map(mapRelationConfig);\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching templates:`, e);\n    return [];\n  }\n}\n\nexport async function getAssistants(include?: any): Promise<Assistant[]> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return [];\n\n    const assistants = await getUserAssitants(userId, include);\n\n    return assistants;\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching assistants for user ${userId}:`, e);\n    return [];\n  }\n}\n\nexport async function upsertAssistant(\n  { template, ...assistantData }: AssistantEditable,\n  id?: string\n): Promise<State<Assistant | null>> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n    let assistant;\n\n    if (!userId) return { value: null };\n\n    const parsedData = assistantSchema.safeParse({ template, ...assistantData });\n\n    if (!parsedData.success) {\n      return { errors: parsedData.error.errors.map(({ message, path }) => ({ name: path.join('.'), message })) };\n    }\n\n    if (!!id) {\n      assistant = await updateUserAssistant(userId, id, {\n        name: assistantData.name,\n        description: assistantData.description,\n        mode: assistantData.mode,\n        status: assistantData.status,\n      });\n    } else {\n      assistant = await createUserAssistant(userId, assistantData, template as any);\n    }\n\n    revalidateTag('assistants');\n\n    return { value: assistant };\n  } catch (e) {\n    console.error(`[assistantClient] Error ${!!id ? 'updating' : 'creating'} assistant for user ${userId}:`, e);\n    return { value: null, error: '' };\n  }\n}\n\nexport async function getAssistantConfiguration(\n  id?: string,\n  full: boolean = true\n): Promise<AssistantConfiguration | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    return (await getFullConfiguration(assistantId || '', full)) as any;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function createCopyAssistant(assistant: Assistant): Promise<Assistant | null> {\n  try {\n    const userId = await getSessionUser();\n\n    if (!assistant || !userId) {\n      console.warn('Assistant not passed or user not authenticated!');\n      return null;\n    }\n\n    const copy = await duplicateAssistant(userId, assistant);\n    revalidateTag('assistants');\n\n    return copy;\n  } catch (error) {\n    console.error(`[instructionsClient] Error creating copy of assistant ${assistant.id}:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaData(id: string, data: Partial<AssistantMeta>): Promise<AssistantMeta | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    const updatedMeta = await updateAssistantMeta(assistantId, data as any);\n\n    revalidateTag('assistants');\n    return updatedMeta;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaPrice(\n  assistant: Assistant,\n  formData: FormData\n): Promise<State<PriceConfiguration | null>> {\n  let assistantId;\n  try {\n    assistantId = assistant.id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.unexpectedError', value: null };\n    }\n    const price = [...formData].reduce((data: any, [key, value]: any) => ({ ...data, [key]: value }), {});\n    const validatedData = assistantPriceSchema.parse(price);\n\n    if (validatedData instanceof Error) {\n      return { error: validatedData.message };\n    }\n\n    const updatedPrice = await upsertAssistantPrice(assistant.meta?.id || '', {\n      ...validatedData,\n      trialDays: !!validatedData.trialDays ? 14 : null,\n    } as any);\n\n    revalidateTag('assistants');\n    return { successMessage: 'General.successMessages.dataSaved', value: updatedPrice };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} meta price data:`, error);\n\n    return { error: 'General.errors.unexpectedError', value: null };\n  }\n}\n\nexport async function deleteAssistant(id: string) {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return;\n\n    await deleteUserAssistant(userId, id);\n    revalidateTag('assistants');\n  } catch (error) {\n    console.error(`[assistantClient] Error removing user ${userId} assistant ${id}:`, error);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiGsB,4BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/chatActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\n\nimport { AnalyzeStageData } from '@/lib/models/api.models';\nimport { Chat, ChatInfo, Message } from '@/lib/models/chat.models';\nimport { generateSessionName } from '@/lib/utils/chat.utils';\nimport {\n  createChat,\n  getUserChat,\n  getUserChats,\n  removeChat,\n  updateLastMessageInChat,\n  updateUserChat,\n} from '../db/chatClient';\nimport { getFirstStage } from './instructionsActions';\nimport { sendMessage } from './messagesAction';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function handleStageAnalysis(chatId: string, stageAnalysis: AnalyzeStageData | null): Promise<void> {\n  try {\n    if (!stageAnalysis) return;\n\n    const { transition_required, current_stage, next_stage } = stageAnalysis;\n\n    const [chat] = await Promise.all([\n      updateUserChat(chatId, {\n        stageAnalysis,\n        currentStage: transition_required ? next_stage : current_stage,\n      }),\n      updateLastMessageInChat(chatId, { stageAnalysis: JSON.stringify(stageAnalysis) }),\n    ]);\n\n    const eventEmitter = (await import('@/lib/eventEmitter')).default;\n    eventEmitter.emit(`message:${chat.userId}`, {\n      user_id: chat.userId,\n      event: 'chat-update',\n      data: { chatId: chat.id, type: 'stage-analysis' },\n    });\n  } catch (error) {\n    console.error(`[chatActions] error during saving chat ${chatId} stage analysis`, error);\n  }\n}\n\nexport async function getChats(): Promise<any> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    return userId ? await getUserChats(userId) : [];\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return [];\n  }\n}\n\nexport async function getChat(id: string): Promise<Chat | null> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return null;\n\n    const chat = await getUserChat(id, userId);\n\n    return chat as any;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n}\n\nexport async function deleteChat(chatId: string) {\n  let user_id;\n  try {\n    user_id = (await getSessionUser()) || '';\n    await removeChat(user_id, chatId);\n\n    revalidateTag(`chats`);\n  } catch (error) {\n    console.error(`[chatsActions] Error during deleting userr ${user_id} chat ${chatId}: `, error);\n  }\n}\n\nexport async function createNewChat(userId: string, assistantId: string): Promise<string> {\n  try {\n    const firstStage = await getFirstStage();\n    const newChat = await createChat(userId, {\n      currentStage: firstStage?.name,\n      name: generateSessionName(),\n      assistantId,\n    });\n\n    return newChat.id;\n  } catch (error) {\n    console.error(`[chatsActions] Error creating new chat for user ${userId}:`, error);\n\n    return '';\n  }\n}\n\nexport async function updateChat(\n  currentChatId: string | undefined,\n  messages: Message[],\n  chatInfo: ChatInfo\n): Promise<string> {\n  let user_id;\n  try {\n    const { userId, assistantId } = (await verifySession()) || {};\n    user_id = userId;\n\n    if (!userId || !assistantId) return '';\n\n    const [newMessage, ...prevMessages] = messages;\n    const chat_id = currentChatId || (await createNewChat(userId, assistantId));\n    await sendMessage({ userId, assistantId, newMessage, prevMessages, chat_id, chatInfo });\n\n    !currentChatId && revalidateTag(`chats`);\n    // TODO: instead revalidate try to return assistant message directly\n    return chat_id;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${user_id} chats:`, error);\n\n    return '';\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyDsB,UAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Tooltip.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, useState } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nexport default function Tooltip({\n  initialShow,\n  iconClass,\n  tooltipClassName,\n  tooltipLabelClassName,\n  tooltipLabel,\n  className,\n  children,\n}: {\n  initialShow?: boolean;\n  iconClass: string;\n  tooltipClassName?: string;\n  tooltipLabelClassName?: string;\n  tooltipLabel?: string;\n  className?: string;\n  children?: ReactNode;\n}) {\n  const t = useTranslations();\n  const [showTooltip, setShowTooltip] = useState(initialShow ?? false);\n\n  return (\n    <div className={twMerge('relative flex flex-col items-center justify-center', className)}>\n      <span\n        tabIndex={0}\n        className={twMerge('cursor-pointer text-lg text-dark-aquamarine', iconClass)}\n        onClick={() => setShowTooltip(true)}\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(initialShow ?? false)}\n      ></span>\n      <div\n        className={twMerge(\n          'absolute bottom-full left-1/3 z-20 flex flex-grow -translate-x-1/2 items-center justify-end',\n          showTooltip ? 'h-auto w-96' : 'h-0 w-0',\n          tooltipClassName\n        )}\n      >\n        {showTooltip && (\n          <div\n            className={twMerge(\n              'text-nowrap rounded-xl bg-main px-2.5 py-1.5 text-xs text-background',\n              tooltipLabelClassName\n            )}\n          >\n            {tooltipLabel && t(tooltipLabel)}\n            {children}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,QAAQ,EAC9B,WAAW,EACX,SAAS,EACT,gBAAgB,EAChB,qBAAqB,EACrB,YAAY,EACZ,SAAS,EACT,QAAQ,EAST;;IACC,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,eAAe;IAE9D,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,sDAAsD;;0BAC5E,6LAAC;gBACC,UAAU;gBACV,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,+CAA+C;gBAClE,SAAS,IAAM,eAAe;gBAC9B,cAAc,IAAM,eAAe;gBACnC,cAAc,IAAM,eAAe,eAAe;;;;;;0BAEpD,6LAAC;gBACC,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,+FACA,cAAc,gBAAgB,WAC9B;0BAGD,6BACC,6LAAC;oBACC,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,wEACA;;wBAGD,gBAAgB,EAAE;wBAClB;;;;;;;;;;;;;;;;;;AAMb;GAlDwB;;QAiBZ,yMAAA,CAAA,kBAAe;;;KAjBH","debugId":null}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/FunctionalButtons.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useLocale, useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { useAsideContext } from '@/contexts/AsideContext';\nimport { PrivateRoutes } from '@/lib/constants';\nimport { HeapTrackEvent } from '@/lib/models/analytic.models';\nimport { Assistant } from '@/lib/models/assistant.models';\nimport { Chat } from '@/lib/models/chat.models';\nimport { User } from '@/lib/models/common.models';\nimport { heapAnalytics } from '@/lib/services/HeapAnalytics';\nimport { isAssistantCreationAllowed } from '@/lib/utils/common.utils';\nimport { getFomatedDate } from '@/lib/utils/date.utils';\nimport { generateAssistantFile, generateChatFile, handleFileDownload } from '@/lib/utils/file.utils';\nimport { getAssistantConfiguration } from '@/server/actions/assistantActions';\nimport { getChat } from '@/server/actions/chatActions';\nimport { Button } from './Button';\nimport Tooltip from './Tooltip';\n\nexport function AsideToggleButton({\n  className,\n  label,\n  closedLabel,\n  open,\n  iconClassName,\n  id,\n}: {\n  id?: string;\n  className?: string;\n  label?: string;\n  open: boolean;\n  closedLabel?: string;\n  iconClassName?: string;\n}) {\n  const { toggleAside, isAsideOpen } = useAsideContext();\n\n  if (open && isAsideOpen) return null;\n\n  return (\n    <Button id={id} variant=\"solid\" color=\"gray\" onClick={toggleAside} className={`z-10 w-max px-3.5 ${className}`}>\n      <i className={`${!isAsideOpen ? 'cbi-arrow-right' : 'cbi-arrow-left'} text-lg ${iconClassName}`} />\n\n      {closedLabel && !isAsideOpen ? closedLabel : label}\n    </Button>\n  );\n}\n\nexport function NewChatButton() {\n  const t = useTranslations();\n  const [showNotification, setShowNotification] = useState(false);\n\n  const handleShowNotification = async () => {\n    heapAnalytics.trackEvent(HeapTrackEvent.create_new_chat);\n    setShowNotification(true);\n    setTimeout(() => setShowNotification(false), 2000);\n  };\n\n  return (\n    <>\n      {showNotification && (\n        <div className=\"absolute left-1/2 top-1/2 flex -translate-x-1/2 -translate-y-1/2 flex-col items-center justify-center gap-y-2.5\">\n          <i className=\"cbi-tick-circle-fill !text-6xl text-main\"></i>\n          <p className=\"flex flex-col gap-y-1 text-center text-main\">\n            <span className=\"text-base\">{t('Chat.newChatTitle')}</span>\n            <span className=\"text-sm\">{t('Chat.newChatSubtitle')}</span>\n          </p>\n        </div>\n      )}\n      <Button\n        href=\"/\"\n        variant=\"solid\"\n        color=\"aquamarine\"\n        className=\"inline-flex items-center justify-center px-6 py-3 text-lg\"\n        onClick={handleShowNotification}\n      >\n        <i className=\"cbi-edit\"></i>\n        {t('Chat.newChatButton')}\n      </Button>\n    </>\n  );\n}\n\nexport function NewAssistantButton({\n  user,\n  assistants,\n  className,\n  labelKey,\n  iconClassName,\n  onClick,\n}: {\n  user: User | null;\n  assistants: Assistant[];\n  className?: string;\n  iconClassName?: string;\n  labelKey?: string;\n  onClick?: () => void;\n}) {\n  const t = useTranslations();\n  const isCreationAllowed = useMemo(\n    () => isAssistantCreationAllowed(user, assistants),\n    [user?.subscription, assistants.length]\n  );\n\n  return isCreationAllowed ? (\n    <>\n      <Button\n        id=\"assistant-manage\"\n        variant=\"solid\"\n        color=\"primary\"\n        className={twMerge(\n          'w-full text-nowrap rounded-xl p-3 text-base font-semibold text-main hover:z-20 hover:bg-background',\n          className\n        )}\n        href={`/create-agent`}\n        onClick={() => onClick?.()}\n      >\n        <i className={`cbi-add-square ${iconClassName}`} />\n        {t(labelKey || 'Assistants.createButton')}\n      </Button>\n    </>\n  ) : null;\n}\n\nexport function CopyToClipboardButton({\n  searchParams,\n  titileKey,\n  tooltipKey,\n  icon,\n  variant,\n  color,\n  className,\n  disabled,\n}: {\n  searchParams: string;\n  titileKey: string;\n  tooltipKey: string;\n  icon?: string;\n  variant?: any;\n  color?: any;\n  className?: string;\n  disabled?: boolean;\n}) {\n  const t = useTranslations();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const sharableLink = process.env.SHARE_LINK || 'https://coachbot.ai/chat';\n\n  const copyToClipboard = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(`${sharableLink}?${searchParams}`);\n\n      setShowTooltip(true);\n      setTimeout(() => {\n        setShowTooltip(false);\n      }, 1500);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  }, []);\n\n  return (\n    <div className=\"relative flex items-center\">\n      <Button\n        {...(variant && { variant })}\n        {...(color && { color })}\n        disabled={disabled}\n        className={twMerge(className || 'm-0 items-center text-nowrap p-0 text-sm text-storm-gray hover:text-main')}\n        onClick={copyToClipboard}\n      >\n        <i className={`text-lg leading-3 ${icon ?? 'cbi-export'}`} />\n        {t(titileKey)}\n      </Button>\n      {showTooltip && (\n        <Tooltip\n          tooltipClassName=\"-left-full w-fit -translate-y-2/3 -translate-x-[85%]\"\n          tooltipLabelClassName=\"py-0.5\"\n          initialShow={true}\n          iconClass={''}\n          tooltipLabel={tooltipKey}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function ExportAssistantButton({\n  assistant,\n  callback,\n  className,\n  iconClassName,\n}: {\n  assistant: Assistant;\n  callback?: () => any;\n  className?: string;\n  iconClassName?: string;\n}) {\n  const t = useTranslations();\n  const [loading, setLoading] = useState(false);\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null);\n\n  const handleExport = async () => {\n    try {\n      setLoading(true);\n      const assistantConfig = await getAssistantConfiguration(assistant.id);\n      const fileUrl = generateAssistantFile(assistant, assistantConfig);\n      const fileName = `${assistant.name.split(' ').join('_')}-instructions.md`;\n\n      handleFileDownload(fileName, fileUrl, downloadLinkRef.current);\n    } catch (error) {\n      console.error('Error exporting assistant file:', error);\n    } finally {\n      setLoading(false);\n      callback?.();\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={twMerge(\n          'm-0 items-center text-nowrap rounded-none border-0 p-0 text-sm text-storm-gray hover:text-main',\n          loading && 'pointer-events-none animate-pulse',\n          className\n        )}\n        onClick={handleExport}\n      >\n        <i className={`cbi-document-download text-xl ${iconClassName}`} />\n        {t('Assistants.downloadButton')}\n      </Button>\n      <a className=\"hidden\" ref={downloadLinkRef} href=\"\" />\n    </>\n  );\n}\n\nexport function ExportChatButton({ chat, className }: { chat: Chat; className?: string; iconClassName?: string }) {\n  const locale = useLocale();\n  const [loading, setLoading] = useState(false);\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null);\n  const date = getFomatedDate(chat.created_at, locale, {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  const handleExport = async () => {\n    try {\n      setLoading(true);\n      const fullChat = await getChat(chat.id);\n\n      if (!fullChat?.Messages?.length) return;\n\n      const fileUrl = generateChatFile(fullChat.Messages.reverse() || []);\n      const fileName = `chat-transcription-${date.replace(',', '').replace(/\\s+/g, '-')}.md`;\n\n      handleFileDownload(fileName, fileUrl, downloadLinkRef.current);\n    } catch (error) {\n      console.error('Error exporting chat file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={twMerge(\n          'cbi-import m-0 items-center text-nowrap rounded-none border-0 p-0 text-xl text-storm-gray hover:text-main',\n          loading && 'pointer-events-none animate-pulse',\n          className\n        )}\n        onClick={handleExport}\n      />\n      <a className=\"hidden\" ref={downloadLinkRef} href=\"\" />\n    </>\n  );\n}\n\nexport default function RedirectBack() {\n  const router = useRouter();\n\n  useEffect(() => {\n    router.back();\n  }, [router]);\n\n  return null;\n}\n\nexport function AccountToggleButton({ className }: { className?: string }) {\n  const pathname = usePathname();\n  const t = useTranslations();\n  const isAccountPath = pathname === PrivateRoutes.account;\n\n  return (\n    <Button variant=\"outline\" color=\"darkGray\" href={isAccountPath ? '/' : PrivateRoutes.account} className={className}>\n      <i className=\"cbi-close-circle text-lg\"></i>\n      {t(isAccountPath ? 'General.Header.accountButton' : 'General.Header.backToAccountButton')}\n    </Button>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Logo.tsx"],"sourcesContent":["import { memo } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\nexport const Logo = memo(function Logo({ className }: { className?: string }) {\n  return (\n    <Link prefetch={false} className={`relative z-10 flex h-6 items-center sm:h-7 xl:h-8 ${className}`} href=\"/\">\n      <Image\n        src={'/images/StudioAiCoachLogo.svg'}\n        alt=\"CoachBot logo\"\n        className={'h-full w-auto'}\n        priority={true}\n        width={100}\n        height={20}\n      />\n    </Link>\n  );\n});\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,OAAE,SAAS,KAAK,EAAE,SAAS,EAA0B;IAC1E,qBACE,6LAAC,+JAAA,CAAA,UAAI;QAAC,UAAU;QAAO,WAAW,CAAC,kDAAkD,EAAE,WAAW;QAAE,MAAK;kBACvG,cAAA,6LAAC,gIAAA,CAAA,UAAK;YACJ,KAAK;YACL,KAAI;YACJ,WAAW;YACX,UAAU;YACV,OAAO;YACP,QAAQ;;;;;;;;;;;AAIhB","debugId":null}},
    {"offset": {"line": 1213, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Loaders.tsx"],"sourcesContent":["import { memo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Logo } from './Logo';\n\nexport const Spinner = memo(function Spinner({\n  className,\n  withText,\n  text,\n  textClassName,\n  icon = 'cbi-Loader',\n}: {\n  className?: string;\n  withText?: boolean;\n  text?: string;\n  textClassName?: string;\n  icon?: string;\n}) {\n  return (\n    <>\n      <p className={twMerge('flex items-center gap-x-3 text-xl', className)}>\n        <span className={twMerge('gradient-loader inline-flex animate-spin text-xl', icon)}></span>\n        {withText && <span className={twMerge('text-sm text-light-gray', textClassName)}>{text ?? 'Loading...'}</span>}\n      </p>\n    </>\n  );\n});\n\nexport const FullScreenLoader = memo(function FullScreenLoader({ className }: { className?: string }) {\n  return (\n    <>\n      <main className={twMerge('flex h-svh w-svw flex-col items-center justify-center', className)}>\n        <div className=\"flex flex-col items-center gap-y-7\">\n          <Logo className=\"h-8 sm:h-10 xl:h-12\" />\n          <Spinner withText={true} className=\"text-2xl\" />\n        </div>\n      </main>\n    </>\n  );\n});\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEO,MAAM,wBAAU,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,EAAE,SAAS,QAAQ,EAC3C,SAAS,EACT,QAAQ,EACR,IAAI,EACJ,aAAa,EACb,OAAO,YAAY,EAOpB;IACC,qBACE;kBACE,cAAA,6LAAC;YAAE,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,qCAAqC;;8BACzD,6LAAC;oBAAK,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,oDAAoD;;;;;;gBAC5E,0BAAY,6LAAC;oBAAK,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,2BAA2B;8BAAiB,QAAQ;;;;;;;;;;;;;AAIlG;KArBa;AAuBN,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,QAAE,SAAS,iBAAiB,EAAE,SAAS,EAA0B;IAClG,qBACE;kBACE,cAAA,6LAAC;YAAK,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,yDAAyD;sBAChF,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;kCAChB,6LAAC;wBAAQ,UAAU;wBAAM,WAAU;;;;;;;;;;;;;;;;;;AAK7C","debugId":null}},
    {"offset": {"line": 1303, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Modal.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Dialog, DialogPanel, DialogTitle } from '@headlessui/react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from './Button';\nimport { Spinner } from './Loaders';\n\nconst variants = {\n  gray: 'border border-storm-gray text-main',\n  aquamarine: 'border border-dark-aquamarine text-dark-aquamarine',\n  red: 'border border-salmon text-salmon',\n};\n\nexport interface ModalProps {\n  variant: string;\n  children?: React.ReactNode;\n  isOpen: boolean;\n  isLoading?: boolean;\n  titleKey: string;\n  titleIcon?: string;\n  buttonTitleKey?: string;\n  cancelButtonTitleKey?: string;\n  buttonIcon?: string;\n  className?: string;\n  confirmButtonClass?: string;\n  titleClass?: string;\n  disabled?: boolean;\n  showButtons?: boolean;\n  confirm?: (value?: any) => Promise<any> | any;\n  closeModal?: () => void;\n}\n\nexport function Modal({\n  children,\n  isOpen,\n  closeModal,\n  titleKey,\n  titleIcon,\n  buttonTitleKey,\n  cancelButtonTitleKey,\n  confirmButtonClass,\n  titleClass,\n  buttonIcon,\n  disabled,\n  className,\n  confirm,\n  variant,\n  showButtons = true,\n}: ModalProps) {\n  const [showLoader, setShowLoader] = useState(false);\n  const t = useTranslations();\n  const router = useRouter();\n\n  const handleClose = () => {\n    closeModal ? closeModal() : router.back();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      setShowLoader(false);\n    }\n  }, [isOpen]);\n\n  return (\n    <Dialog as=\"div\" open={isOpen} className=\"relative z-[100]\" onClose={handleClose}>\n      <div className=\"fixed inset-0 bg-violet-950/75\">\n        <div className=\"fixed inset-0 z-10 mx-auto w-fit min-w-96\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center sm:items-center sm:p-0\">\n            <DialogPanel\n              className={twMerge(\n                'relative flex max-h-[90vh] w-full min-w-96 transform flex-col gap-y-5 overflow-y-auto rounded-2xl bg-gunmetal p-5 text-left shadow-xl transition-all sm:p-7',\n                (variants as any)[variant]\n              )}\n            >\n              <Button\n                type=\"button\"\n                onClick={handleClose}\n                className={twMerge(\n                  'cbi-close-circle absolute right-0 top-0 p-3 text-light-gray',\n                  'cursor-pointer bg-inherit outline-none hover:bg-inherit hover:text-main active:bg-inherit'\n                )}\n              />\n\n              <div className={twMerge('flex items-start')}>\n                <div className={twMerge('flex w-full flex-col gap-8 text-left', className)}>\n                  <DialogTitle\n                    as=\"h3\"\n                    className={twMerge('inline-flex items-center gap-x-2 text-lg font-medium uppercase', titleClass)}\n                  >\n                    {titleIcon && <i className={titleIcon}></i>}\n                    {t(titleKey)}\n                  </DialogTitle>\n\n                  {children}\n                </div>\n              </div>\n\n              {showButtons && (\n                <div className=\"flex w-1/3 flex-row justify-end gap-x-1 self-end\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    color=\"darkGray\"\n                    disabled={showLoader}\n                    onClick={handleClose}\n                    className=\"flex-grow px-10\"\n                  >\n                    {t(cancelButtonTitleKey || 'General.cancelButton')}\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    variant=\"solid\"\n                    color=\"gray\"\n                    disabled={disabled || showLoader}\n                    onClick={() => {\n                      setShowLoader(true);\n                      if (confirm) confirm();\n                    }}\n                    className={twMerge(\n                      'inline-flex flex-grow items-center text-nowrap px-7 py-3 text-lg disabled:opacity-30',\n                      showLoader && 'animate-pulse',\n                      confirmButtonClass\n                    )}\n                  >\n                    {showLoader ? <Spinner /> : buttonIcon && <i className={buttonIcon}></i>}\n                    {buttonTitleKey && t(buttonTitleKey)}\n                  </Button>\n                </div>\n              )}\n            </DialogPanel>\n          </div>\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AATA;;;;;;;;AAWA,MAAM,WAAW;IACf,MAAM;IACN,YAAY;IACZ,KAAK;AACP;AAqBO,SAAS,MAAM,EACpB,QAAQ,EACR,MAAM,EACN,UAAU,EACV,QAAQ,EACR,SAAS,EACT,cAAc,EACd,oBAAoB,EACpB,kBAAkB,EAClB,UAAU,EACV,UAAU,EACV,QAAQ,EACR,SAAS,EACT,OAAO,EACP,OAAO,EACP,cAAc,IAAI,EACP;;IACX,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAClB,aAAa,eAAe,OAAO,IAAI;IACzC;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,IAAI,CAAC,QAAQ;gBACX,cAAc;YAChB;QACF;0BAAG;QAAC;KAAO;IAEX,qBACE,6LAAC,kLAAA,CAAA,SAAM;QAAC,IAAG;QAAM,MAAM;QAAQ,WAAU;QAAmB,SAAS;kBACnE,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,kLAAA,CAAA,cAAW;wBACV,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,+JACA,AAAC,QAAgB,CAAC,QAAQ;;0CAG5B,6LAAC,2HAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAS;gCACT,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,+DACA;;;;;;0CAIJ,6LAAC;gCAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;0CACtB,cAAA,6LAAC;oCAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,wCAAwC;;sDAC9D,6LAAC,kLAAA,CAAA,cAAW;4CACV,IAAG;4CACH,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,kEAAkE;;gDAEpF,2BAAa,6LAAC;oDAAE,WAAW;;;;;;gDAC3B,EAAE;;;;;;;wCAGJ;;;;;;;;;;;;4BAIJ,6BACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,2HAAA,CAAA,SAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,OAAM;wCACN,UAAU;wCACV,SAAS;wCACT,WAAU;kDAET,EAAE,wBAAwB;;;;;;kDAG7B,6LAAC,2HAAA,CAAA,SAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,OAAM;wCACN,UAAU,YAAY;wCACtB,SAAS;4CACP,cAAc;4CACd,IAAI,SAAS;wCACf;wCACA,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,wFACA,cAAc,iBACd;;4CAGD,2BAAa,6LAAC,4HAAA,CAAA,UAAO;;;;uDAAM,4BAAc,6LAAC;gDAAE,WAAW;;;;;;4CACvD,kBAAkB,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzC;GAxGgB;;QAkBJ,yMAAA,CAAA,kBAAe;QACV,qIAAA,CAAA,YAAS;;;KAnBV","debugId":null}},
    {"offset": {"line": 1500, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/assistant/AssistantSelect.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback, useRef, useState } from 'react';\nimport { usePathname } from 'next/navigation';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { useRootContext } from '@/contexts/RootContextProvider';\nimport { useIsClient } from '@/hooks/useIsClient';\nimport { PrivateRoutes } from '@/lib/constants';\nimport { Assistant } from '@/lib/models/assistant.models';\nimport { User } from '@/lib/models/common.models';\nimport { deleteAssistant } from '@/server/actions/assistantActions';\nimport { Button } from '@/shared/Button';\nimport CollapsiblePanel from '@/shared/CollapsiblePanel';\nimport { CopyToClipboardButton, ExportAssistantButton, NewAssistantButton } from '@/shared/FunctionalButtons';\nimport { Modal } from '@/shared/Modal';\n\ninterface AssistantSelectBaseProps {\n  assistants: Assistant[];\n  selectedAssistant: Assistant | null;\n  updateSelectedAssistant: (assistant: Assistant) => Promise<void>;\n  user: User | null;\n  className?: string;\n  light?: boolean;\n}\n\nexport function AssistantSelectBase({\n  assistants,\n  user,\n  selectedAssistant,\n  className,\n  light,\n  updateSelectedAssistant,\n}: AssistantSelectBaseProps) {\n  const t = useTranslations();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [assistant, setAssistant] = useState<Assistant | null>(null);\n  const isClient = useIsClient();\n  const toggleButtonRef = useRef<HTMLButtonElement | null>(null);\n  const pathname = usePathname();\n\n  const handleDelete = useCallback(async () => {\n    if (assistant) {\n      await deleteAssistant(assistant?.id);\n      setModalOpen(false);\n    }\n  }, [assistant]);\n\n  if (pathname.startsWith(PrivateRoutes.dashboard)) return null;\n\n  if (!assistants?.length) {\n    return (\n      <NewAssistantButton\n        user={user}\n        assistants={assistants}\n        className=\"absolute right-1 top-1 z-10 flex w-1/3 max-w-96\"\n      />\n    );\n  }\n\n  return (\n    <div\n      id=\"assistant-manage\"\n      className={twMerge(\n        'absolute right-1 top-1 z-20 flex max-h-[calc(100%-0.5rem)] w-1/3 min-w-[21rem] max-w-lg flex-grow flex-col',\n        className\n      )}\n    >\n      <CollapsiblePanel\n        title={!light ? t('Assistants.selectTitle') : ''}\n        subTitle={isClient ? selectedAssistant?.name : ''}\n        className={`group border-graphic/[6%] ${light ? 'bg-graphic/[14%] hover:border-main' : 'bg-gunmetal hover:border-dark-aquamarine hover:bg-background'} p-2 data-[open]:border-dark-aquamarine`}\n        toggleClass={`${light ? 'text-light-gray group-hover:text-main' : 'text-dark-aquamarine'}`}\n        iconClass={`cbi-cpu size-8 aspect-square border ${light ? 'border-graphic/[14%] text-light-gray' : 'border-dark-aquamarine text-dark-aquamarine'} rounded-lg self-center`}\n        titleClass={`text-[.65rem] text-light-gray leading-3 font-semibold -ms-0.5`}\n        subTitleClass={`${light ? 'text-light-gray group-hover:text-main' : 'text-dark-aquamarine'} text-base font-semibold leading-5 line-clamp-2 break-words`}\n        contentClassName=\"p-2.5 data-[open]:pt-2.5 border-dark-aquamarine min-h-0 flex flex-col\"\n        togglerRef={toggleButtonRef}\n        additionalToggler={\n          <Button\n            className={`cbi-setting-2 m-0 p-0 text-[1.2rem] leading-5 ${light ? 'text-light-gray' : 'text-storm-gray'} hover:text-main`}\n            href={'/instructions'}\n          />\n        }\n      >\n        <div className=\"flex min-h-0 flex-col justify-between gap-y-2\">\n          <ul className=\"flex flex-col gap-y-1 overflow-y-auto overflow-x-hidden\">\n            {assistants.map((assistant) => (\n              <li\n                key={assistant.id}\n                className={twMerge(\n                  'relative flex flex-col gap-y-1 rounded-xl p-3.5 hover:bg-dark-aquamarine/[22%]',\n                  selectedAssistant?.id === assistant.id ? 'bg-dark-aquamarine/[22%]' : 'bg-dark-aquamarine/[11%]'\n                )}\n                onClick={async () => {\n                  await updateSelectedAssistant(assistant);\n                  toggleButtonRef.current?.click();\n                }}\n              >\n                {selectedAssistant?.id === assistant.id && <span className=\"cbi-tick-circle absolute right-3 top-3\" />}\n                <h5 className=\"break-words text-lg font-medium text-main\">{assistant.name}</h5>\n                <p className=\"line-clamp-4 break-words text-sm text-light-gray\">{assistant.description}</p>\n                <div className=\"flex items-center justify-between gap-x-1 pt-2\" onClick={(e) => e.stopPropagation()}>\n                  <div className=\"flex min-w-0 gap-x-1\">\n                    <CopyToClipboardButton\n                      searchParams={`cbsas=${assistant.id}`}\n                      tooltipKey={'General.shareLinkSuccess'}\n                      titileKey=\"Assistants.shareTitle\"\n                    />\n                    <ExportAssistantButton\n                      assistant={assistant}\n                      className=\"before:ms-1 before:h-2/3 before:border-l before:border-storm-gray\"\n                    />\n                  </div>\n\n                  <div className=\"flex min-w-0 items-center justify-around gap-x-3\">\n                    <Button\n                      className=\"cbi-edit-2 m-0 p-0 text-storm-gray hover:text-main\"\n                      href={`/create-agent?id=${assistant.id}`}\n                    />\n                    <Button\n                      className=\"cbi-trash m-0 p-0 text-lg leading-3 text-storm-gray hover:text-main\"\n                      onClick={async () => {\n                        setAssistant(assistant);\n                        setModalOpen(true);\n                      }}\n                    />\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n          <NewAssistantButton user={user} assistants={assistants} onClick={() => toggleButtonRef.current?.click()} />\n        </div>\n      </CollapsiblePanel>\n\n      {modalOpen && (\n        <Modal\n          buttonTitleKey={'Assistants.deleteModal.deleteButton'}\n          buttonIcon=\"cbi-trash\"\n          titleIcon=\"cbi-send\"\n          titleKey={`Assistants.deleteModal.title`}\n          variant=\"red\"\n          isOpen={modalOpen}\n          closeModal={() => setModalOpen(false)}\n          confirm={handleDelete}\n        >\n          <div className=\"flex flex-col gap-y-5 text-main\">\n            <p>{t(`Assistants.deleteModal.content`, { name: assistant?.name || '' })}</p>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default function AssistantSelect() {\n  const { assistants, updateSelectedAssistant, selectedAssistant, user } = useRootContext();\n\n  return (\n    <AssistantSelectBase\n      assistants={assistants}\n      selectedAssistant={selectedAssistant}\n      updateSelectedAssistant={updateSelectedAssistant}\n      user={user}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAhBA;;;;;;;;;;;;;AA2BO,SAAS,oBAAoB,EAClC,UAAU,EACV,IAAI,EACJ,iBAAiB,EACjB,SAAS,EACT,KAAK,EACL,uBAAuB,EACE;;IACzB,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7D,MAAM,WAAW,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAA4B;IACzD,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE;YAC/B,IAAI,WAAW;gBACb,MAAM,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE,WAAW;gBACjC,aAAa;YACf;QACF;wDAAG;QAAC;KAAU;IAEd,IAAI,SAAS,UAAU,CAAC,0HAAA,CAAA,gBAAa,CAAC,SAAS,GAAG,OAAO;IAEzD,IAAI,CAAC,YAAY,QAAQ;QACvB,qBACE,6LAAC,sIAAA,CAAA,qBAAkB;YACjB,MAAM;YACN,YAAY;YACZ,WAAU;;;;;;IAGhB;IAEA,qBACE,6LAAC;QACC,IAAG;QACH,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,8GACA;;0BAGF,6LAAC,qIAAA,CAAA,UAAgB;gBACf,OAAO,CAAC,QAAQ,EAAE,4BAA4B;gBAC9C,UAAU,WAAW,mBAAmB,OAAO;gBAC/C,WAAW,CAAC,0BAA0B,EAAE,QAAQ,uCAAuC,+DAA+D,uCAAuC,CAAC;gBAC9L,aAAa,GAAG,QAAQ,0CAA0C,wBAAwB;gBAC1F,WAAW,CAAC,oCAAoC,EAAE,QAAQ,yCAAyC,8CAA8C,uBAAuB,CAAC;gBACzK,YAAY,CAAC,6DAA6D,CAAC;gBAC3E,eAAe,GAAG,QAAQ,0CAA0C,uBAAuB,2DAA2D,CAAC;gBACvJ,kBAAiB;gBACjB,YAAY;gBACZ,iCACE,6LAAC,2HAAA,CAAA,SAAM;oBACL,WAAW,CAAC,8CAA8C,EAAE,QAAQ,oBAAoB,kBAAkB,gBAAgB,CAAC;oBAC3H,MAAM;;;;;;0BAIV,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCACX,WAAW,GAAG,CAAC,CAAC,0BACf,6LAAC;oCAEC,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,kFACA,mBAAmB,OAAO,UAAU,EAAE,GAAG,6BAA6B;oCAExE,SAAS;wCACP,MAAM,wBAAwB;wCAC9B,gBAAgB,OAAO,EAAE;oCAC3B;;wCAEC,mBAAmB,OAAO,UAAU,EAAE,kBAAI,6LAAC;4CAAK,WAAU;;;;;;sDAC3D,6LAAC;4CAAG,WAAU;sDAA6C,UAAU,IAAI;;;;;;sDACzE,6LAAC;4CAAE,WAAU;sDAAoD,UAAU,WAAW;;;;;;sDACtF,6LAAC;4CAAI,WAAU;4CAAiD,SAAS,CAAC,IAAM,EAAE,eAAe;;8DAC/F,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,sIAAA,CAAA,wBAAqB;4DACpB,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;4DACrC,YAAY;4DACZ,WAAU;;;;;;sEAEZ,6LAAC,sIAAA,CAAA,wBAAqB;4DACpB,WAAW;4DACX,WAAU;;;;;;;;;;;;8DAId,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,2HAAA,CAAA,SAAM;4DACL,WAAU;4DACV,MAAM,CAAC,iBAAiB,EAAE,UAAU,EAAE,EAAE;;;;;;sEAE1C,6LAAC,2HAAA,CAAA,SAAM;4DACL,WAAU;4DACV,SAAS;gEACP,aAAa;gEACb,aAAa;4DACf;;;;;;;;;;;;;;;;;;;mCApCD,UAAU,EAAE;;;;;;;;;;sCA2CvB,6LAAC,sIAAA,CAAA,qBAAkB;4BAAC,MAAM;4BAAM,YAAY;4BAAY,SAAS,IAAM,gBAAgB,OAAO,EAAE;;;;;;;;;;;;;;;;;YAInG,2BACC,6LAAC,0HAAA,CAAA,QAAK;gBACJ,gBAAgB;gBAChB,YAAW;gBACX,WAAU;gBACV,UAAU,CAAC,4BAA4B,CAAC;gBACxC,SAAQ;gBACR,QAAQ;gBACR,YAAY,IAAM,aAAa;gBAC/B,SAAS;0BAET,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;kCAAG,EAAE,CAAC,8BAA8B,CAAC,EAAE;4BAAE,MAAM,WAAW,QAAQ;wBAAG;;;;;;;;;;;;;;;;;;;;;;AAMlF;GAhIgB;;QAQJ,yMAAA,CAAA,kBAAe;QAGR,8HAAA,CAAA,cAAW;QAEX,qIAAA,CAAA,cAAW;;;KAbd;AAkID,SAAS;;IACtB,MAAM,EAAE,UAAU,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,iBAAc,AAAD;IAEtF,qBACE,6LAAC;QACC,YAAY;QACZ,mBAAmB;QACnB,yBAAyB;QACzB,MAAM;;;;;;AAGZ;IAXwB;;QACmD,0IAAA,CAAA,iBAAc;;;MADjE","debugId":null}},
    {"offset": {"line": 1791, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/ThemeToggler.tsx"],"sourcesContent":["'use client';\n\nimport { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Theme, useTheme } from '@/contexts/ThemeContext';\n\nconst classNames = {\n  root: 'theme-toggler flex items-center gap-1',\n  label: 'inline-flex items-center cursor-pointer',\n  input: 'sr-only peer',\n  switch: 'relative w-[52px] h-[30px] bg-graphic/[16%] border border-background-border/[26%] rounded-full',\n  switchCircle:\n    \"peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full after:content-[''] after:absolute after:top-[3px] after:start-[3px] after:bg-main  peer-checked:after:bg-yellow after:rounded-full after:h-[22px] after:w-[22px] after:transition-all\",\n  moonIcon: 'cbi-moon text-main !text-xl',\n  sunIcon: 'cbi-sun text-yellow !text-xl',\n};\n\nexport function ThemeToggler({ className }: { className?: string }) {\n  const { theme, toggleTheme } = useTheme();\n\n  const checked = useMemo(() => theme === Theme.LIGHT, [theme]);\n\n  return (\n    <div className={twMerge(classNames.root, className)}>\n      <i className={classNames.moonIcon} />\n\n      <label className={classNames.label}>\n        <input type=\"checkbox\" value=\"\" className={classNames.input} checked={checked} onChange={toggleTheme} />\n        <div className={twMerge(classNames.switch, classNames.switchCircle)} />\n      </label>\n\n      <i className={classNames.sunIcon} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAOA,MAAM,aAAa;IACjB,MAAM;IACN,OAAO;IACP,OAAO;IACP,QAAQ;IACR,cACE;IACF,UAAU;IACV,SAAS;AACX;AAEO,SAAS,aAAa,EAAE,SAAS,EAA0B;;IAChE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,WAAQ,AAAD;IAEtC,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;yCAAE,IAAM,UAAU,mIAAA,CAAA,QAAK,CAAC,KAAK;wCAAE;QAAC;KAAM;IAE5D,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,WAAW,IAAI,EAAE;;0BACvC,6LAAC;gBAAE,WAAW,WAAW,QAAQ;;;;;;0BAEjC,6LAAC;gBAAM,WAAW,WAAW,KAAK;;kCAChC,6LAAC;wBAAM,MAAK;wBAAW,OAAM;wBAAG,WAAW,WAAW,KAAK;wBAAE,SAAS;wBAAS,UAAU;;;;;;kCACzF,6LAAC;wBAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,WAAW,MAAM,EAAE,WAAW,YAAY;;;;;;;;;;;;0BAGpE,6LAAC;gBAAE,WAAW,WAAW,OAAO;;;;;;;;;;;;AAGtC;GAjBgB;;QACiB,mIAAA,CAAA,WAAQ;;;KADzB","debugId":null}},
    {"offset": {"line": 1889, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/layout/TopNavigation.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback } from 'react';\nimport { usePathname } from 'next/navigation';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from '../Button';\n\nconst variantStyles = {\n  main: {\n    nav: 'max-w-xl 2xl:max-w-2xl 3xl:max-w-3xl bg-graphic/[14%] border border-white/[2%]',\n    option: 'basis-1/4 text-light-gray hover:bg-main hover:text-background',\n    selected: 'bg-main text-background',\n  },\n  secondary: {\n    nav: 'max-w-2xl gap-1',\n    option:\n      'text-light-gray text-sm bg-white/[8%] border border-background-border/[18%] hover:border-main hover:text-main px-16 font-medium',\n    selected: 'bg-storm-gray text-main hover:border-background-border/[18%]',\n  },\n};\n\nexport interface NavigationOption {\n  id?: string;\n  label: string;\n  icon?: string;\n  href: string;\n  hidden?: boolean;\n  clickHandler?: (opion: NavigationOption) => void;\n}\n\nexport default function TopNavigation({\n  variant = 'main',\n  strictEqual,\n  navigationOptions,\n  className,\n  optionClassName,\n  optionClickHandler,\n}: {\n  variant: 'main' | 'secondary';\n  strictEqual?: boolean;\n  navigationOptions: NavigationOption[];\n  className?: string;\n  optionClassName?: string;\n  optionClickHandler?: (option: NavigationOption) => void;\n}) {\n  const t = useTranslations();\n  const pathname = usePathname();\n\n  const getIsActive = useCallback(\n    ({ href }: NavigationOption) => (strictEqual ? pathname === href : pathname.startsWith(href)),\n    [strictEqual, pathname]\n  );\n\n  return (\n    <nav className={twMerge('isolate flex flex-grow flex-wrap rounded-lg p-1', variantStyles[variant].nav, className)}>\n      {navigationOptions.map(\n        (option: NavigationOption, id: number) =>\n          !option.hidden && (\n            <Button\n              key={id}\n              id={option.id}\n              href={option.href}\n              className={twMerge(\n                'flex-1 text-nowrap rounded-lg px-3 py-1.5',\n                optionClassName,\n                variantStyles[variant].option,\n                getIsActive(option) && variantStyles[variant].selected\n              )}\n              onClick={() => optionClickHandler?.(option)}\n            >\n              {option.icon && <i className={`${option.icon} text-lg`}></i>}\n              {t(option.label)}\n            </Button>\n          )\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;;;AAPA;;;;;;AASA,MAAM,gBAAgB;IACpB,MAAM;QACJ,KAAK;QACL,QAAQ;QACR,UAAU;IACZ;IACA,WAAW;QACT,KAAK;QACL,QACE;QACF,UAAU;IACZ;AACF;AAWe,SAAS,cAAc,EACpC,UAAU,MAAM,EAChB,WAAW,EACX,iBAAiB,EACjB,SAAS,EACT,eAAe,EACf,kBAAkB,EAQnB;;IACC,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAC5B,CAAC,EAAE,IAAI,EAAoB,GAAM,cAAc,aAAa,OAAO,SAAS,UAAU,CAAC;iDACvF;QAAC;QAAa;KAAS;IAGzB,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,mDAAmD,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE;kBACpG,kBAAkB,GAAG,CACpB,CAAC,QAA0B,KACzB,CAAC,OAAO,MAAM,kBACZ,6LAAC,2HAAA,CAAA,SAAM;gBAEL,IAAI,OAAO,EAAE;gBACb,MAAM,OAAO,IAAI;gBACjB,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,6CACA,iBACA,aAAa,CAAC,QAAQ,CAAC,MAAM,EAC7B,YAAY,WAAW,aAAa,CAAC,QAAQ,CAAC,QAAQ;gBAExD,SAAS,IAAM,qBAAqB;;oBAEnC,OAAO,IAAI,kBAAI,6LAAC;wBAAE,WAAW,GAAG,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;;oBACrD,EAAE,OAAO,KAAK;;eAZV;;;;;;;;;;AAkBnB;GA/CwB;;QAeZ,yMAAA,CAAA,kBAAe;QACR,qIAAA,CAAA,cAAW;;;KAhBN","debugId":null}},
    {"offset": {"line": 1974, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { useAsideContext } from '@/contexts/AsideContext';\nimport { AsideToggleButton } from './FunctionalButtons';\n\nexport default function Sidebar({\n  titleKey,\n  titleClassName,\n  className,\n  contentClassName,\n  children,\n  showOpen,\n  openButtonLabel,\n  openClassName,\n}: {\n  titleKey?: string;\n  titleClassName?: string;\n  className?: string;\n  contentClassName?: string;\n  openButtonLabel?: string;\n  children: ReactNode;\n  showOpen?: boolean;\n  openClassName?: string;\n}) {\n  const t = useTranslations();\n  const { isAsideOpen } = useAsideContext();\n\n  return (\n    <>\n      <div\n        className={twMerge(\n          'group relative z-10 flex min-w-0 max-w-xl shrink-0 flex-col gap-y-5 overflow-hidden rounded-lg bg-white-opacity backdrop-blur-md transition-[width]',\n          className,\n          isAsideOpen ? `me-3 w-1/4 p-2.5 ${openClassName}` : 'w-0'\n        )}\n      >\n        {isAsideOpen && (\n          <>\n            <AsideToggleButton\n              className=\"absolute right-2.5 top-2.5 group-[.hide-toggle]:hidden\"\n              open={false}\n              id=\"sidebar-toggle\"\n            />\n            {titleKey && (\n              <h3 className={twMerge('text-nowrap py-2.5 ps-2 text-[1.25rem] uppercase text-main', titleClassName)}>\n                {t(titleKey)}\n              </h3>\n            )}\n            <div className={twMerge('relative flex min-h-0 flex-grow flex-col gap-y-5 pt-3', contentClassName)}>\n              {children}\n            </div>\n          </>\n        )}\n      </div>\n\n      {showOpen && (\n        <div className=\"absolute top-0.5 flex items-center gap-x-3\">\n          <AsideToggleButton open={true} />\n          <span className=\"text-sm text-storm-gray\">{openButtonLabel && t(openButtonLabel)} </span>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AACA;;;AAPA;;;;;AASe,SAAS,QAAQ,EAC9B,QAAQ,EACR,cAAc,EACd,SAAS,EACT,gBAAgB,EAChB,QAAQ,EACR,QAAQ,EACR,eAAe,EACf,aAAa,EAUd;;IACC,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD;IAEtC,qBACE;;0BACE,6LAAC;gBACC,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,uJACA,WACA,cAAc,CAAC,iBAAiB,EAAE,eAAe,GAAG;0BAGrD,6BACC;;sCACE,6LAAC,sIAAA,CAAA,oBAAiB;4BAChB,WAAU;4BACV,MAAM;4BACN,IAAG;;;;;;wBAEJ,0BACC,6LAAC;4BAAG,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,8DAA8D;sCAClF,EAAE;;;;;;sCAGP,6LAAC;4BAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,yDAAyD;sCAC9E;;;;;;;;;;;;;YAMR,0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,sIAAA,CAAA,oBAAiB;wBAAC,MAAM;;;;;;kCACzB,6LAAC;wBAAK,WAAU;;4BAA2B,mBAAmB,EAAE;4BAAiB;;;;;;;;;;;;;;;AAK3F;GA1DwB;;QAmBZ,yMAAA,CAAA,kBAAe;QACD,mIAAA,CAAA,kBAAe;;;KApBjB","debugId":null}}]
}