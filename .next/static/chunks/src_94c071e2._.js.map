{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/models/assistant.models.ts"],"sourcesContent":["import { PriceCurrency } from './checkout.models';\nimport { ModelConfig, Template, User } from './common.models';\nimport { ModerationRule, Stage, Style } from './instruction.models';\n\nexport enum AssistantMode {\n  fullAccess = 'fullAccess',\n  highLevel = 'high-level',\n  confidential = 'confidential',\n}\n\nexport enum AssistantStatus {\n  published = 'published',\n  draft = 'draft',\n  archived = 'archived',\n}\n\nexport enum Visibility {\n  public = 'public',\n  private = 'private',\n}\n\nexport enum AccessLevel {\n  free = 'free',\n  premium = 'premium',\n}\n\nexport enum AssistantUsageType {\n  general = 'general',\n  unique = 'unique',\n}\n\nexport enum CommunicationMode {\n  text_to_text = 'text_to_text',\n  speech_to_text = 'speech_to_text',\n  voice_to_voice = 'voice_to_voice',\n  video_avatar = 'video_avatar',\n}\n\nexport interface PriceConfiguration {\n  id: string;\n  assistantMeta?: AssistantMeta;\n  assistantMetaId?: string;\n  amount: number | null;\n  monthly: number;\n  yearly?: number | null;\n  currency: PriceCurrency | string;\n  trialDays: number | null;\n}\n\nexport interface AssistantFeedback {\n  id: string;\n  assistantMeta?: AssistantMeta;\n  assistantMetaId?: string;\n  rating: number;\n  title: string;\n  description: string;\n  userId?: string | null;\n  userName?: string | null;\n}\n\nexport interface AssistantConfiguration {\n  id: string;\n  assistant?: Assistant;\n  templateId?: string;\n  template?: Template;\n  modelConfigs: ModelConfig[];\n  moderationRules: ModerationRule[];\n  stages: Stage[];\n  styles: Style[];\n  instructions?: string;\n  onboarding?: string;\n  tokensLimit?: number | null;\n  usageType?: string | AssistantUsageType | null;\n  communicationModes?: CommunicationMode[];\n}\n\nexport interface AssistantMeta {\n  id: string;\n  assistant?: Assistant;\n  visibility: Visibility | string;\n  accessLevel: AccessLevel | string;\n  price?: PriceConfiguration;\n  created_at?: Date | null;\n  updated_at?: Date | null;\n  users?: number;\n  feedbacks?: AssistantFeedback[];\n  whatsapp?: boolean | null;\n}\n\nexport interface Assistant {\n  id: string;\n  name: string;\n  description: string;\n  user?: User;\n  userId?: string | null;\n  created_at: Date | string | null;\n  updated_at: Date | string | null;\n  mode?: AssistantMode | string;\n  status?: AssistantStatus | string;\n  meta?: AssistantMeta;\n  configuration?: AssistantConfiguration;\n  template?: Template;\n}\n\nexport interface AssistantEditable {\n  name: string;\n  description: string;\n  template: Template;\n  mode?: string;\n  status?: string | AssistantStatus;\n}\n"],"names":[],"mappings":";;;;;;;;AAIO,IAAA,AAAK,uCAAA;;;;WAAA;;AAML,IAAA,AAAK,yCAAA;;;;WAAA;;AAML,IAAA,AAAK,oCAAA;;;WAAA;;AAKL,IAAA,AAAK,qCAAA;;;WAAA;;AAKL,IAAA,AAAK,4CAAA;;;WAAA;;AAKL,IAAA,AAAK,2CAAA;;;;;WAAA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/assistantActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { PriceConfiguration } from '@prisma/client';\n\nimport { Assistant, AssistantConfiguration, AssistantEditable, AssistantMeta } from '@/lib/models/assistant.models';\nimport { State, Template } from '@/lib/models/common.models';\nimport { assistantPriceSchema, assistantSchema, mapRelationConfig } from '@/lib/utils/db.utils';\nimport {\n  createUserAssistant,\n  deleteUserAssistant,\n  duplicateAssistant,\n  getAllTemplates,\n  getUserAssitants,\n  updateAssistantMeta,\n  updateUserAssistant,\n  upsertAssistantPrice,\n} from '../db/assistantClient';\nimport { getFullConfiguration } from '../db/configurationClient';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function getCurrentAssistant(): Promise<string> {\n  try {\n    const { assistantId } = (await verifySession()) || {};\n\n    return assistantId || '';\n  } catch (error) {\n    console.error(`[authActions] Error fetching current assistant`, error);\n\n    return '';\n  }\n}\n\nexport async function getTemplates(): Promise<Template[]> {\n  try {\n    const templates: any[] = await getAllTemplates();\n\n    return templates.map(mapRelationConfig);\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching templates:`, e);\n    return [];\n  }\n}\n\nexport async function getAssistants(include?: any): Promise<Assistant[]> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return [];\n\n    const assistants = await getUserAssitants(userId, include);\n\n    return assistants;\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching assistants for user ${userId}:`, e);\n    return [];\n  }\n}\n\nexport async function upsertAssistant(\n  { template, ...assistantData }: AssistantEditable,\n  id?: string\n): Promise<State<Assistant | null>> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n    let assistant;\n\n    if (!userId) return { value: null };\n\n    const parsedData = assistantSchema.safeParse({ template, ...assistantData });\n\n    if (!parsedData.success) {\n      return { errors: parsedData.error.errors.map(({ message, path }) => ({ name: path.join('.'), message })) };\n    }\n\n    if (!!id) {\n      assistant = await updateUserAssistant(userId, id, {\n        name: assistantData.name,\n        description: assistantData.description,\n        mode: assistantData.mode,\n        status: assistantData.status,\n      });\n    } else {\n      assistant = await createUserAssistant(userId, assistantData, template as any);\n    }\n\n    revalidateTag('assistants');\n\n    return { value: assistant };\n  } catch (e) {\n    console.error(`[assistantClient] Error ${!!id ? 'updating' : 'creating'} assistant for user ${userId}:`, e);\n    return { value: null, error: '' };\n  }\n}\n\nexport async function getAssistantConfiguration(\n  id?: string,\n  full: boolean = true\n): Promise<AssistantConfiguration | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    return (await getFullConfiguration(assistantId || '', full)) as any;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function createCopyAssistant(assistant: Assistant): Promise<Assistant | null> {\n  try {\n    const userId = await getSessionUser();\n\n    if (!assistant || !userId) {\n      console.warn('Assistant not passed or user not authenticated!');\n      return null;\n    }\n\n    const copy = await duplicateAssistant(userId, assistant);\n    revalidateTag('assistants');\n\n    return copy;\n  } catch (error) {\n    console.error(`[instructionsClient] Error creating copy of assistant ${assistant.id}:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaData(id: string, data: Partial<AssistantMeta>): Promise<AssistantMeta | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    const updatedMeta = await updateAssistantMeta(assistantId, data as any);\n\n    revalidateTag('assistants');\n    return updatedMeta;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaPrice(\n  assistant: Assistant,\n  formData: FormData\n): Promise<State<PriceConfiguration | null>> {\n  let assistantId;\n  try {\n    assistantId = assistant.id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.unexpectedError', value: null };\n    }\n    const price = [...formData].reduce((data: any, [key, value]: any) => ({ ...data, [key]: value }), {});\n    const validatedData = assistantPriceSchema.parse(price);\n\n    if (validatedData instanceof Error) {\n      return { error: validatedData.message };\n    }\n\n    const updatedPrice = await upsertAssistantPrice(assistant.meta?.id || '', {\n      ...validatedData,\n      trialDays: !!validatedData.trialDays ? 14 : null,\n    } as any);\n\n    revalidateTag('assistants');\n    return { successMessage: 'General.successMessages.dataSaved', value: updatedPrice };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} meta price data:`, error);\n\n    return { error: 'General.errors.unexpectedError', value: null };\n  }\n}\n\nexport async function deleteAssistant(id: string) {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return;\n\n    await deleteUserAssistant(userId, id);\n    revalidateTag('assistants');\n  } catch (error) {\n    console.error(`[assistantClient] Error removing user ${userId} assistant ${id}:`, error);\n  }\n}\n"],"names":[],"mappings":";;;;;;IA4DsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/sessionActions.ts"],"sourcesContent":["'use server';\n\nimport 'server-only';\n\nimport { revalidatePath, revalidateTag } from 'next/cache';\nimport { isDynamicServerError } from 'next/dist/client/components/hooks-server-context';\nimport { cookies } from 'next/headers';\n\nimport { SESSION_COOKIE_NAME } from '@/lib/constants';\nimport { SessionPayload } from '@/lib/models/auth.models';\nimport { deleteCookie, getCookie } from '@/lib/utils/cookie.utils';\nimport { encrypt } from '@/lib/utils/encryption.utils';\n\nconst secretKey = process.env.SESSION_JWT_KEY;\n\nexport async function createSession(userId: string, accessAllowed: boolean, assistantId: string) {\n  try {\n    const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000);\n    const session = (await encrypt({ userId, expiresAt, accessAllowed, assistantId }, secretKey)) || '';\n    const cookieStore = await cookies();\n\n    cookieStore.set(SESSION_COOKIE_NAME, session, {\n      httpOnly: true,\n      secure: true,\n      expires: expiresAt,\n      sameSite: 'lax',\n      path: '/',\n    });\n  } catch (error) {\n    console.error('[sessionActions] Error creating session:', error);\n\n    throw new Error('[session] Session creation error');\n  }\n}\n\nexport async function verifySession(): Promise<SessionPayload | null> {\n  try {\n    const session = await getCookie<SessionPayload>(SESSION_COOKIE_NAME, true, secretKey);\n\n    return session;\n  } catch (error) {\n    if (isDynamicServerError(error)) {\n      return null;\n    }\n    console.error('[sessionActions] Error verifying session:', error);\n\n    return null;\n  }\n}\n\nexport async function getSessionUser(): Promise<string | undefined> {\n  try {\n    const session = await verifySession();\n\n    return session?.userId;\n  } catch (error) {\n    console.error('[sessionActions] Error getting session user:', error);\n\n    return;\n  }\n}\n\nexport async function updateSession(\n  newData?: Partial<SessionPayload>,\n  tags?: string[],\n  paths?: string[]\n): Promise<void> {\n  try {\n    const payload = await verifySession();\n\n    if (!payload) return;\n\n    const cookieStore = await cookies();\n    const session = (await encrypt({ ...payload, ...newData }, secretKey)) || '';\n\n    cookieStore.set(SESSION_COOKIE_NAME, session, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'lax',\n      path: '/',\n    });\n\n    tags && tags.forEach(revalidateTag);\n    paths && paths.forEach((path) => revalidatePath(path));\n  } catch (error) {\n    console.error('[sessionActions] Error updating session:', error);\n  }\n}\n\nexport async function deleteSession() {\n  await deleteCookie(SESSION_COOKIE_NAME);\n}\n"],"names":[],"mappings":";;;;;;IA8DsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Button.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { twMerge } from 'tailwind-merge';\n\nconst baseStyles =\n  'inline-flex border border-transparent items-center justify-center gap-x-2 rounded-lg py-2 px-5 font-medium text-base disabled:opacty-30 disabled:pointer-events-none';\n\nconst variantStyles = {\n  solid: {\n    primary:\n      'bg-dark-aquamarine text-white hover:bg-transparent hover:text-dark-aquamarine hover:border-dark-aquamarine',\n    gray: 'bg-white/[8%] border-background-border/[16%] text-light-gray hover:border-main hover:text-main',\n    aquamarine:\n      'bg-white/[8%] border-background-border/[18%] text-dark-aquamarine hover:bg-dark-aquamarine hover:text-main',\n    dark: 'bg-background text-main hover:bg-main hover:text-background ',\n    light: 'bg-main text-background hover:bg-storm-gray hover:border-main hover:text-main',\n  },\n  outline: {\n    darkGray: 'border-dark-gray text-light-gray hover:text-main hover:border-storm-gray',\n    red: 'border-salmon text-salmon hover:text-main hover:border-main',\n  },\n  dashed: {\n    gray: 'border border-dashed border-storm-gray text-light-gray hover:border-main hover:text-main',\n  },\n};\n\ntype ButtonProps = (\n  | { variant?: 'solid'; color?: keyof typeof variantStyles.solid }\n  | { variant: 'outline'; color?: keyof typeof variantStyles.outline }\n  | { variant: 'dashed'; color?: keyof typeof variantStyles.dashed }\n) &\n  (\n    | (Omit<React.ComponentPropsWithoutRef<'button'>, 'color'> & { href?: undefined })\n    | (Omit<React.ComponentPropsWithoutRef<typeof Link>, 'color'> & { href: string })\n  );\n\nexport function Button({ className, variant, color, ...props }: ButtonProps) {\n  const variantConfig: any = variant ? variantStyles[variant] : undefined;\n  className = twMerge(baseStyles, variantConfig && color && variantConfig[color], className);\n\n  return typeof props.href === 'undefined' ? (\n    <button className={twMerge('disabled:cursor-not-allowed disabled:opacity-75', className)} {...props} />\n  ) : (\n    <Link prefetch={false} className={className} {...props} />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,aACJ;AAEF,MAAM,gBAAgB;IACpB,OAAO;QACL,SACE;QACF,MAAM;QACN,YACE;QACF,MAAM;QACN,OAAO;IACT;IACA,SAAS;QACP,UAAU;QACV,KAAK;IACP;IACA,QAAQ;QACN,MAAM;IACR;AACF;AAYO,SAAS,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,OAAoB;IACzE,MAAM,gBAAqB,UAAU,aAAa,CAAC,QAAQ,GAAG;IAC9D,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,YAAY,iBAAiB,SAAS,aAAa,CAAC,MAAM,EAAE;IAEhF,OAAO,OAAO,MAAM,IAAI,KAAK,4BAC3B,6LAAC;QAAO,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,mDAAmD;QAAa,GAAG,KAAK;;;;;6BAEnG,6LAAC,+JAAA,CAAA,UAAI;QAAC,UAAU;QAAO,WAAW;QAAY,GAAG,KAAK;;;;;;AAE1D;KATgB","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Dropdown.tsx"],"sourcesContent":["'use client';\n\nimport { Fragment, ReactNode, useCallback, useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Listbox, ListboxButton, ListboxOption, ListboxOptions } from '@headlessui/react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from './Button';\n\nexport interface BaseValue {\n  id: string | number;\n  title?: string | null;\n  name?: string | null;\n  custom?: boolean | null;\n}\n\nexport interface DropdownOption<T> {\n  id: string | number;\n  href?: string;\n  icon?: string;\n  labelKey?: string;\n  label?: string;\n  value: T;\n  className?: string;\n  handler?: (option: DropdownOption<T>) => void;\n}\n\ninterface DropdownProps<T> {\n  children?: ReactNode;\n  options: DropdownOption<T>[];\n  selectedOption?: T;\n  position?: any;\n  optionClassName?: string;\n  listClassName?: string;\n  buttonIcon?: string;\n  className?: string;\n  label?: string;\n  movableItems?: boolean;\n  onSelectedChange: (option: DropdownOption<T>) => void;\n  onItemMoved?: (up: boolean, option: DropdownOption<T>) => void;\n}\n\nexport const getOption = function <T extends BaseValue>(value: T, labelKey: string): DropdownOption<T> {\n  const label: string = (value[labelKey as keyof T] as string) || value.title || '';\n\n  return {\n    id: value.id,\n    label: value.custom ? label : label.replaceAll('_', ' '),\n    value,\n    icon: value.custom ? 'cbi-send' : '',\n  };\n};\n\nexport const getOptions = function <T extends BaseValue>(values: T[], labelKey: string): DropdownOption<T>[] {\n  return values.map((value: T) => getOption(value, labelKey));\n};\n\nexport default function Dropdown<T>({\n  children,\n  optionClassName,\n  listClassName,\n  position,\n  options,\n  buttonIcon = 'cbi-arrow-down group-data-[open]:rotate-180',\n  selectedOption,\n  className,\n  label,\n  movableItems,\n  onSelectedChange,\n  onItemMoved,\n}: DropdownProps<T>) {\n  const t = useTranslations();\n  const [selected, setSelected] = useState<DropdownOption<T> | null>(options[0] || null);\n\n  const handleSelectedChange = useCallback(\n    (option: DropdownOption<T>) => {\n      setSelected(option);\n      onSelectedChange(option);\n\n      if (option.handler) {\n        option.handler(option);\n      }\n    },\n    [onSelectedChange]\n  );\n\n  useEffect(() => {\n    const foundOption = options.find((option: DropdownOption<T>) => {\n      if (typeof option.value === 'string') {\n        return option.value === selectedOption;\n      }\n\n      return (\n        (option.value as BaseValue).id === (selectedOption as BaseValue)?.id ||\n        JSON.stringify(option.value) === JSON.stringify(selectedOption)\n      );\n    });\n\n    setSelected(foundOption || options[0] || null);\n  }, [selectedOption, options]);\n\n  return (\n    <Listbox value={selected} onChange={handleSelectedChange}>\n      <ListboxButton\n        disabled={!selected}\n        className={twMerge(\n          'leading-2 group flex items-center justify-between rounded-lg text-base font-medium text-light-gray',\n          'rounded-xl border border-storm-gray px-3 py-2.5',\n          selected && 'capitalize',\n          className\n        )}\n      >\n        {selected?.labelKey && t(selected.labelKey)}\n        {selected?.label}\n        {!selected && !options.length && t('General.dropdownEmptyPlaceholder')}\n        {!!options.length && (buttonIcon || selected?.icon) && <i className={buttonIcon || selected?.icon}></i>}\n      </ListboxButton>\n      <ListboxOptions\n        anchor={position || 'bottom'}\n        transition\n        className={twMerge(\n          'z-20 flex w-[var(--button-width)] origin-top flex-col gap-y-5 rounded-lg border border-light-gray bg-background p-3.5 transition duration-200 ease-out data-[closed]:scale-95 data-[closed]:opacity-0',\n          listClassName\n        )}\n      >\n        {label && <p className=\"text-sm text-storm-gray\">{label}</p>}\n        {children}\n        {options.map((option: DropdownOption<T>, index: number, { length }: DropdownOption<T>[]) => (\n          <ListboxOption key={`${option.id}` + index} value={option} as={Fragment}>\n            {({ selected }) => (\n              <div\n                key={option.id}\n                className={twMerge(\n                  'flex w-full cursor-pointer items-center text-base text-light-gray hover:text-main',\n                  optionClassName\n                )}\n              >\n                {option.href ? (\n                  <Link\n                    prefetch={false}\n                    href={option.href}\n                    className={twMerge('inline-flex w-full justify-between', option.className)}\n                  >\n                    <span className=\"inline-flex items-center gap-x-2\">\n                      {option.icon && <i className={option.icon}></i>}\n                      {option.label || (option.labelKey && t(option.labelKey))}\n                    </span>\n                    {selected && <i className=\"cbi-tick-circle text-xs text-saffron\"></i>}\n                  </Link>\n                ) : (\n                  <div className=\"inline-flex w-full justify-between\">\n                    <span className=\"inline-flex gap-x-1.5\">\n                      {option.icon && <i className={option.icon}></i>}\n                      {option.label || (option.labelKey && t(option.labelKey))}\n                    </span>\n                    <div className=\"flex gap-x-3\">\n                      {selected && <i className=\"cbi-tick-circle text-sm text-main\"></i>}\n                      {movableItems && (\n                        <div\n                          className=\"flex flex-col items-center justify-center gap-y-0 text-xl\"\n                          onClick={(e) => e.stopPropagation()}\n                        >\n                          <Button\n                            title=\"Move item up\"\n                            disabled={index === 0}\n                            className=\"cbi-arrow-up-bold p-0 text-lg leading-3 text-main hover:text-dark-aquamarine disabled:opacity-30\"\n                            onClick={() => onItemMoved?.(true, option)}\n                          />\n\n                          <Button\n                            title=\"Move item down\"\n                            disabled={index === length - 1}\n                            className=\"cbi-arrow-down-bold p-0 text-lg leading-3 text-main hover:text-dark-aquamarine disabled:opacity-30\"\n                            onClick={() => onItemMoved?.(false, option)}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </ListboxOption>\n        ))}\n      </ListboxOptions>\n    </Listbox>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Input.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, ReactNode, useCallback, useEffect, useRef } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nexport interface InputProps {\n  children?: ReactNode;\n  id: string;\n  name?: string;\n  type?: string;\n  className?: string;\n  inputClassName?: string;\n  placeholderKey?: string;\n  placeholder?: string;\n  disablePalaceholderKey?: string;\n  initialValue?: string;\n  labelKey?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  isSubmitting?: boolean;\n  labelClassName?: string;\n  step?: string;\n  onChange?: (event: any) => any;\n}\n\nexport const Input = forwardRef<HTMLInputElement | HTMLTextAreaElement, InputProps>(\n  (\n    {\n      id,\n      type = 'text',\n      name,\n      className,\n      inputClassName,\n      placeholderKey,\n      placeholder,\n      disablePalaceholderKey,\n      labelKey,\n      labelClassName,\n      disabled,\n      children,\n      initialValue,\n      isSubmitting,\n      readOnly,\n      ...props\n    },\n    ref\n  ) => {\n    const t = useTranslations();\n    const elRef = useRef<HTMLTextAreaElement | HTMLInputElement>(null);\n\n    const adjustHeight = useCallback(() => {\n      if (type === 'textarea' && elRef?.current) {\n        elRef.current.style.height = 'auto';\n        elRef.current.style.height = `${elRef.current.scrollHeight + 2}px`;\n      }\n    }, [elRef]);\n\n    useEffect(() => adjustHeight(), [isSubmitting, initialValue]);\n\n    return (\n      <div className={twMerge('relative flex flex-col gap-x-2 font-normal', className)}>\n        {labelKey && (\n          <label htmlFor={id} className={twMerge('text-base text-light-gray', labelClassName)}>\n            {t(labelKey)}\n            {children}\n          </label>\n        )}\n        {type === 'textarea' ? (\n          <textarea\n            ref={(el) => {\n              elRef.current = el;\n              if (typeof ref === 'function') ref(el);\n              else if (ref) (ref as any).current = el;\n            }}\n            id={id}\n            disabled={disabled}\n            rows={1}\n            defaultValue={initialValue}\n            name={name}\n            placeholder={\n              disabled && disablePalaceholderKey ? t(disablePalaceholderKey) : placeholderKey && t(placeholderKey)\n            }\n            className={twMerge(\n              'focus:no-outline !max-h-40 resize-none overflow-y-auto rounded-lg border border-light-gray bg-white/[18%] px-4 py-3 text-lg text-main focus:ring-0',\n              disabled && 'pointer-events-none animate-pulse bg-dark-gray/[80%] text-transparent placeholder:text-main',\n              inputClassName\n            )}\n            {...props}\n            onChange={async (e: any) => {\n              adjustHeight();\n              await props.onChange?.(e);\n            }}\n          />\n        ) : (\n          <input\n            ref={ref as any}\n            id={id}\n            disabled={disabled}\n            readOnly={readOnly}\n            type={type}\n            name={name}\n            defaultValue={initialValue}\n            placeholder={(placeholderKey && t(placeholderKey)) || placeholder}\n            className={twMerge(\n              'focus:no-outline rounded-lg border border-light-gray bg-white/[18%] px-4 py-2 text-lg text-main placeholder:text-base focus:ring-0',\n              disabled && 'pointer-events-none animate-pulse bg-dark-gray/[80%] placeholder:hidden',\n              inputClassName\n            )}\n            {...props}\n          />\n        )}\n        {children}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AA0BO,MAAM,sBAAQ,GAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,UAC5B,CACE,EACE,EAAE,EACF,OAAO,MAAM,EACb,IAAI,EACJ,SAAS,EACT,cAAc,EACd,cAAc,EACd,WAAW,EACX,sBAAsB,EACtB,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,GAAG,OACJ,EACD;;IAEA,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAA0C;IAE7D,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2CAAE;YAC/B,IAAI,SAAS,cAAc,OAAO,SAAS;gBACzC,MAAM,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG;gBAC7B,MAAM,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,YAAY,GAAG,EAAE,EAAE,CAAC;YACpE;QACF;0CAAG;QAAC;KAAM;IAEV,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE,IAAM;0BAAgB;QAAC;QAAc;KAAa;IAE5D,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,8CAA8C;;YACnE,0BACC,6LAAC;gBAAM,SAAS;gBAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,6BAA6B;;oBACjE,EAAE;oBACF;;;;;;;YAGJ,SAAS,2BACR,6LAAC;gBACC,KAAK,CAAC;oBACJ,MAAM,OAAO,GAAG;oBAChB,IAAI,OAAO,QAAQ,YAAY,IAAI;yBAC9B,IAAI,KAAK,AAAC,IAAY,OAAO,GAAG;gBACvC;gBACA,IAAI;gBACJ,UAAU;gBACV,MAAM;gBACN,cAAc;gBACd,MAAM;gBACN,aACE,YAAY,yBAAyB,EAAE,0BAA0B,kBAAkB,EAAE;gBAEvF,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,sJACA,YAAY,+FACZ;gBAED,GAAG,KAAK;gBACT,UAAU,OAAO;oBACf;oBACA,MAAM,MAAM,QAAQ,GAAG;gBACzB;;;;;qCAGF,6LAAC;gBACC,KAAK;gBACL,IAAI;gBACJ,UAAU;gBACV,UAAU;gBACV,MAAM;gBACN,MAAM;gBACN,cAAc;gBACd,aAAa,AAAC,kBAAkB,EAAE,mBAAoB;gBACtD,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,sIACA,YAAY,2EACZ;gBAED,GAAG,KAAK;;;;;;YAGZ;;;;;;;AAGP;;QAnEY,yMAAA,CAAA,kBAAe;;;;QAAf,yMAAA,CAAA,kBAAe;;;;AAsE7B,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Logo.tsx"],"sourcesContent":["import { memo } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\nexport const Logo = memo(function Logo({ className }: { className?: string }) {\n  return (\n    <Link prefetch={false} className={`relative z-10 flex h-6 items-center sm:h-7 xl:h-8 ${className}`} href=\"/\">\n      <Image\n        src={'/images/StudioAiCoachLogo.svg'}\n        alt=\"CoachBot logo\"\n        className={'h-full w-auto'}\n        priority={true}\n        width={100}\n        height={20}\n      />\n    </Link>\n  );\n});\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,OAAE,SAAS,KAAK,EAAE,SAAS,EAA0B;IAC1E,qBACE,6LAAC,+JAAA,CAAA,UAAI;QAAC,UAAU;QAAO,WAAW,CAAC,kDAAkD,EAAE,WAAW;QAAE,MAAK;kBACvG,cAAA,6LAAC,gIAAA,CAAA,UAAK;YACJ,KAAK;YACL,KAAI;YACJ,WAAW;YACX,UAAU;YACV,OAAO;YACP,QAAQ;;;;;;;;;;;AAIhB","debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Loaders.tsx"],"sourcesContent":["import { memo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Logo } from './Logo';\n\nexport const Spinner = memo(function Spinner({\n  className,\n  withText,\n  text,\n  textClassName,\n  icon = 'cbi-Loader',\n}: {\n  className?: string;\n  withText?: boolean;\n  text?: string;\n  textClassName?: string;\n  icon?: string;\n}) {\n  return (\n    <>\n      <p className={twMerge('flex items-center gap-x-3 text-xl', className)}>\n        <span className={twMerge('gradient-loader inline-flex animate-spin text-xl', icon)}></span>\n        {withText && <span className={twMerge('text-sm text-light-gray', textClassName)}>{text ?? 'Loading...'}</span>}\n      </p>\n    </>\n  );\n});\n\nexport const FullScreenLoader = memo(function FullScreenLoader({ className }: { className?: string }) {\n  return (\n    <>\n      <main className={twMerge('flex h-svh w-svw flex-col items-center justify-center', className)}>\n        <div className=\"flex flex-col items-center gap-y-7\">\n          <Logo className=\"h-8 sm:h-10 xl:h-12\" />\n          <Spinner withText={true} className=\"text-2xl\" />\n        </div>\n      </main>\n    </>\n  );\n});\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEO,MAAM,wBAAU,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,EAAE,SAAS,QAAQ,EAC3C,SAAS,EACT,QAAQ,EACR,IAAI,EACJ,aAAa,EACb,OAAO,YAAY,EAOpB;IACC,qBACE;kBACE,cAAA,6LAAC;YAAE,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,qCAAqC;;8BACzD,6LAAC;oBAAK,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,oDAAoD;;;;;;gBAC5E,0BAAY,6LAAC;oBAAK,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,2BAA2B;8BAAiB,QAAQ;;;;;;;;;;;;;AAIlG;KArBa;AAuBN,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,QAAE,SAAS,iBAAiB,EAAE,SAAS,EAA0B;IAClG,qBACE;kBACE,cAAA,6LAAC;YAAK,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,yDAAyD;sBAChF,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;kCAChB,6LAAC;wBAAQ,UAAU;wBAAM,WAAU;;;;;;;;;;;;;;;;;;AAK7C","debugId":null}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/RadioGroup.tsx"],"sourcesContent":["'use client';\n\nimport { RadioGroup as Group, Radio } from '@headlessui/react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nconst variants = {\n  white:\n    'bg-white-opacity text-light-gray border border-transparent hover:border-main hover:text-main data-[checked]:bg-storm-gray data-[checked]:border-storm-gray data-[checked]:text-main',\n  graphic:\n    'bg-graphic/[14%] border border-white-opacity text-light-gray hover:border-main hover:text-main data-[checked]:bg-background data-[checked]:text-main',\n  bordered:\n    'bg-white-opacity text-light-gray border border-transparent hover:border-main hover:text-main data-[checked]:border-main data-[checked]:text-main data-[checked]:bg-storm-gray',\n  transparent:\n    'bg-transparent text-light-gray hover:bg-white-opacity hover:text-main data-[checked]:bg-background data-[checked]:text-main',\n  aquamarine:\n    'bg-transparent text-light-gray hover:bg-white-opacity hover:text-main data-[checked]:bg-dark-aquamarine data-[checked]:text-main rounded-md',\n};\n\nexport interface Option {\n  id: string | number;\n  labelKey?: string;\n  value: any;\n  displayValue?: any;\n  icon?: string;\n  className?: string;\n  disabled?: boolean;\n  titleKey?: string;\n}\n\nexport interface RadioGroupProps {\n  id?: string;\n  name?: string;\n  selected?: any;\n  className?: string;\n  variant?: keyof typeof variants;\n  optionClassName?: string;\n  iconClassName?: string;\n  options: Option[];\n  disabled?: boolean;\n  setSelected?: (selected: any) => void | Promise<void>;\n}\n\nexport const RadioGroup: React.FC<RadioGroupProps> = ({\n  id,\n  name,\n  className,\n  optionClassName,\n  iconClassName,\n  selected,\n  options,\n  variant,\n  disabled,\n  setSelected,\n}) => {\n  const t = useTranslations();\n  return (\n    <Group\n      id={id}\n      name={name}\n      disabled={disabled}\n      value={selected}\n      onChange={setSelected}\n      aria-label=\"radio group\"\n      className={twMerge('flex flex-row', disabled && 'pointer-events-none', className)}\n    >\n      {options.map((option, index) => (\n        <Radio\n          disabled={option.disabled}\n          key={option.id || index}\n          value={option.value || option}\n          className={twMerge(\n            'group relative flex flex-1 cursor-pointer items-center justify-center gap-x-3 text-nowrap rounded-xl p-1.5 transition focus:outline-none',\n            variant && variants[variant],\n            option.disabled && 'cursor-not-allowed opacity-70',\n            optionClassName,\n            option.className\n          )}\n          data-activity-radio={option.value}\n          title={option.titleKey && t(option.titleKey)}\n        >\n          {option.icon && <i className={twMerge(option.icon, iconClassName)}></i>}\n          {option.labelKey && (\n            <p className=\"inline-flex gap-x-2\">\n              {t(option.labelKey)}\n              {option.displayValue != null && <span className=\"font-bold\">{option.displayValue}</span>}\n            </p>\n          )}\n        </Radio>\n      ))}\n    </Group>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,WAAW;IACf,OACE;IACF,SACE;IACF,UACE;IACF,aACE;IACF,YACE;AACJ;AA0BO,MAAM,aAAwC,CAAC,EACpD,EAAE,EACF,IAAI,EACJ,SAAS,EACT,eAAe,EACf,aAAa,EACb,QAAQ,EACR,OAAO,EACP,OAAO,EACP,QAAQ,EACR,WAAW,EACZ;;IACC,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,qBACE,6LAAC,kMAAA,CAAA,aAAK;QACJ,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,UAAU;QACV,cAAW;QACX,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB,YAAY,uBAAuB;kBAEtE,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC,kMAAA,CAAA,QAAK;gBACJ,UAAU,OAAO,QAAQ;gBAEzB,OAAO,OAAO,KAAK,IAAI;gBACvB,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,4IACA,WAAW,QAAQ,CAAC,QAAQ,EAC5B,OAAO,QAAQ,IAAI,iCACnB,iBACA,OAAO,SAAS;gBAElB,uBAAqB,OAAO,KAAK;gBACjC,OAAO,OAAO,QAAQ,IAAI,EAAE,OAAO,QAAQ;;oBAE1C,OAAO,IAAI,kBAAI,6LAAC;wBAAE,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,OAAO,IAAI,EAAE;;;;;;oBAClD,OAAO,QAAQ,kBACd,6LAAC;wBAAE,WAAU;;4BACV,EAAE,OAAO,QAAQ;4BACjB,OAAO,YAAY,IAAI,sBAAQ,6LAAC;gCAAK,WAAU;0CAAa,OAAO,YAAY;;;;;;;;;;;;;eAhB/E,OAAO,EAAE,IAAI;;;;;;;;;;AAuB5B;GAjDa;;QAYD,yMAAA,CAAA,kBAAe;;;KAZd","debugId":null}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Tooltip.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, useState } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nexport default function Tooltip({\n  initialShow,\n  iconClass,\n  tooltipClassName,\n  tooltipLabelClassName,\n  tooltipLabel,\n  className,\n  children,\n}: {\n  initialShow?: boolean;\n  iconClass: string;\n  tooltipClassName?: string;\n  tooltipLabelClassName?: string;\n  tooltipLabel?: string;\n  className?: string;\n  children?: ReactNode;\n}) {\n  const t = useTranslations();\n  const [showTooltip, setShowTooltip] = useState(initialShow ?? false);\n\n  return (\n    <div className={twMerge('relative flex flex-col items-center justify-center', className)}>\n      <span\n        tabIndex={0}\n        className={twMerge('cursor-pointer text-lg text-dark-aquamarine', iconClass)}\n        onClick={() => setShowTooltip(true)}\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(initialShow ?? false)}\n      ></span>\n      <div\n        className={twMerge(\n          'absolute bottom-full left-1/3 z-20 flex flex-grow -translate-x-1/2 items-center justify-end',\n          showTooltip ? 'h-auto w-96' : 'h-0 w-0',\n          tooltipClassName\n        )}\n      >\n        {showTooltip && (\n          <div\n            className={twMerge(\n              'text-nowrap rounded-xl bg-main px-2.5 py-1.5 text-xs text-background',\n              tooltipLabelClassName\n            )}\n          >\n            {tooltipLabel && t(tooltipLabel)}\n            {children}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,QAAQ,EAC9B,WAAW,EACX,SAAS,EACT,gBAAgB,EAChB,qBAAqB,EACrB,YAAY,EACZ,SAAS,EACT,QAAQ,EAST;;IACC,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,eAAe;IAE9D,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,sDAAsD;;0BAC5E,6LAAC;gBACC,UAAU;gBACV,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,+CAA+C;gBAClE,SAAS,IAAM,eAAe;gBAC9B,cAAc,IAAM,eAAe;gBACnC,cAAc,IAAM,eAAe,eAAe;;;;;;0BAEpD,6LAAC;gBACC,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,+FACA,cAAc,gBAAgB,WAC9B;0BAGD,6BACC,6LAAC;oBACC,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,wEACA;;wBAGD,gBAAgB,EAAE;wBAClB;;;;;;;;;;;;;;;;;;AAMb;GAlDwB;;QAiBZ,yMAAA,CAAA,kBAAe;;;KAjBH","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/assistant/AssistantForm.tsx"],"sourcesContent":["'use client';\n\nimport { RefObject, use, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { useTranslations } from 'next-intl';\nimport { useForm } from 'react-hook-form';\nimport { twMerge } from 'tailwind-merge';\n\nimport { PrivateRoutes } from '@/lib/constants';\nimport { Assistant, AssistantEditable, AssistantMode } from '@/lib/models/assistant.models';\nimport { Template } from '@/lib/models/common.models';\nimport { upsertAssistant } from '@/server/actions/assistantActions';\nimport { updateSession } from '@/server/actions/sessionActions';\nimport { Button } from '@/shared/Button';\nimport Dropdown, { getOptions } from '@/shared/Dropdown';\nimport { Input } from '@/shared/Input';\nimport { Spinner } from '@/shared/Loaders';\nimport { RadioGroup } from '@/shared/RadioGroup';\nimport Tooltip from '@/shared/Tooltip';\n\nconst modeOptions = [\n  { id: 0, value: AssistantMode.fullAccess, labelKey: 'Assistants.newForm.modeOptions.0.title' },\n  { id: 1, value: AssistantMode.highLevel, labelKey: 'Assistants.newForm.modeOptions.1.title' },\n  { id: 2, value: AssistantMode.confidential, labelKey: 'Assistants.newForm.modeOptions.2.title' },\n];\n\nexport default function NewAssistantForm({\n  ref,\n  assistant,\n  templates$,\n  setModalHandler,\n}: {\n  ref?: RefObject<HTMLFormElement>;\n  assistant?: Assistant | null;\n  templates$: Promise<Template[]>;\n  setModalHandler?: (value: boolean) => void;\n}) {\n  const t = useTranslations();\n  const templates = use(templates$);\n  const router = useRouter();\n  const {\n    register,\n    watch,\n    handleSubmit,\n    setValue,\n    setError,\n    formState: { errors, isLoading },\n  } = useForm<AssistantEditable>({\n    defaultValues: assistant || { mode: AssistantMode.fullAccess },\n    mode: 'onChange',\n  });\n\n  const formValues = watch();\n\n  const validateNotEmpty = useCallback((value: string) => {\n    return value.trim() !== '' || 'General.errors.emptyFiled';\n  }, []);\n\n  const handleResponse = async (createdAssistant: Assistant) => {\n    if (assistant) return router.back();\n\n    await updateSession(\n      { assistantId: createdAssistant?.id ?? null },\n      ['stages', 'styles', 'firstStage', 'moderationRules'],\n      ['/instructions']\n    );\n    router.push(PrivateRoutes.instructions);\n  };\n\n  const onSubmitHandler = useCallback(\n    async (data: AssistantEditable) => {\n      const response = await upsertAssistant(\n        {\n          ...data,\n          name: data.name.trim(),\n          description: data.description.trim(),\n        },\n        assistant?.id\n      );\n\n      if (response.errors) {\n        return response.errors.forEach(({ name, message }: any) => setError(name, { message }));\n      }\n\n      response.value && handleResponse(response.value);\n    },\n    [setModalHandler]\n  );\n\n  useEffect(() => {\n    setValue('mode', assistant?.mode || AssistantMode.fullAccess);\n    setValue('template', assistant?.template || templates[0]);\n  }, []);\n\n  return (\n    <div className=\"flex flex-col gap-y-2 md:max-w-3xl\">\n      <h3 className=\"ps-2 text-base font-semibold text-main\">{t('Assistants.newForm.title')}</h3>\n      <p className=\"text-wrap ps-2 text-sm text-light-gray\">{t('Assistants.newForm.subTitle')}</p>\n\n      <form ref={ref} onSubmit={handleSubmit(onSubmitHandler)} className=\"mt-2 flex flex-col gap-y-3\">\n        {!assistant && (\n          <div className=\"flex flex-col gap-y-2 border-b border-storm-gray pb-3\">\n            <label htmlFor=\"template\" className=\"px-2 text-sm font-medium text-main\">\n              {t('Assistants.newForm.presetsLabel')}\n            </label>\n            <Dropdown\n              selectedOption={formValues.template || templates[0]}\n              className=\"w-full bg-white/[8%] text-main\"\n              options={getOptions(templates, 'name')}\n              onSelectedChange={({ value }) => setValue('template', value)}\n            />\n            {errors.template && <p className=\"text-sm text-salmon\">{t(String(errors.template.message))}</p>}\n          </div>\n        )}\n        <div className=\"flex flex-col gap-y-2\">\n          <Input\n            className=\"flex flex-col gap-y-2.5\"\n            placeholderKey=\"Assistants.newForm.namePlaceholder\"\n            id=\"name\"\n            labelKey=\"Assistants.newForm.nameLabel\"\n            labelClassName=\"text-sm ps-2\"\n            inputClassName=\"bg-white/[8%] text-base\"\n            {...register('name', { required: 'General.errors.emptyFiled', validate: validateNotEmpty })}\n            disabled={isLoading}\n          />\n          {errors.name && t.has(String(errors.name.message)) && (\n            <p className=\"text-sm text-salmon\">{t(String(errors.name.message))}</p>\n          )}\n        </div>\n        <div className=\"flex flex-col gap-y-2\">\n          <Input\n            id=\"description\"\n            type=\"textarea\"\n            labelClassName=\"text-sm ps-2\"\n            labelKey=\"Assistants.newForm.descriptionLabel\"\n            placeholderKey=\"Assistants.newForm.descriptionPlaceholder\"\n            className=\"textarea flex flex-grow flex-col gap-y-2.5\"\n            inputClassName=\"overflow-y-auto line-height-[1.2em] bg-white/[8%] min-h-32 placeholder:text-base text-base\"\n            disabled={isLoading}\n            {...register('description', { required: 'General.errors.emptyFiled', validate: validateNotEmpty })}\n          />\n          {errors.description && t.has(String(errors.description.message)) && (\n            <p className=\"text-sm text-salmon\">{t(String(errors.description.message))}</p>\n          )}\n        </div>\n        <div className=\"flex flex-col gap-y-2 border-b border-storm-gray pb-3\">\n          <label className=\"-mb-1 inline-flex items-center gap-x-2 ps-3 text-sm text-main\">\n            {t('Assistants.newForm.modeSelectionLabel')}\n            <Tooltip\n              iconClass=\"cbi-message-question text-light-gray\"\n              tooltipLabel={'Assistants.newForm.modeSelectionLabel'}\n              tooltipClassName=\"-translate-x-[80%]\"\n            />\n          </label>\n          <RadioGroup\n            options={modeOptions}\n            optionClassName=\"px-3 py-1.5 text-base font-medium rounded-xl text-center\"\n            className=\"w-full gap-x-1 rounded-xl bg-graphic/[14%] p-1 backdrop-blur-sm\"\n            variant=\"transparent\"\n            selected={formValues.mode}\n            setSelected={(value: AssistantMode) => setValue('mode', value)}\n          />\n          <p className=\"inline-flex items-center ps-2 text-sm text-main\">\n            <i className=\"cbi-info-circle me-2\" />\n            {t.rich(\n              formValues.mode === AssistantMode.fullAccess\n                ? 'Assistants.newForm.termConditionsFullAccessNote'\n                : 'Assistants.newForm.termConditionsConfidentialNote',\n              {\n                link: (chunk: any) => (\n                  <Link\n                    prefetch={false}\n                    className=\"text-sm text-main underline underline-offset-2\"\n                    target=\"_blank\"\n                    href={'https://coachbot.ai/legal/terms-of-service'}\n                  >\n                    {chunk}\n                  </Link>\n                ),\n              }\n            )}\n          </p>\n        </div>\n        <div className=\"flex w-1/2 flex-row justify-end gap-x-1 self-end\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            color=\"darkGray\"\n            disabled={isLoading}\n            onClick={() => router.back()}\n            className=\"flex-1 flex-grow px-10 text-base\"\n          >\n            {t('General.cancelButton')}\n          </Button>\n\n          <Button\n            disabled={isLoading || !!errors.name || !!errors.description}\n            type=\"submit\"\n            variant=\"solid\"\n            color=\"light\"\n            className={twMerge(\n              'inline-flex flex-1 flex-grow items-center text-nowrap px-7 py-2.5 text-base disabled:opacity-30',\n              isLoading && 'animate-pulse'\n            )}\n          >\n            {isLoading ? <Spinner /> : <i className={assistant ? 'cbi-edit-2' : 'cbi-add'} />}\n            {t(assistant ? 'Assistants.modal.editTitle' : 'Assistants.modal.title')}\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1208, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/contexts/AsideContext.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, Dispatch, useContext, useState } from 'react';\n\ninterface AsideContextType {\n  isAsideOpen: boolean;\n  toggleAside: () => void;\n  setIsAsideOpen: Dispatch<boolean>;\n}\n\nconst AsideContext = createContext<AsideContextType | undefined>(undefined);\n\nexport function useAsideContext() {\n  const context = useContext(AsideContext);\n\n  if (context === undefined) {\n    throw new Error('useAsideContext must be used within a RootProvider');\n  }\n\n  return context;\n}\n\nexport const AsideContextProvider = ({ isOpen, children }: { isOpen?: boolean; children: React.ReactNode }) => {\n  const [isAsideOpen, setIsAsideOpen] = useState(isOpen ?? true);\n\n  const toggleAside = () => {\n    setIsAsideOpen((prev) => !prev);\n  };\n\n  return <AsideContext.Provider value={{ isAsideOpen, toggleAside, setIsAsideOpen }}>{children}</AsideContext.Provider>;\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;GARgB;AAUT,MAAM,uBAAuB,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAmD;;IACxG,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;IAEzD,MAAM,cAAc;QAClB,eAAe,CAAC,OAAS,CAAC;IAC5B;IAEA,qBAAO,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAa;YAAa;QAAe;kBAAI;;;;;;AACtF;IARa;KAAA","debugId":null}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/models/analytic.models.ts"],"sourcesContent":["export interface HeapUser {\n  email: string;\n  username?: string;\n  stripeId?: string;\n  subscriptionId?: string;\n  coachLimit?: string | null;\n}\n\nexport interface HeapEventProperties {\n  [key: string]: string | number | boolean;\n}\n\nexport enum HeapTrackEvent {\n  create_new_chat = 'create_new_chat',\n  save_main_instruction = 'save_main_instruction',\n  save_main_onboarding = 'save_main_onboarding',\n  save_stage = 'save_stage',\n  save_moderation = 'save_moderation',\n  save_style = 'save_style',\n}\n"],"names":[],"mappings":";;;AAYO,IAAA,AAAK,wCAAA;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 1281, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/file.utils.ts"],"sourcesContent":["import { Assistant, AssistantConfiguration } from '../models/assistant.models';\nimport { Message } from '../models/chat.models';\nimport { Stage } from '../models/instruction.models';\n\nexport const handleFileDownload = (fileName: string, fileUrl: string, downloadLink: HTMLAnchorElement | null) => {\n  if (!fileUrl || !downloadLink) return;\n\n  downloadLink.href = fileUrl;\n  downloadLink.download = fileName;\n  downloadLink.click();\n};\n\nexport const generateAssistantFile = ({ name }: Assistant, config: AssistantConfiguration | null) => {\n  const { stages, instructions, onboarding } = config || {};\n  const adjustMarkdownHeaders = (content?: string | null) => content?.replace(/#{1,5} /gm, (match) => `##${match}`);\n  const stagesInstructions = stages?.map(\n    ({ name, instructions, analyzer }: Stage) =>\n      `### ${name}\\n\\n #### Instructions:\\n\\n${adjustMarkdownHeaders(instructions)}\\n\\n #### Analyzer:\\n\\n${adjustMarkdownHeaders(analyzer)}\\n\\n`\n  );\n  const onboardingInstructions = onboarding\n    ? `\\n\\n ## Onboarding Instructions:\\n\\n ${adjustMarkdownHeaders(onboarding)}`\n    : '';\n  const content = `# ${name}\\n\\n ## Main Instructions:\\n\\n ${adjustMarkdownHeaders(instructions)}${onboardingInstructions}\\n\\n ## Stages:\\n\\n ${stagesInstructions?.join('\\n\\n')}`;\n\n  const blob = new Blob([content], { type: 'text/markdown' });\n\n  return URL.createObjectURL(blob);\n};\n\nexport const generateChatFile = (messages: Message[]) => {\n  const content: string = messages.reduce(\n    (text: string, { role, content }: Message) => text + `**[${role}]:** ${content}\\n\\n`,\n    '# Chat Transcription:\\n\\n'\n  );\n\n  const blob = new Blob([content], { type: 'text/markdown' });\n\n  return URL.createObjectURL(blob);\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,qBAAqB,CAAC,UAAkB,SAAiB;IACpE,IAAI,CAAC,WAAW,CAAC,cAAc;IAE/B,aAAa,IAAI,GAAG;IACpB,aAAa,QAAQ,GAAG;IACxB,aAAa,KAAK;AACpB;AAEO,MAAM,wBAAwB,CAAC,EAAE,IAAI,EAAa,EAAE;IACzD,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC;IACxD,MAAM,wBAAwB,CAAC,UAA4B,SAAS,QAAQ,aAAa,CAAC,QAAU,CAAC,EAAE,EAAE,OAAO;IAChH,MAAM,qBAAqB,QAAQ,IACjC,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAS,GACtC,CAAC,IAAI,EAAE,KAAK,2BAA2B,EAAE,sBAAsB,cAAc,uBAAuB,EAAE,sBAAsB,UAAU,IAAI,CAAC;IAE/I,MAAM,yBAAyB,aAC3B,CAAC,qCAAqC,EAAE,sBAAsB,aAAa,GAC3E;IACJ,MAAM,UAAU,CAAC,EAAE,EAAE,KAAK,+BAA+B,EAAE,sBAAsB,gBAAgB,uBAAuB,oBAAoB,EAAE,oBAAoB,KAAK,SAAS;IAEhL,MAAM,OAAO,IAAI,KAAK;QAAC;KAAQ,EAAE;QAAE,MAAM;IAAgB;IAEzD,OAAO,IAAI,eAAe,CAAC;AAC7B;AAEO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,UAAkB,SAAS,MAAM,CACrC,CAAC,MAAc,EAAE,IAAI,EAAE,OAAO,EAAW,GAAK,OAAO,CAAC,GAAG,EAAE,KAAK,KAAK,EAAE,QAAQ,IAAI,CAAC,EACpF;IAGF,MAAM,OAAO,IAAI,KAAK;QAAC;KAAQ,EAAE;QAAE,MAAM;IAAgB;IAEzD,OAAO,IAAI,eAAe,CAAC;AAC7B","debugId":null}},
    {"offset": {"line": 1323, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/assistantActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { PriceConfiguration } from '@prisma/client';\n\nimport { Assistant, AssistantConfiguration, AssistantEditable, AssistantMeta } from '@/lib/models/assistant.models';\nimport { State, Template } from '@/lib/models/common.models';\nimport { assistantPriceSchema, assistantSchema, mapRelationConfig } from '@/lib/utils/db.utils';\nimport {\n  createUserAssistant,\n  deleteUserAssistant,\n  duplicateAssistant,\n  getAllTemplates,\n  getUserAssitants,\n  updateAssistantMeta,\n  updateUserAssistant,\n  upsertAssistantPrice,\n} from '../db/assistantClient';\nimport { getFullConfiguration } from '../db/configurationClient';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function getCurrentAssistant(): Promise<string> {\n  try {\n    const { assistantId } = (await verifySession()) || {};\n\n    return assistantId || '';\n  } catch (error) {\n    console.error(`[authActions] Error fetching current assistant`, error);\n\n    return '';\n  }\n}\n\nexport async function getTemplates(): Promise<Template[]> {\n  try {\n    const templates: any[] = await getAllTemplates();\n\n    return templates.map(mapRelationConfig);\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching templates:`, e);\n    return [];\n  }\n}\n\nexport async function getAssistants(include?: any): Promise<Assistant[]> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return [];\n\n    const assistants = await getUserAssitants(userId, include);\n\n    return assistants;\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching assistants for user ${userId}:`, e);\n    return [];\n  }\n}\n\nexport async function upsertAssistant(\n  { template, ...assistantData }: AssistantEditable,\n  id?: string\n): Promise<State<Assistant | null>> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n    let assistant;\n\n    if (!userId) return { value: null };\n\n    const parsedData = assistantSchema.safeParse({ template, ...assistantData });\n\n    if (!parsedData.success) {\n      return { errors: parsedData.error.errors.map(({ message, path }) => ({ name: path.join('.'), message })) };\n    }\n\n    if (!!id) {\n      assistant = await updateUserAssistant(userId, id, {\n        name: assistantData.name,\n        description: assistantData.description,\n        mode: assistantData.mode,\n        status: assistantData.status,\n      });\n    } else {\n      assistant = await createUserAssistant(userId, assistantData, template as any);\n    }\n\n    revalidateTag('assistants');\n\n    return { value: assistant };\n  } catch (e) {\n    console.error(`[assistantClient] Error ${!!id ? 'updating' : 'creating'} assistant for user ${userId}:`, e);\n    return { value: null, error: '' };\n  }\n}\n\nexport async function getAssistantConfiguration(\n  id?: string,\n  full: boolean = true\n): Promise<AssistantConfiguration | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    return (await getFullConfiguration(assistantId || '', full)) as any;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function createCopyAssistant(assistant: Assistant): Promise<Assistant | null> {\n  try {\n    const userId = await getSessionUser();\n\n    if (!assistant || !userId) {\n      console.warn('Assistant not passed or user not authenticated!');\n      return null;\n    }\n\n    const copy = await duplicateAssistant(userId, assistant);\n    revalidateTag('assistants');\n\n    return copy;\n  } catch (error) {\n    console.error(`[instructionsClient] Error creating copy of assistant ${assistant.id}:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaData(id: string, data: Partial<AssistantMeta>): Promise<AssistantMeta | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    const updatedMeta = await updateAssistantMeta(assistantId, data as any);\n\n    revalidateTag('assistants');\n    return updatedMeta;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaPrice(\n  assistant: Assistant,\n  formData: FormData\n): Promise<State<PriceConfiguration | null>> {\n  let assistantId;\n  try {\n    assistantId = assistant.id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.unexpectedError', value: null };\n    }\n    const price = [...formData].reduce((data: any, [key, value]: any) => ({ ...data, [key]: value }), {});\n    const validatedData = assistantPriceSchema.parse(price);\n\n    if (validatedData instanceof Error) {\n      return { error: validatedData.message };\n    }\n\n    const updatedPrice = await upsertAssistantPrice(assistant.meta?.id || '', {\n      ...validatedData,\n      trialDays: !!validatedData.trialDays ? 14 : null,\n    } as any);\n\n    revalidateTag('assistants');\n    return { successMessage: 'General.successMessages.dataSaved', value: updatedPrice };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} meta price data:`, error);\n\n    return { error: 'General.errors.unexpectedError', value: null };\n  }\n}\n\nexport async function deleteAssistant(id: string) {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return;\n\n    await deleteUserAssistant(userId, id);\n    revalidateTag('assistants');\n  } catch (error) {\n    console.error(`[assistantClient] Error removing user ${userId} assistant ${id}:`, error);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiGsB,4BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1339, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/chatActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\n\nimport { AnalyzeStageData } from '@/lib/models/api.models';\nimport { Chat, ChatInfo, Message } from '@/lib/models/chat.models';\nimport { generateSessionName } from '@/lib/utils/chat.utils';\nimport {\n  createChat,\n  getUserChat,\n  getUserChats,\n  removeChat,\n  updateLastMessageInChat,\n  updateUserChat,\n} from '../db/chatClient';\nimport { getFirstStage } from './instructionsActions';\nimport { sendMessage } from './messagesAction';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function handleStageAnalysis(chatId: string, stageAnalysis: AnalyzeStageData | null): Promise<void> {\n  try {\n    if (!stageAnalysis) return;\n\n    const { transition_required, current_stage, next_stage } = stageAnalysis;\n\n    const [chat] = await Promise.all([\n      updateUserChat(chatId, {\n        stageAnalysis,\n        currentStage: transition_required ? next_stage : current_stage,\n      }),\n      updateLastMessageInChat(chatId, { stageAnalysis: JSON.stringify(stageAnalysis) }),\n    ]);\n\n    const eventEmitter = (await import('@/lib/eventEmitter')).default;\n    eventEmitter.emit(`message:${chat.userId}`, {\n      user_id: chat.userId,\n      event: 'chat-update',\n      data: { chatId: chat.id, type: 'stage-analysis' },\n    });\n  } catch (error) {\n    console.error(`[chatActions] error during saving chat ${chatId} stage analysis`, error);\n  }\n}\n\nexport async function getChats(): Promise<any> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    return userId ? await getUserChats(userId) : [];\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return [];\n  }\n}\n\nexport async function getChat(id: string): Promise<Chat | null> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return null;\n\n    const chat = await getUserChat(id, userId);\n\n    return chat as any;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n}\n\nexport async function deleteChat(chatId: string) {\n  let user_id;\n  try {\n    user_id = (await getSessionUser()) || '';\n    await removeChat(user_id, chatId);\n\n    revalidateTag(`chats`);\n  } catch (error) {\n    console.error(`[chatsActions] Error during deleting userr ${user_id} chat ${chatId}: `, error);\n  }\n}\n\nexport async function createNewChat(userId: string, assistantId: string): Promise<string> {\n  try {\n    const firstStage = await getFirstStage();\n    const newChat = await createChat(userId, {\n      currentStage: firstStage?.name,\n      name: generateSessionName(),\n      assistantId,\n    });\n\n    return newChat.id;\n  } catch (error) {\n    console.error(`[chatsActions] Error creating new chat for user ${userId}:`, error);\n\n    return '';\n  }\n}\n\nexport async function updateChat(\n  currentChatId: string | undefined,\n  messages: Message[],\n  chatInfo: ChatInfo\n): Promise<string> {\n  let user_id;\n  try {\n    const { userId, assistantId } = (await verifySession()) || {};\n    user_id = userId;\n\n    if (!userId || !assistantId) return '';\n\n    const [newMessage, ...prevMessages] = messages;\n    const chat_id = currentChatId || (await createNewChat(userId, assistantId));\n    await sendMessage({ userId, assistantId, newMessage, prevMessages, chat_id, chatInfo });\n\n    !currentChatId && revalidateTag(`chats`);\n    // TODO: instead revalidate try to return assistant message directly\n    return chat_id;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${user_id} chats:`, error);\n\n    return '';\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyDsB,UAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/FunctionalButtons.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useLocale, useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { useAsideContext } from '@/contexts/AsideContext';\nimport { PrivateRoutes } from '@/lib/constants';\nimport { HeapTrackEvent } from '@/lib/models/analytic.models';\nimport { Assistant } from '@/lib/models/assistant.models';\nimport { Chat } from '@/lib/models/chat.models';\nimport { User } from '@/lib/models/common.models';\nimport { heapAnalytics } from '@/lib/services/HeapAnalytics';\nimport { isAssistantCreationAllowed } from '@/lib/utils/common.utils';\nimport { getFomatedDate } from '@/lib/utils/date.utils';\nimport { generateAssistantFile, generateChatFile, handleFileDownload } from '@/lib/utils/file.utils';\nimport { getAssistantConfiguration } from '@/server/actions/assistantActions';\nimport { getChat } from '@/server/actions/chatActions';\nimport { Button } from './Button';\nimport Tooltip from './Tooltip';\n\nexport function AsideToggleButton({\n  className,\n  label,\n  closedLabel,\n  open,\n  iconClassName,\n  id,\n}: {\n  id?: string;\n  className?: string;\n  label?: string;\n  open: boolean;\n  closedLabel?: string;\n  iconClassName?: string;\n}) {\n  const { toggleAside, isAsideOpen } = useAsideContext();\n\n  if (open && isAsideOpen) return null;\n\n  return (\n    <Button id={id} variant=\"solid\" color=\"gray\" onClick={toggleAside} className={`z-10 w-max px-3.5 ${className}`}>\n      <i className={`${!isAsideOpen ? 'cbi-arrow-right' : 'cbi-arrow-left'} text-lg ${iconClassName}`} />\n\n      {closedLabel && !isAsideOpen ? closedLabel : label}\n    </Button>\n  );\n}\n\nexport function NewChatButton() {\n  const t = useTranslations();\n  const [showNotification, setShowNotification] = useState(false);\n\n  const handleShowNotification = async () => {\n    heapAnalytics.trackEvent(HeapTrackEvent.create_new_chat);\n    setShowNotification(true);\n    setTimeout(() => setShowNotification(false), 2000);\n  };\n\n  return (\n    <>\n      {showNotification && (\n        <div className=\"absolute left-1/2 top-1/2 flex -translate-x-1/2 -translate-y-1/2 flex-col items-center justify-center gap-y-2.5\">\n          <i className=\"cbi-tick-circle-fill !text-6xl text-main\"></i>\n          <p className=\"flex flex-col gap-y-1 text-center text-main\">\n            <span className=\"text-base\">{t('Chat.newChatTitle')}</span>\n            <span className=\"text-sm\">{t('Chat.newChatSubtitle')}</span>\n          </p>\n        </div>\n      )}\n      <Button\n        href=\"/\"\n        variant=\"solid\"\n        color=\"aquamarine\"\n        className=\"inline-flex items-center justify-center px-6 py-3 text-lg\"\n        onClick={handleShowNotification}\n      >\n        <i className=\"cbi-edit\"></i>\n        {t('Chat.newChatButton')}\n      </Button>\n    </>\n  );\n}\n\nexport function NewAssistantButton({\n  user,\n  assistants,\n  className,\n  labelKey,\n  iconClassName,\n  onClick,\n}: {\n  user: User | null;\n  assistants: Assistant[];\n  className?: string;\n  iconClassName?: string;\n  labelKey?: string;\n  onClick?: () => void;\n}) {\n  const t = useTranslations();\n  const isCreationAllowed = useMemo(\n    () => isAssistantCreationAllowed(user, assistants),\n    [user?.subscription, assistants.length]\n  );\n\n  return isCreationAllowed ? (\n    <>\n      <Button\n        id=\"assistant-manage\"\n        variant=\"solid\"\n        color=\"primary\"\n        className={twMerge(\n          'w-full text-nowrap rounded-xl p-3 text-base font-semibold text-main hover:z-20 hover:bg-background',\n          className\n        )}\n        href={`/new-coach`}\n        onClick={() => onClick?.()}\n      >\n        <i className={`cbi-add-square ${iconClassName}`} />\n        {t(labelKey || 'Assistants.createButton')}\n      </Button>\n    </>\n  ) : null;\n}\n\nexport function CopyToClipboardButton({\n  searchParams,\n  titileKey,\n  tooltipKey,\n  icon,\n  variant,\n  color,\n  className,\n  disabled,\n}: {\n  searchParams: string;\n  titileKey: string;\n  tooltipKey: string;\n  icon?: string;\n  variant?: any;\n  color?: any;\n  className?: string;\n  disabled?: boolean;\n}) {\n  const t = useTranslations();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const sharableLink = process.env.SHARE_LINK || 'https://coachbot.ai/chat';\n\n  const copyToClipboard = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(`${sharableLink}?${searchParams}`);\n\n      setShowTooltip(true);\n      setTimeout(() => {\n        setShowTooltip(false);\n      }, 1500);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  }, []);\n\n  return (\n    <div className=\"relative flex items-center\">\n      <Button\n        {...(variant && { variant })}\n        {...(color && { color })}\n        disabled={disabled}\n        className={twMerge(className || 'm-0 items-center text-nowrap p-0 text-sm text-storm-gray hover:text-main')}\n        onClick={copyToClipboard}\n      >\n        <i className={`text-lg leading-3 ${icon ?? 'cbi-export'}`} />\n        {t(titileKey)}\n      </Button>\n      {showTooltip && (\n        <Tooltip\n          tooltipClassName=\"-left-full w-fit -translate-y-2/3 -translate-x-[85%]\"\n          tooltipLabelClassName=\"py-0.5\"\n          initialShow={true}\n          iconClass={''}\n          tooltipLabel={tooltipKey}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function ExportAssistantButton({\n  assistant,\n  callback,\n  className,\n  iconClassName,\n}: {\n  assistant: Assistant;\n  callback?: () => any;\n  className?: string;\n  iconClassName?: string;\n}) {\n  const t = useTranslations();\n  const [loading, setLoading] = useState(false);\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null);\n\n  const handleExport = async () => {\n    try {\n      setLoading(true);\n      const assistantConfig = await getAssistantConfiguration(assistant.id);\n      const fileUrl = generateAssistantFile(assistant, assistantConfig);\n      const fileName = `${assistant.name.split(' ').join('_')}-instructions.md`;\n\n      handleFileDownload(fileName, fileUrl, downloadLinkRef.current);\n    } catch (error) {\n      console.error('Error exporting assistant file:', error);\n    } finally {\n      setLoading(false);\n      callback?.();\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={twMerge(\n          'm-0 items-center text-nowrap rounded-none border-0 p-0 text-sm text-storm-gray hover:text-main',\n          loading && 'pointer-events-none animate-pulse',\n          className\n        )}\n        onClick={handleExport}\n      >\n        <i className={`cbi-document-download text-xl ${iconClassName}`} />\n        {t('Assistants.downloadButton')}\n      </Button>\n      <a className=\"hidden\" ref={downloadLinkRef} href=\"\" />\n    </>\n  );\n}\n\nexport function ExportChatButton({ chat, className }: { chat: Chat; className?: string; iconClassName?: string }) {\n  const locale = useLocale();\n  const [loading, setLoading] = useState(false);\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null);\n  const date = getFomatedDate(chat.created_at, locale, {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  const handleExport = async () => {\n    try {\n      setLoading(true);\n      const fullChat = await getChat(chat.id);\n\n      if (!fullChat?.Messages?.length) return;\n\n      const fileUrl = generateChatFile(fullChat.Messages.reverse() || []);\n      const fileName = `chat-transcription-${date.replace(',', '').replace(/\\s+/g, '-')}.md`;\n\n      handleFileDownload(fileName, fileUrl, downloadLinkRef.current);\n    } catch (error) {\n      console.error('Error exporting chat file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={twMerge(\n          'cbi-import m-0 items-center text-nowrap rounded-none border-0 p-0 text-xl text-storm-gray hover:text-main',\n          loading && 'pointer-events-none animate-pulse',\n          className\n        )}\n        onClick={handleExport}\n      />\n      <a className=\"hidden\" ref={downloadLinkRef} href=\"\" />\n    </>\n  );\n}\n\nexport default function RedirectBack() {\n  const router = useRouter();\n\n  useEffect(() => {\n    router.back();\n  }, [router]);\n\n  return null;\n}\n\nexport function AccountToggleButton({ className }: { className?: string }) {\n  const pathname = usePathname();\n  const t = useTranslations();\n  const isAccountPath = pathname === PrivateRoutes.account;\n\n  return (\n    <Button variant=\"outline\" color=\"darkGray\" href={isAccountPath ? '/' : PrivateRoutes.account} className={className}>\n      <i className=\"cbi-close-circle text-lg\"></i>\n      {t(isAccountPath ? 'General.Header.accountButton' : 'General.Header.backToAccountButton')}\n    </Button>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1807, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Modal.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Dialog, DialogPanel, DialogTitle } from '@headlessui/react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from './Button';\nimport { Spinner } from './Loaders';\n\nconst variants = {\n  gray: 'border border-storm-gray text-main',\n  aquamarine: 'border border-dark-aquamarine text-dark-aquamarine',\n  red: 'border border-salmon text-salmon',\n};\n\nexport interface ModalProps {\n  variant: string;\n  children?: React.ReactNode;\n  isOpen: boolean;\n  isLoading?: boolean;\n  titleKey: string;\n  titleIcon?: string;\n  buttonTitleKey?: string;\n  cancelButtonTitleKey?: string;\n  buttonIcon?: string;\n  className?: string;\n  confirmButtonClass?: string;\n  titleClass?: string;\n  disabled?: boolean;\n  showButtons?: boolean;\n  confirm?: (value?: any) => Promise<any> | any;\n  closeModal?: () => void;\n}\n\nexport function Modal({\n  children,\n  isOpen,\n  closeModal,\n  titleKey,\n  titleIcon,\n  buttonTitleKey,\n  cancelButtonTitleKey,\n  confirmButtonClass,\n  titleClass,\n  buttonIcon,\n  disabled,\n  className,\n  confirm,\n  variant,\n  showButtons = true,\n}: ModalProps) {\n  const [showLoader, setShowLoader] = useState(false);\n  const t = useTranslations();\n  const router = useRouter();\n\n  const handleClose = () => {\n    closeModal ? closeModal() : router.back();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      setShowLoader(false);\n    }\n  }, [isOpen]);\n\n  return (\n    <Dialog as=\"div\" open={isOpen} className=\"relative z-[100]\" onClose={handleClose}>\n      <div className=\"fixed inset-0 bg-violet-950/75\">\n        <div className=\"fixed inset-0 z-10 mx-auto w-fit min-w-96\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center sm:items-center sm:p-0\">\n            <DialogPanel\n              className={twMerge(\n                'relative flex max-h-[90vh] w-full min-w-96 transform flex-col gap-y-5 overflow-y-auto rounded-2xl bg-gunmetal p-5 text-left shadow-xl transition-all sm:p-7',\n                (variants as any)[variant]\n              )}\n            >\n              <Button\n                type=\"button\"\n                onClick={handleClose}\n                className={twMerge(\n                  'cbi-close-circle absolute right-0 top-0 p-3 text-light-gray',\n                  'cursor-pointer bg-inherit outline-none hover:bg-inherit hover:text-main active:bg-inherit'\n                )}\n              />\n\n              <div className={twMerge('flex items-start')}>\n                <div className={twMerge('flex w-full flex-col gap-8 text-left', className)}>\n                  <DialogTitle\n                    as=\"h3\"\n                    className={twMerge('inline-flex items-center gap-x-2 text-lg font-medium uppercase', titleClass)}\n                  >\n                    {titleIcon && <i className={titleIcon}></i>}\n                    {t(titleKey)}\n                  </DialogTitle>\n\n                  {children}\n                </div>\n              </div>\n\n              {showButtons && (\n                <div className=\"flex w-1/3 flex-row justify-end gap-x-1 self-end\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    color=\"darkGray\"\n                    disabled={showLoader}\n                    onClick={handleClose}\n                    className=\"flex-grow px-10\"\n                  >\n                    {t(cancelButtonTitleKey || 'General.cancelButton')}\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    variant=\"solid\"\n                    color=\"gray\"\n                    disabled={disabled || showLoader}\n                    onClick={() => {\n                      setShowLoader(true);\n                      if (confirm) confirm();\n                    }}\n                    className={twMerge(\n                      'inline-flex flex-grow items-center text-nowrap px-7 py-3 text-lg disabled:opacity-30',\n                      showLoader && 'animate-pulse',\n                      confirmButtonClass\n                    )}\n                  >\n                    {showLoader ? <Spinner /> : buttonIcon && <i className={buttonIcon}></i>}\n                    {buttonTitleKey && t(buttonTitleKey)}\n                  </Button>\n                </div>\n              )}\n            </DialogPanel>\n          </div>\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AATA;;;;;;;;AAWA,MAAM,WAAW;IACf,MAAM;IACN,YAAY;IACZ,KAAK;AACP;AAqBO,SAAS,MAAM,EACpB,QAAQ,EACR,MAAM,EACN,UAAU,EACV,QAAQ,EACR,SAAS,EACT,cAAc,EACd,oBAAoB,EACpB,kBAAkB,EAClB,UAAU,EACV,UAAU,EACV,QAAQ,EACR,SAAS,EACT,OAAO,EACP,OAAO,EACP,cAAc,IAAI,EACP;;IACX,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,IAAI,CAAA,GAAA,yMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAClB,aAAa,eAAe,OAAO,IAAI;IACzC;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,IAAI,CAAC,QAAQ;gBACX,cAAc;YAChB;QACF;0BAAG;QAAC;KAAO;IAEX,qBACE,6LAAC,kLAAA,CAAA,SAAM;QAAC,IAAG;QAAM,MAAM;QAAQ,WAAU;QAAmB,SAAS;kBACnE,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,kLAAA,CAAA,cAAW;wBACV,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,+JACA,AAAC,QAAgB,CAAC,QAAQ;;0CAG5B,6LAAC,2HAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAS;gCACT,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,+DACA;;;;;;0CAIJ,6LAAC;gCAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;0CACtB,cAAA,6LAAC;oCAAI,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,wCAAwC;;sDAC9D,6LAAC,kLAAA,CAAA,cAAW;4CACV,IAAG;4CACH,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,kEAAkE;;gDAEpF,2BAAa,6LAAC;oDAAE,WAAW;;;;;;gDAC3B,EAAE;;;;;;;wCAGJ;;;;;;;;;;;;4BAIJ,6BACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,2HAAA,CAAA,SAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,OAAM;wCACN,UAAU;wCACV,SAAS;wCACT,WAAU;kDAET,EAAE,wBAAwB;;;;;;kDAG7B,6LAAC,2HAAA,CAAA,SAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,OAAM;wCACN,UAAU,YAAY;wCACtB,SAAS;4CACP,cAAc;4CACd,IAAI,SAAS;wCACf;wCACA,WAAW,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EACf,wFACA,cAAc,iBACd;;4CAGD,2BAAa,6LAAC,4HAAA,CAAA,UAAO;;;;uDAAM,4BAAc,6LAAC;gDAAE,WAAW;;;;;;4CACvD,kBAAkB,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzC;GAxGgB;;QAkBJ,yMAAA,CAAA,kBAAe;QACV,qIAAA,CAAA,YAAS;;;KAnBV","debugId":null}}]
}