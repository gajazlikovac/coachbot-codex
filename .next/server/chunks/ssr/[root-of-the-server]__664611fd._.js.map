{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/chatActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\n\nimport { AnalyzeStageData } from '@/lib/models/api.models';\nimport { Chat, ChatInfo, Message } from '@/lib/models/chat.models';\nimport { generateSessionName } from '@/lib/utils/chat.utils';\nimport {\n  createChat,\n  getUserChat,\n  getUserChats,\n  removeChat,\n  updateLastMessageInChat,\n  updateUserChat,\n} from '../db/chatClient';\nimport { getFirstStage } from './instructionsActions';\nimport { sendMessage } from './messagesAction';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function handleStageAnalysis(chatId: string, stageAnalysis: AnalyzeStageData | null): Promise<void> {\n  try {\n    if (!stageAnalysis) return;\n\n    const { transition_required, current_stage, next_stage } = stageAnalysis;\n\n    const [chat] = await Promise.all([\n      updateUserChat(chatId, {\n        stageAnalysis,\n        currentStage: transition_required ? next_stage : current_stage,\n      }),\n      updateLastMessageInChat(chatId, { stageAnalysis: JSON.stringify(stageAnalysis) }),\n    ]);\n\n    const eventEmitter = (await import('@/lib/eventEmitter')).default;\n    eventEmitter.emit(`message:${chat.userId}`, {\n      user_id: chat.userId,\n      event: 'chat-update',\n      data: { chatId: chat.id, type: 'stage-analysis' },\n    });\n  } catch (error) {\n    console.error(`[chatActions] error during saving chat ${chatId} stage analysis`, error);\n  }\n}\n\nexport async function getChats(): Promise<any> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    return userId ? await getUserChats(userId) : [];\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return [];\n  }\n}\n\nexport async function getChat(id: string): Promise<Chat | null> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return null;\n\n    const chat = await getUserChat(id, userId);\n\n    return chat as any;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n}\n\nexport async function deleteChat(chatId: string) {\n  let user_id;\n  try {\n    user_id = (await getSessionUser()) || '';\n    await removeChat(user_id, chatId);\n\n    revalidateTag(`chats`);\n  } catch (error) {\n    console.error(`[chatsActions] Error during deleting userr ${user_id} chat ${chatId}: `, error);\n  }\n}\n\nexport async function createNewChat(userId: string, assistantId: string): Promise<string> {\n  try {\n    const firstStage = await getFirstStage();\n    const newChat = await createChat(userId, {\n      currentStage: firstStage?.name,\n      name: generateSessionName(),\n      assistantId,\n    });\n\n    return newChat.id;\n  } catch (error) {\n    console.error(`[chatsActions] Error creating new chat for user ${userId}:`, error);\n\n    return '';\n  }\n}\n\nexport async function updateChat(\n  currentChatId: string | undefined,\n  messages: Message[],\n  chatInfo: ChatInfo\n): Promise<string> {\n  let user_id;\n  try {\n    const { userId, assistantId } = (await verifySession()) || {};\n    user_id = userId;\n\n    if (!userId || !assistantId) return '';\n\n    const [newMessage, ...prevMessages] = messages;\n    const chat_id = currentChatId || (await createNewChat(userId, assistantId));\n    await sendMessage({ userId, assistantId, newMessage, prevMessages, chat_id, chatInfo });\n\n    !currentChatId && revalidateTag(`chats`);\n    // TODO: instead revalidate try to return assistant message directly\n    return chat_id;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${user_id} chats:`, error);\n\n    return '';\n  }\n}\n"],"names":[],"mappings":";;;;;;IAuGsB,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/Chat.tsx"],"sourcesContent":["'use client';\n\nimport { use, useCallback, useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/navigation';\n\nimport { useRootContext } from '@/contexts/RootContextProvider';\nimport { Chat as ChatModel, Message, MessageRole } from '@/lib/models/chat.models';\nimport { getMessage } from '@/lib/utils/chat.utils';\nimport { updateChat } from '@/server/actions/chatActions';\n\nconst Messages = dynamic(() => import('./Messages'));\nconst ControlPanel = dynamic(() => import('./ControlPanel'));\n\nexport default function Chat({ chat$ }: { chat$?: Promise<ChatModel | null> }) {\n  const chat = chat$ ? use(chat$) : ({} as ChatModel);\n  const [allMessages, setAllMessages] = useState<Message[]>([]);\n  const { chatInfo, setSelectedChat, selectedAssistant } = useRootContext();\n  const router = useRouter();\n\n  useEffect(() => {\n    setSelectedChat(chat);\n    setAllMessages(chat?.Messages || []);\n  }, [chat?.Messages?.length]);\n\n  const navigate = useCallback(\n    async (id: string) => {\n      if (!chat?.id || chat?.id !== id) {\n        router.push(`/chat/${id}`);\n      }\n    },\n    [chat?.id, router]\n  );\n\n  const handleMessageSend = useCallback(\n    async (message: string) => {\n      const newMessage = getMessage(message, MessageRole.user, chatInfo);\n      if (!selectedAssistant?.id) {\n        setAllMessages([\n          { id: `${allMessages.length + 2}`, content: '', role: 'noAssistant' },\n          newMessage,\n          ...allMessages,\n        ]);\n        return;\n      }\n\n      setAllMessages([{ ...newMessage, isLoading: true }, ...allMessages]);\n\n      const chatId = await updateChat(chat?.id, [newMessage, ...allMessages], chatInfo);\n\n      chatId\n        ? navigate(chatId)\n        : setAllMessages((prev) =>\n            prev.map((message) =>\n              message.id === newMessage.id\n                ? { ...message, error: true, isLoading: false }\n                : { ...message, isLoading: false }\n            )\n          );\n    },\n    [chat, chatInfo, allMessages, selectedAssistant?.id]\n  );\n\n  return (\n    <section className=\"z-0 flex min-h-0 flex-grow flex-col\">\n      <Messages className=\"\" messages={allMessages} />\n      <ControlPanel onSendMessage={handleMessageSend} />\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AATA;;;;;;;;;AAWA,MAAM,WAAW,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;;AACzB,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;;AAEd,SAAS,KAAK,EAAE,KAAK,EAAyC;IAC3E,MAAM,OAAO,QAAQ,CAAA,GAAA,qMAAA,CAAA,MAAG,AAAD,EAAE,SAAU,CAAC;IACpC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAC5D,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,iBAAc,AAAD;IACtE,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,gBAAgB;QAChB,eAAe,MAAM,YAAY,EAAE;IACrC,GAAG;QAAC,MAAM,UAAU;KAAO;IAE3B,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACzB,OAAO;QACL,IAAI,CAAC,MAAM,MAAM,MAAM,OAAO,IAAI;YAChC,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI;QAC3B;IACF,GACA;QAAC,MAAM;QAAI;KAAO;IAGpB,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAClC,OAAO;QACL,MAAM,aAAa,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD,EAAE,SAAS,sIAAA,CAAA,cAAW,CAAC,IAAI,EAAE;QACzD,IAAI,CAAC,mBAAmB,IAAI;YAC1B,eAAe;gBACb;oBAAE,IAAI,GAAG,YAAY,MAAM,GAAG,GAAG;oBAAE,SAAS;oBAAI,MAAM;gBAAc;gBACpE;mBACG;aACJ;YACD;QACF;QAEA,eAAe;YAAC;gBAAE,GAAG,UAAU;gBAAE,WAAW;YAAK;eAAM;SAAY;QAEnE,MAAM,SAAS,MAAM,CAAA,GAAA,gKAAA,CAAA,aAAU,AAAD,EAAE,MAAM,IAAI;YAAC;eAAe;SAAY,EAAE;QAExE,SACI,SAAS,UACT,eAAe,CAAC,OACd,KAAK,GAAG,CAAC,CAAC,UACR,QAAQ,EAAE,KAAK,WAAW,EAAE,GACxB;oBAAE,GAAG,OAAO;oBAAE,OAAO;oBAAM,WAAW;gBAAM,IAC5C;oBAAE,GAAG,OAAO;oBAAE,WAAW;gBAAM;IAG7C,GACA;QAAC;QAAM;QAAU;QAAa,mBAAmB;KAAG;IAGtD,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAS,WAAU;gBAAG,UAAU;;;;;;0BACjC,8OAAC;gBAAa,eAAe;;;;;;;;;;;;AAGnC","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/ModalButtons.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, useCallback, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from './Button';\nimport { Modal, ModalProps } from './Modal';\n\nexport function DeleteWithConfirmationButton({\n  config,\n  iconClassName,\n  className,\n  children,\n  buttonText,\n}: {\n  config: Omit<ModalProps, 'isOpen' | 'closeModal'>;\n  iconClassName?: string;\n  className?: string;\n  children: ReactNode;\n  buttonText?: string;\n}) {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleConfirm = useCallback(async () => {\n    config?.confirm && (await config?.confirm());\n    setModalOpen(false);\n  }, [config.confirm]);\n\n  return (\n    <>\n      <Button className={twMerge('items-center justify-center', className)} onClick={() => setModalOpen(true)}>\n        <i className={iconClassName}></i>\n        {buttonText}\n      </Button>\n      {config && modalOpen && (\n        <Modal\n          {...config}\n          isOpen={modalOpen}\n          closeModal={() => setModalOpen(false)}\n          confirm={handleConfirm}\n          confirmButtonClass=\"bg-main hover:bg-white/[8%] hover:border-background-border/[16%] text-background\"\n        >\n          {children}\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport function EditModalButton({\n  initialValue,\n  config,\n  className,\n  children,\n}: {\n  config: Omit<ModalProps, 'isOpen' | 'closeModal'>;\n  className?: string;\n  children: ReactNode;\n  initialValue: string;\n}) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [value, setValue] = useState('');\n\n  const handleConfirm = useCallback(async () => {\n    config?.confirm && (await config?.confirm(value));\n    setModalOpen(false);\n  }, [config.confirm, value]);\n\n  return (\n    <>\n      <Button className={(twMerge('cbi-trash'), className)} onClick={() => setModalOpen(true)} />\n      {config && modalOpen && (\n        <Modal {...config} isOpen={modalOpen} closeModal={() => setModalOpen(false)} confirm={handleConfirm}>\n          {children}\n          <input\n            id=\"edit-value-input\"\n            required\n            defaultValue={initialValue || ''}\n            className={twMerge(\n              'focus:no-outline rounded-lg border border-light-gray bg-white/[18%] px-4 py-2 text-lg text-main placeholder:text-base focus:ring-0'\n            )}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport function ModalButton({\n  config,\n  className,\n  children,\n  showButtons = false,\n}: {\n  config: Omit<ModalProps, 'isOpen' | 'closeModal'>;\n  className?: string;\n  children: ReactNode;\n  showButtons?: boolean;\n}) {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  return (\n    <>\n      <Button className={(twMerge('cbi-trash'), className)} onClick={() => setModalOpen(true)} />\n      {config && modalOpen && (\n        <Modal\n          {...config}\n          showButtons={showButtons}\n          isOpen={modalOpen}\n          closeModal={() => setModalOpen(false)}\n          confirm={() => setModalOpen(false)}\n        >\n          {children}\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQO,SAAS,6BAA6B,EAC3C,MAAM,EACN,aAAa,EACb,SAAS,EACT,QAAQ,EACR,UAAU,EAOX;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,QAAQ,WAAY,MAAM,QAAQ;QAClC,aAAa;IACf,GAAG;QAAC,OAAO,OAAO;KAAC;IAEnB,qBACE;;0BACE,8OAAC,wHAAA,CAAA,SAAM;gBAAC,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,+BAA+B;gBAAY,SAAS,IAAM,aAAa;;kCAChG,8OAAC;wBAAE,WAAW;;;;;;oBACb;;;;;;;YAEF,UAAU,2BACT,8OAAC,uHAAA,CAAA,QAAK;gBACH,GAAG,MAAM;gBACV,QAAQ;gBACR,YAAY,IAAM,aAAa;gBAC/B,SAAS;gBACT,oBAAmB;0BAElB;;;;;;;;AAKX;AAEO,SAAS,gBAAgB,EAC9B,YAAY,EACZ,MAAM,EACN,SAAS,EACT,QAAQ,EAMT;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,QAAQ,WAAY,MAAM,QAAQ,QAAQ;QAC1C,aAAa;IACf,GAAG;QAAC,OAAO,OAAO;QAAE;KAAM;IAE1B,qBACE;;0BACE,8OAAC,wHAAA,CAAA,SAAM;gBAAC,WAAW,CAAC,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,cAAc,SAAS;gBAAG,SAAS,IAAM,aAAa;;;;;;YACjF,UAAU,2BACT,8OAAC,uHAAA,CAAA,QAAK;gBAAE,GAAG,MAAM;gBAAE,QAAQ;gBAAW,YAAY,IAAM,aAAa;gBAAQ,SAAS;;oBACnF;kCACD,8OAAC;wBACC,IAAG;wBACH,QAAQ;wBACR,cAAc,gBAAgB;wBAC9B,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf;wBAEF,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;AAMpD;AAEO,SAAS,YAAY,EAC1B,MAAM,EACN,SAAS,EACT,QAAQ,EACR,cAAc,KAAK,EAMpB;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE;;0BACE,8OAAC,wHAAA,CAAA,SAAM;gBAAC,WAAW,CAAC,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,cAAc,SAAS;gBAAG,SAAS,IAAM,aAAa;;;;;;YACjF,UAAU,2BACT,8OAAC,uHAAA,CAAA,QAAK;gBACH,GAAG,MAAM;gBACV,aAAa;gBACb,QAAQ;gBACR,YAAY,IAAM,aAAa;gBAC/B,SAAS,IAAM,aAAa;0BAE3B;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/RadioGroup.tsx"],"sourcesContent":["'use client';\n\nimport { RadioGroup as Group, Radio } from '@headlessui/react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nconst variants = {\n  white:\n    'bg-white-opacity text-light-gray border border-transparent hover:border-main hover:text-main data-[checked]:bg-storm-gray data-[checked]:border-storm-gray data-[checked]:text-main',\n  graphic:\n    'bg-graphic/[14%] border border-white-opacity text-light-gray hover:border-main hover:text-main data-[checked]:bg-background data-[checked]:text-main',\n  bordered:\n    'bg-white-opacity text-light-gray border border-transparent hover:border-main hover:text-main data-[checked]:border-main data-[checked]:text-main data-[checked]:bg-storm-gray',\n  transparent:\n    'bg-transparent text-light-gray hover:bg-white-opacity hover:text-main data-[checked]:bg-background data-[checked]:text-main',\n  aquamarine:\n    'bg-transparent text-light-gray hover:bg-white-opacity hover:text-main data-[checked]:bg-dark-aquamarine data-[checked]:text-main rounded-md',\n};\n\nexport interface Option {\n  id: string | number;\n  labelKey?: string;\n  value: any;\n  displayValue?: any;\n  icon?: string;\n  className?: string;\n  disabled?: boolean;\n  titleKey?: string;\n}\n\nexport interface RadioGroupProps {\n  id?: string;\n  name?: string;\n  selected?: any;\n  className?: string;\n  variant?: keyof typeof variants;\n  optionClassName?: string;\n  iconClassName?: string;\n  options: Option[];\n  disabled?: boolean;\n  setSelected?: (selected: any) => void | Promise<void>;\n}\n\nexport const RadioGroup: React.FC<RadioGroupProps> = ({\n  id,\n  name,\n  className,\n  optionClassName,\n  iconClassName,\n  selected,\n  options,\n  variant,\n  disabled,\n  setSelected,\n}) => {\n  const t = useTranslations();\n  return (\n    <Group\n      id={id}\n      name={name}\n      disabled={disabled}\n      value={selected}\n      onChange={setSelected}\n      aria-label=\"radio group\"\n      className={twMerge('flex flex-row', disabled && 'pointer-events-none', className)}\n    >\n      {options.map((option, index) => (\n        <Radio\n          disabled={option.disabled}\n          key={option.id || index}\n          value={option.value || option}\n          className={twMerge(\n            'group relative flex flex-1 cursor-pointer items-center justify-center gap-x-3 text-nowrap rounded-xl p-1.5 transition focus:outline-none',\n            variant && variants[variant],\n            option.disabled && 'cursor-not-allowed opacity-70',\n            optionClassName,\n            option.className\n          )}\n          data-activity-radio={option.value}\n          title={option.titleKey && t(option.titleKey)}\n        >\n          {option.icon && <i className={twMerge(option.icon, iconClassName)}></i>}\n          {option.labelKey && (\n            <p className=\"inline-flex gap-x-2\">\n              {t(option.labelKey)}\n              {option.displayValue != null && <span className=\"font-bold\">{option.displayValue}</span>}\n            </p>\n          )}\n        </Radio>\n      ))}\n    </Group>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,WAAW;IACf,OACE;IACF,SACE;IACF,UACE;IACF,aACE;IACF,YACE;AACJ;AA0BO,MAAM,aAAwC,CAAC,EACpD,EAAE,EACF,IAAI,EACJ,SAAS,EACT,eAAe,EACf,aAAa,EACb,QAAQ,EACR,OAAO,EACP,OAAO,EACP,QAAQ,EACR,WAAW,EACZ;IACC,MAAM,IAAI,CAAA,GAAA,sMAAA,CAAA,kBAAe,AAAD;IACxB,qBACE,8OAAC,+LAAA,CAAA,aAAK;QACJ,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,UAAU;QACV,cAAW;QACX,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB,YAAY,uBAAuB;kBAEtE,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC,+LAAA,CAAA,QAAK;gBACJ,UAAU,OAAO,QAAQ;gBAEzB,OAAO,OAAO,KAAK,IAAI;gBACvB,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf,4IACA,WAAW,QAAQ,CAAC,QAAQ,EAC5B,OAAO,QAAQ,IAAI,iCACnB,iBACA,OAAO,SAAS;gBAElB,uBAAqB,OAAO,KAAK;gBACjC,OAAO,OAAO,QAAQ,IAAI,EAAE,OAAO,QAAQ;;oBAE1C,OAAO,IAAI,kBAAI,8OAAC;wBAAE,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,OAAO,IAAI,EAAE;;;;;;oBAClD,OAAO,QAAQ,kBACd,8OAAC;wBAAE,WAAU;;4BACV,EAAE,OAAO,QAAQ;4BACjB,OAAO,YAAY,IAAI,sBAAQ,8OAAC;gCAAK,WAAU;0CAAa,OAAO,YAAY;;;;;;;;;;;;;eAhB/E,OAAO,EAAE,IAAI;;;;;;;;;;AAuB5B","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ChatModeSwitcher.tsx"],"sourcesContent":["'use client';\n\nimport { useRootContext } from '@/contexts/RootContextProvider';\nimport { ChatMode } from '@/lib/models/chat.models';\nimport { RadioGroup } from '@/shared/RadioGroup';\n\nexport const modeOptions = [\n  {\n    id: 0,\n    value: ChatMode.new,\n    icon: 'cbi-plant-growth',\n    className: 'relative after:content-[\"or\"] after:text-storm-gray after:absolute after:-right-7',\n    titleKey: 'Chat.ChatMode.newUserTitle',\n  },\n  {\n    id: 1,\n    value: ChatMode.recurring,\n    icon: 'cbi-refresh-empty',\n    titleKey: 'Chat.ChatMode.recurringUserTitle',\n  },\n];\n\nexport default function ChatModeSwitcher() {\n  const { chatInfo, setChatInfo } = useRootContext();\n\n  return (\n    <RadioGroup\n      options={modeOptions}\n      selected={chatInfo.mode}\n      setSelected={(mode: ChatMode) => setChatInfo((prevInfo) => ({ ...prevInfo, mode }))}\n      optionClassName=\"rounded-full w-max acpect-square p-3.5 h-full border border-white-opacity data-[checked]:bg-main data-[checked]:text-background\"\n      className=\"gap-x-10 rounded-full bg-graphic/[14%] p-1 backdrop-blur-sm\"\n      variant=\"white\"\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,MAAM,cAAc;IACzB;QACE,IAAI;QACJ,OAAO,sIAAA,CAAA,WAAQ,CAAC,GAAG;QACnB,MAAM;QACN,WAAW;QACX,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO,sIAAA,CAAA,WAAQ,CAAC,SAAS;QACzB,MAAM;QACN,UAAU;IACZ;CACD;AAEc,SAAS;IACtB,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,iBAAc,AAAD;IAE/C,qBACE,8OAAC,4HAAA,CAAA,aAAU;QACT,SAAS;QACT,UAAU,SAAS,IAAI;QACvB,aAAa,CAAC,OAAmB,YAAY,CAAC,WAAa,CAAC;oBAAE,GAAG,QAAQ;oBAAE;gBAAK,CAAC;QACjF,iBAAgB;QAChB,WAAU;QACV,SAAQ;;;;;;AAGd","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/hooks/useSubmitOnEnter.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nexport function useSubmitOnEnter(onSubmit: () => void, isSubmitting: boolean) {\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        if (!isSubmitting) {\n          onSubmit();\n        }\n      }\n    },\n    [onSubmit, isSubmitting]\n  );\n\n  return handleKeyDown;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,iBAAiB,QAAoB,EAAE,YAAqB;IAC1E,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC9B,CAAC;QACC,IAAI,MAAM,GAAG,KAAK,WAAW,CAAC,MAAM,QAAQ,EAAE;YAC5C,MAAM,cAAc;YACpB,IAAI,CAAC,cAAc;gBACjB;YACF;QACF;IACF,GACA;QAAC;QAAU;KAAa;IAG1B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Input.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, ReactNode, useCallback, useEffect, useRef } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nexport interface InputProps {\n  children?: ReactNode;\n  id: string;\n  name?: string;\n  type?: string;\n  className?: string;\n  inputClassName?: string;\n  placeholderKey?: string;\n  placeholder?: string;\n  disablePalaceholderKey?: string;\n  initialValue?: string;\n  labelKey?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  isSubmitting?: boolean;\n  labelClassName?: string;\n  step?: string;\n  onChange?: (event: any) => any;\n}\n\nexport const Input = forwardRef<HTMLInputElement | HTMLTextAreaElement, InputProps>(\n  (\n    {\n      id,\n      type = 'text',\n      name,\n      className,\n      inputClassName,\n      placeholderKey,\n      placeholder,\n      disablePalaceholderKey,\n      labelKey,\n      labelClassName,\n      disabled,\n      children,\n      initialValue,\n      isSubmitting,\n      readOnly,\n      ...props\n    },\n    ref\n  ) => {\n    const t = useTranslations();\n    const elRef = useRef<HTMLTextAreaElement | HTMLInputElement>(null);\n\n    const adjustHeight = useCallback(() => {\n      if (type === 'textarea' && elRef?.current) {\n        elRef.current.style.height = 'auto';\n        elRef.current.style.height = `${elRef.current.scrollHeight + 2}px`;\n      }\n    }, [elRef]);\n\n    useEffect(() => adjustHeight(), [isSubmitting, initialValue]);\n\n    return (\n      <div className={twMerge('relative flex flex-col gap-x-2 font-normal', className)}>\n        {labelKey && (\n          <label htmlFor={id} className={twMerge('text-base text-light-gray', labelClassName)}>\n            {t(labelKey)}\n            {children}\n          </label>\n        )}\n        {type === 'textarea' ? (\n          <textarea\n            ref={(el) => {\n              elRef.current = el;\n              if (typeof ref === 'function') ref(el);\n              else if (ref) (ref as any).current = el;\n            }}\n            id={id}\n            disabled={disabled}\n            rows={1}\n            defaultValue={initialValue}\n            name={name}\n            placeholder={\n              disabled && disablePalaceholderKey ? t(disablePalaceholderKey) : placeholderKey && t(placeholderKey)\n            }\n            className={twMerge(\n              'focus:no-outline !max-h-40 resize-none overflow-y-auto rounded-lg border border-light-gray bg-white/[18%] px-4 py-3 text-lg text-main focus:ring-0',\n              disabled && 'pointer-events-none animate-pulse bg-dark-gray/[80%] text-transparent placeholder:text-main',\n              inputClassName\n            )}\n            {...props}\n            onChange={async (e: any) => {\n              adjustHeight();\n              await props.onChange?.(e);\n            }}\n          />\n        ) : (\n          <input\n            ref={ref as any}\n            id={id}\n            disabled={disabled}\n            readOnly={readOnly}\n            type={type}\n            name={name}\n            defaultValue={initialValue}\n            placeholder={(placeholderKey && t(placeholderKey)) || placeholder}\n            className={twMerge(\n              'focus:no-outline rounded-lg border border-light-gray bg-white/[18%] px-4 py-2 text-lg text-main placeholder:text-base focus:ring-0',\n              disabled && 'pointer-events-none animate-pulse bg-dark-gray/[80%] placeholder:hidden',\n              inputClassName\n            )}\n            {...props}\n          />\n        )}\n        {children}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AA0BO,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAC5B,CACE,EACE,EAAE,EACF,OAAO,MAAM,EACb,IAAI,EACJ,SAAS,EACT,cAAc,EACd,cAAc,EACd,WAAW,EACX,sBAAsB,EACtB,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,IAAI,CAAA,GAAA,sMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA0C;IAE7D,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC/B,IAAI,SAAS,cAAc,OAAO,SAAS;YACzC,MAAM,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG;YAC7B,MAAM,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,YAAY,GAAG,EAAE,EAAE,CAAC;QACpE;IACF,GAAG;QAAC;KAAM;IAEV,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE,IAAM,gBAAgB;QAAC;QAAc;KAAa;IAE5D,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,8CAA8C;;YACnE,0BACC,8OAAC;gBAAM,SAAS;gBAAI,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,6BAA6B;;oBACjE,EAAE;oBACF;;;;;;;YAGJ,SAAS,2BACR,8OAAC;gBACC,KAAK,CAAC;oBACJ,MAAM,OAAO,GAAG;oBAChB,IAAI,OAAO,QAAQ,YAAY,IAAI;yBAC9B,IAAI,KAAK,AAAC,IAAY,OAAO,GAAG;gBACvC;gBACA,IAAI;gBACJ,UAAU;gBACV,MAAM;gBACN,cAAc;gBACd,MAAM;gBACN,aACE,YAAY,yBAAyB,EAAE,0BAA0B,kBAAkB,EAAE;gBAEvF,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf,sJACA,YAAY,+FACZ;gBAED,GAAG,KAAK;gBACT,UAAU,OAAO;oBACf;oBACA,MAAM,MAAM,QAAQ,GAAG;gBACzB;;;;;qCAGF,8OAAC;gBACC,KAAK;gBACL,IAAI;gBACJ,UAAU;gBACV,UAAU;gBACV,MAAM;gBACN,MAAM;gBACN,cAAc;gBACd,aAAa,AAAC,kBAAkB,EAAE,mBAAoB;gBACtD,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf,sIACA,YAAY,2EACZ;gBAED,GAAG,KAAK;;;;;;YAGZ;;;;;;;AAGP;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ControlPanel.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { twMerge } from 'tailwind-merge';\n\nimport { useSubmitOnEnter } from '@/hooks/useSubmitOnEnter';\nimport { Button } from '@/shared/Button';\nimport { Input } from '@/shared/Input';\n\nexport default function ControlPanel({ onSendMessage }: { onSendMessage?: (message: string) => Promise<void> }) {\n  const {\n    setValue,\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors, isLoading, isSubmitting },\n  } = useForm();\n  const formValues = watch();\n  const isDisabled = useMemo(() => !!errors.message || isLoading || isSubmitting, [errors, isLoading, isSubmitting]);\n\n  const onSubmit = useCallback(\n    async ({ message }: any) => {\n      setValue('message', '');\n\n      onSendMessage && (await onSendMessage(message));\n    },\n    [onSendMessage]\n  );\n\n  const handleKeyDown = useSubmitOnEnter(() => handleSubmit(onSubmit)(), isSubmitting);\n\n  return (\n    <div className=\"z-10 flex shrink-0 gap-x-5\">\n      <form\n        className=\"flex flex-grow flex-row items-end gap-x-2 py-0.5\"\n        onKeyDown={handleKeyDown}\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Input\n          id=\"chat-input\"\n          type=\"textarea\"\n          isSubmitting={isSubmitting}\n          initialValue={formValues.message}\n          placeholderKey=\"Chat.inputPlaceholder\"\n          disablePalaceholderKey=\"Chat.loadingInputPlaceholder\"\n          className=\"textarea flex-grow overflow-hidden rounded-lg\"\n          inputClassName=\"h-full resize-none overflow-y-auto max-h-[3.6em] line-height-[1.2em]\"\n          {...register('message')}\n        />\n\n        <Button\n          variant=\"solid\"\n          color=\"primary\"\n          type=\"submit\"\n          className={twMerge('cbi-send h-max px-4 py-2.5 text-2xl')}\n          disabled={isDisabled}\n        />\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AARA;;;;;;;;AAUe,SAAS,aAAa,EAAE,aAAa,EAA0D;IAC5G,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,EAC/C,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD;IACV,MAAM,aAAa;IACnB,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAC,CAAC,OAAO,OAAO,IAAI,aAAa,cAAc;QAAC;QAAQ;QAAW;KAAa;IAEjH,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACzB,OAAO,EAAE,OAAO,EAAO;QACrB,SAAS,WAAW;QAEpB,iBAAkB,MAAM,cAAc;IACxC,GACA;QAAC;KAAc;IAGjB,MAAM,gBAAgB,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE,IAAM,aAAa,aAAa;IAEvE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,WAAU;YACV,WAAW;YACX,UAAU,aAAa;;8BAEvB,8OAAC,uHAAA,CAAA,QAAK;oBACJ,IAAG;oBACH,MAAK;oBACL,cAAc;oBACd,cAAc,WAAW,OAAO;oBAChC,gBAAe;oBACf,wBAAuB;oBACvB,WAAU;oBACV,gBAAe;oBACd,GAAG,SAAS,UAAU;;;;;;8BAGzB,8OAAC,wHAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,OAAM;oBACN,MAAK;oBACL,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE;oBACnB,UAAU;;;;;;;;;;;;;;;;;AAKpB","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Markdown.tsx"],"sourcesContent":["'use client';\n\nimport MDEditor from '@uiw/react-md-editor';\nimport rehypeSanitize from 'rehype-sanitize';\nimport remarkGfm from 'remark-gfm';\n\nexport default function Markdown({\n  content,\n  isEditMode,\n  onChange,\n}: {\n  content: string;\n  isEditMode?: boolean;\n  onChange?: (text: string) => any;\n}) {\n  return isEditMode ? (\n    <MDEditor\n      value={content}\n      preview=\"edit\"\n      height=\"auto\"\n      hideToolbar={true}\n      previewOptions={{\n        rehypePlugins: [[rehypeSanitize]],\n      }}\n      onChange={(text?: string) => onChange?.(text || '')}\n      className=\"md-editor-custom !bg-transparent !text-main !shadow-none\"\n    />\n  ) : (\n    <MDEditor.Markdown\n      remarkPlugins={[remarkGfm]}\n      rehypePlugins={[rehypeSanitize]}\n      source={content}\n      className=\"whitespace-pre-wrap !bg-transparent !text-main\"\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AAJA;;;;;AAMe,SAAS,SAAS,EAC/B,OAAO,EACP,UAAU,EACV,QAAQ,EAKT;IACC,OAAO,2BACL,8OAAC,8KAAA,CAAA,UAAQ;QACP,OAAO;QACP,SAAQ;QACR,QAAO;QACP,aAAa;QACb,gBAAgB;YACd,eAAe;gBAAC;oBAAC,kJAAA,CAAA,UAAc;iBAAC;aAAC;QACnC;QACA,UAAU,CAAC,OAAkB,WAAW,QAAQ;QAChD,WAAU;;;;;6BAGZ,8OAAC,8KAAA,CAAA,UAAQ,CAAC,QAAQ;QAChB,eAAe;YAAC,6IAAA,CAAA,UAAS;SAAC;QAC1B,eAAe;YAAC,kJAAA,CAAA,UAAc;SAAC;QAC/B,QAAQ;QACR,WAAU;;;;;;AAGhB","debugId":null}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/data.utils.ts"],"sourcesContent":["export const deepEqual = (obj1: any, obj2: any): boolean => {\n  if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n    return obj1 === obj2;\n  }\n\n  const keys1 = Object.keys(obj1).sort();\n  const keys2 = Object.keys(obj2).sort();\n\n  if (keys1.length !== keys2.length) return false;\n\n  return keys1.every((key) => deepEqual(obj1[key], obj2[key]));\n};\n\nexport const mapFiles = (files: File[], status: string, message?: string) => {\n  return files.map((file: File, index: number) => ({\n    content: file,\n    id: `${Date.now()}-${file.name}-${index}`,\n    name: file.name,\n    status,\n    message,\n  }));\n};\n\nexport const toBoolean = (value: string | boolean | undefined | null): boolean => {\n  if (typeof value === 'boolean') return value;\n\n  return value ? value?.toLowerCase() === 'true' : false;\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,YAAY,CAAC,MAAW;IACnC,IAAI,OAAO,SAAS,YAAY,OAAO,SAAS,YAAY,SAAS,QAAQ,SAAS,MAAM;QAC1F,OAAO,SAAS;IAClB;IAEA,MAAM,QAAQ,OAAO,IAAI,CAAC,MAAM,IAAI;IACpC,MAAM,QAAQ,OAAO,IAAI,CAAC,MAAM,IAAI;IAEpC,IAAI,MAAM,MAAM,KAAK,MAAM,MAAM,EAAE,OAAO;IAE1C,OAAO,MAAM,KAAK,CAAC,CAAC,MAAQ,UAAU,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;AAC5D;AAEO,MAAM,WAAW,CAAC,OAAe,QAAgB;IACtD,OAAO,MAAM,GAAG,CAAC,CAAC,MAAY,QAAkB,CAAC;YAC/C,SAAS;YACT,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO;YACzC,MAAM,KAAK,IAAI;YACf;YACA;QACF,CAAC;AACH;AAEO,MAAM,YAAY,CAAC;IACxB,IAAI,OAAO,UAAU,WAAW,OAAO;IAEvC,OAAO,QAAQ,OAAO,kBAAkB,SAAS;AACnD","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/messagesAction.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\n\nimport { MessageSendPayload } from '@/lib/models/api.models';\nimport { Message, MessageRole } from '@/lib/models/chat.models';\nimport { getMessage } from '@/lib/utils/chat.utils';\nimport { apiClient } from '../db/apiClient';\nimport { createChatMessage, updateMessage } from '../db/chatClient';\n\nexport async function createChatMessages(userId: string, messages: Message[], chatId?: string): Promise<string> {\n  try {\n    await Promise.all(\n      messages.map(\n        async (message: Message) => await createChatMessage(chatId || '', { ...message, recurring: undefined })\n      )\n    );\n\n    return chatId || '';\n  } catch (error) {\n    console.error(`[messagesActions] Error during updating chat ${chatId} with messages for user ${userId} :`, error);\n\n    return '';\n  }\n}\n\nexport async function sendMessage({\n  userId,\n  assistantId,\n  newMessage,\n  prevMessages,\n  chat_id,\n  chatInfo,\n}: MessageSendPayload): Promise<string> {\n  try {\n    const payload = {\n      assistant_id: assistantId,\n      user_id: userId,\n      chat_id,\n      current_stage: chatInfo.stage,\n      history: [...prevMessages.reverse()],\n      newMessage,\n      app: 'studio',\n    };\n\n    const { response } = await apiClient.sendMessage(payload);\n    const assistantMessage = {\n      ...getMessage(response, MessageRole.assistant, chatInfo),\n      created_at: new Date().toISOString(),\n    };\n\n    const chatId = await createChatMessages(userId, [newMessage, assistantMessage], chat_id);\n\n    revalidatePath(`/chat/${chatId}`);\n\n    return chatId;\n  } catch (error) {\n    console.error(`[messagesActions] Error sending user ${userId} message: `, error);\n    return '';\n  }\n}\n\nexport async function editMessage(id: string, message: Partial<Message>): Promise<Message | null> {\n  try {\n    return await updateMessage(id, message as any);\n  } catch (error: any) {\n    console.error(`[messagesActions] Error updating message ${id} data: `, error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;IA8DsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/EditableMessage.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback, useState } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Message } from '@/lib/models/chat.models';\nimport { toBoolean } from '@/lib/utils/data.utils';\nimport { editMessage } from '@/server/actions/messagesAction';\nimport { Button } from '@/shared/Button';\nimport Markdown from '@/shared/Markdown';\n\nexport default function EditableMessage({ message }: { message: Message }) {\n  const t = useTranslations();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [updatedContent, setUpdatedContent] = useState(message.content);\n\n  const handleSaveMessage = useCallback(\n    async (reset?: boolean) => {\n      const { id, content, originalContent } = message;\n      const payload = reset\n        ? { content: originalContent || content, originalContent: null }\n        : { content: updatedContent, originalContent: originalContent || content };\n\n      const updatedMessage = await editMessage(id, payload);\n      updatedMessage?.content && setUpdatedContent(updatedMessage.content);\n      setIsEditMode(false);\n    },\n    [updatedContent, message]\n  );\n\n  return (\n    <article className={twMerge('group relative mb-5 flex flex-col', isEditMode && 'gap-y-1')}>\n      <section\n        className={twMerge(\n          'flex w-full items-center gap-x-4 self-start p-5 text-main',\n          isEditMode && 'rounded-xl border border-dashed border-storm-gray bg-white-opacity'\n        )}\n      >\n        <span className=\"cbi-cpu shrink-0 text-xl text-main\"></span>\n        <div className=\"flex flex-1 flex-col break-words text-base font-normal outline-none\">\n          <Markdown content={updatedContent} isEditMode={isEditMode} onChange={setUpdatedContent} />\n        </div>\n      </section>\n      {toBoolean(process.env.NEXT_PUBLIC_MESSAGE_EDIT_ENABLED) && (\n        <div className={twMerge('justify-end gap-x-2', isEditMode ? 'flex' : 'hidden group-hover:flex')}>\n          {isEditMode ? (\n            <>\n              <Button\n                variant=\"solid\"\n                color=\"dark\"\n                className={'py-1.5 font-medium disabled:opacity-60'}\n                onClick={() => handleSaveMessage(true)}\n              >\n                <i className=\"cbi-arrow-left\" />\n                {t('General.resetToOriginButton')}\n              </Button>\n              <Button\n                variant=\"outline\"\n                color=\"darkGray\"\n                className={'py-1.5 font-medium'}\n                onClick={() => setIsEditMode(false)}\n              >\n                {t('General.cancelButton')}\n              </Button>\n              <Button\n                variant=\"solid\"\n                color=\"primary\"\n                className={'py-1.5 font-medium'}\n                onClick={() => handleSaveMessage()}\n              >\n                <i className=\"cbi-tick-circle\" />\n                {t('General.saveButton')}\n              </Button>\n            </>\n          ) : (\n            <Button\n              className={\n                'cbi-edit-2 absolute -bottom-1.5 right-5 aspect-square w-7 rounded-full border border-background-border/[18%] bg-graphic/[10%] p-0 !text-sm text-light-gray hover:border-background-border group-hover:text-main'\n              }\n              onClick={() => setIsEditMode(true)}\n            />\n          )}\n        </div>\n      )}\n    </article>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAVA;;;;;;;;;AAYe,SAAS,gBAAgB,EAAE,OAAO,EAAwB;IACvE,MAAM,IAAI,CAAA,GAAA,sMAAA,CAAA,kBAAe,AAAD;IACxB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,OAAO;IAEpE,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAClC,OAAO;QACL,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG;QACzC,MAAM,UAAU,QACZ;YAAE,SAAS,mBAAmB;YAAS,iBAAiB;QAAK,IAC7D;YAAE,SAAS;YAAgB,iBAAiB,mBAAmB;QAAQ;QAE3E,MAAM,iBAAiB,MAAM,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE,IAAI;QAC7C,gBAAgB,WAAW,kBAAkB,eAAe,OAAO;QACnE,cAAc;IAChB,GACA;QAAC;QAAgB;KAAQ;IAG3B,qBACE,8OAAC;QAAQ,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,qCAAqC,cAAc;;0BAC7E,8OAAC;gBACC,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf,6DACA,cAAc;;kCAGhB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,0HAAA,CAAA,UAAQ;4BAAC,SAAS;4BAAgB,YAAY;4BAAY,UAAU;;;;;;;;;;;;;;;;;YAGxE,CAAA,GAAA,oIAAA,CAAA,YAAS,AAAD,6DACP,8OAAC;gBAAI,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,uBAAuB,aAAa,SAAS;0BAClE,2BACC;;sCACE,8OAAC,wHAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,OAAM;4BACN,WAAW;4BACX,SAAS,IAAM,kBAAkB;;8CAEjC,8OAAC;oCAAE,WAAU;;;;;;gCACZ,EAAE;;;;;;;sCAEL,8OAAC,wHAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,OAAM;4BACN,WAAW;4BACX,SAAS,IAAM,cAAc;sCAE5B,EAAE;;;;;;sCAEL,8OAAC,wHAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,OAAM;4BACN,WAAW;4BACX,SAAS,IAAM;;8CAEf,8OAAC;oCAAE,WAAU;;;;;;gCACZ,EAAE;;;;;;;;iDAIP,8OAAC,wHAAA,CAAA,SAAM;oBACL,WACE;oBAEF,SAAS,IAAM,cAAc;;;;;;;;;;;;;;;;;AAO3C","debugId":null}},
    {"offset": {"line": 953, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/StageAnalysisRefresher.tsx"],"sourcesContent":["'use client';\n\nimport { useRef } from 'react';\nimport { useParams } from 'next/navigation';\n\nimport { useRootContext } from '@/contexts/RootContextProvider';\nimport { useSSE } from '@/hooks/useSSE';\nimport { getChat } from '@/server/actions/chatActions';\n\nexport default function StageAnalysisRefresher() {\n  const params = useParams();\n  const { setSelectedChat } = useRootContext();\n  const chatId = params.id as string;\n  const isRefreshing = useRef(false);\n\n  const refreshChatData = async () => {\n    if (isRefreshing.current) return;\n\n    try {\n      isRefreshing.current = true;\n      const updatedChat = await getChat(chatId);\n      if (updatedChat) {\n        setSelectedChat(updatedChat);\n      }\n    } catch (error) {\n      console.error('Error refreshing chat data:', error);\n    } finally {\n      isRefreshing.current = false;\n    }\n  };\n\n  useSSE({\n    events: {\n      'chat-update': (data) => {\n        if (data?.chatId === chatId) {\n          refreshChatData();\n        }\n      },\n    },\n  });\n\n  return null;\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AAEA;AACA;AACA;AAPA;;;;;;AASe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,iBAAc,AAAD;IACzC,MAAM,SAAS,OAAO,EAAE;IACxB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAE5B,MAAM,kBAAkB;QACtB,IAAI,aAAa,OAAO,EAAE;QAE1B,IAAI;YACF,aAAa,OAAO,GAAG;YACvB,MAAM,cAAc,MAAM,CAAA,GAAA,gKAAA,CAAA,UAAO,AAAD,EAAE;YAClC,IAAI,aAAa;gBACf,gBAAgB;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C,SAAU;YACR,aAAa,OAAO,GAAG;QACzB;IACF;IAEA,CAAA,GAAA,sHAAA,CAAA,SAAM,AAAD,EAAE;QACL,QAAQ;YACN,eAAe,CAAC;gBACd,IAAI,MAAM,WAAW,QAAQ;oBAC3B;gBACF;YACF;QACF;IACF;IAEA,OAAO;AACT","debugId":null}}]
}