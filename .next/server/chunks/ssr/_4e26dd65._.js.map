{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/db/chatClient.ts"],"sourcesContent":["import { cache } from 'react';\nimport { Chat, Message } from '@prisma/client';\n\nimport prisma from '@/lib/prisma';\nimport { Chat as ChatModel } from '../../lib/models/chat.models';\n\nexport const getUserChat = cache(\n  async (id: string, userId: string): Promise<(Chat & { Messages: Message[] }) | null> => {\n    try {\n      return prisma.chat.findFirst({\n        where: { id, userId },\n        include: {\n          Messages: {\n            orderBy: {\n              created_at: 'desc',\n            },\n          },\n        },\n      });\n    } catch (error) {\n      console.error(`[chatClient] Error fetching chat ${id}:`, error);\n\n      return null;\n    }\n  }\n);\n\nexport const getUserChats = async (userId: string): Promise<ChatModel[] | null> => {\n  try {\n    const chats = await prisma.chat.findMany({\n      where: { userId },\n      orderBy: {\n        created_at: 'desc',\n      },\n    });\n\n    return chats.map((chat: Chat) => ({\n      ...chat,\n      stageAnalysis: typeof chat.stageAnalysis === 'string' ? JSON.parse(chat.stageAnalysis) : chat.stageAnalysis,\n    }));\n  } catch (error) {\n    console.error(`[chatClient] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n};\n\nexport const createChat = async (userId: string, chat: any): Promise<Chat> => {\n  try {\n    const createdChat = await prisma.chat.create({ data: { ...chat, userId }, include: { Messages: true } });\n\n    return createdChat;\n  } catch (error) {\n    console.error(`[chatClient] Error creating chat for user ${userId}:`, error);\n\n    throw new Error('[chatClient] Could not create new chat');\n  }\n};\n\nexport const updateUserChat = async (id: string, data: any): Promise<Chat> => {\n  try {\n    const result = await prisma.chat.update({ where: { id }, data: { ...data }, include: { Messages: true } });\n\n    return result;\n  } catch (error) {\n    console.log(`[chatActions debugger] updating chat ${id} error`, JSON.stringify(error));\n    console.error(`[chatClient] Error updating chat ${id}:`, error);\n\n    throw new Error('[chatClient] Could not upadte chat');\n  }\n};\n\nexport const removeChat = async (userId: string, id: string): Promise<Chat> => {\n  try {\n    return prisma.chat.delete({ where: { userId, id } });\n  } catch (error) {\n    console.error(`[chatClient] Error removing chat ${id}:`, error);\n\n    throw new Error('[chatClient] Could not remove chat');\n  }\n};\n\nexport const createChatMessage = async (chatId: string, message: any): Promise<Message> => {\n  try {\n    return await prisma.message.create({ data: { ...message, chatId, created_at: new Date(message.created_at) } });\n  } catch (error) {\n    console.error(`[chatClient] Error during creating message for chat ${chatId}:`, error);\n\n    throw new Error('[chatClient] Could not create chat message');\n  }\n};\n\nexport const updateMessage = async (id: string, data: Partial<Message>): Promise<Message> => {\n  try {\n    return await prisma.message.update({\n      where: { id },\n      data,\n    });\n  } catch (error) {\n    console.error(`[chatClient] Error during updating message  ${id}:`, error);\n\n    throw new Error('[chatClient] Could not upadte message');\n  }\n};\n\nexport const updateLastMessageInChat = async (chatId: string, data: Partial<Message>): Promise<Message | null> => {\n  try {\n    const lastMessage = await prisma.message.findFirst({\n      where: { chatId },\n      orderBy: { created_at: 'desc' },\n    });\n\n    if (!lastMessage) return null;\n\n    return await updateMessage(lastMessage.id, data);\n  } catch (error) {\n    console.error(`[chatClient] Error updating last message in chat ${chatId}:`, error);\n\n    throw new Error('[chatClient] Could not update last message');\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Sidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/shared/Sidebar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/Sidebar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Sidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/shared/Sidebar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/Sidebar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/skeletons/ListSkeleton.tsx"],"sourcesContent":["import { twMerge } from 'tailwind-merge';\n\nexport function ListSkeleton({\n  className,\n  liClassName,\n  length,\n  heights,\n}: {\n  className?: string;\n  liClassName?: string;\n  length?: number;\n  heights?: string[];\n}) {\n  const mockChatsHeight = heights || ['h-28', 'h-24', 'h-32', 'h-28', 'h-24', 'h-24', 'h-36', 'h-38', 'h-24', 'h-16'];\n\n  return (\n    <ul role=\"list\" className={twMerge('flex flex-grow flex-col gap-y-2 overflow-y-auto', className)}>\n      {mockChatsHeight.slice(0, length ?? mockChatsHeight.length).map((height: string, key: number) => (\n        <li key={key} className=\"flex cursor-pointer items-center justify-between text-light-gray\">\n          <span\n            className={twMerge(\n              `${height} bg-white/[16%]) w-full animate-pulse rounded-lg border-transparent`,\n              liClassName\n            )}\n          ></span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS,aAAa,EAC3B,SAAS,EACT,WAAW,EACX,MAAM,EACN,OAAO,EAMR;IACC,MAAM,kBAAkB,WAAW;QAAC;QAAQ;QAAQ;QAAQ;QAAQ;QAAQ;QAAQ;QAAQ;QAAQ;QAAQ;KAAO;IAEnH,qBACE,8OAAC;QAAG,MAAK;QAAO,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,mDAAmD;kBACnF,gBAAgB,KAAK,CAAC,GAAG,UAAU,gBAAgB,MAAM,EAAE,GAAG,CAAC,CAAC,QAAgB,oBAC/E,8OAAC;gBAAa,WAAU;0BACtB,cAAA,8OAAC;oBACC,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf,GAAG,OAAO,mEAAmE,CAAC,EAC9E;;;;;;eAJG;;;;;;;;;;AAWjB","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/Chat.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/Chat.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/Chat.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/Chat.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/Chat.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/Chat.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/date.utils.ts"],"sourcesContent":["export const getFomatedDate = (\n  rawDate: string | Date,\n  locale: string = 'en-US',\n  options?: Intl.DateTimeFormatOptions\n): string => {\n  const date = new Date(rawDate);\n\n  return date.toLocaleDateString(locale, options);\n};\n\nexport const getDateWeekDay = (rawDate: string | Date, locale: string = 'en-US'): string => {\n  return getFomatedDate(rawDate, locale, { weekday: 'long' });\n};\n\nexport const getDateDay = (rawDate: string | Date, locale: string = 'en-US'): string => {\n  return getFomatedDate(rawDate, locale, { month: 'long', day: 'numeric' });\n};\n\nexport const getTime = (rawDate: string | Date, locale: string = 'en-US'): string => {\n  const date = new Date(rawDate);\n\n  return date.toLocaleTimeString(locale, { hour: 'numeric', minute: 'numeric', hour12: true });\n};\n\nexport function getPassedTime(startTime?: number, range: number = 1000): number {\n  return startTime ? Math.floor(Date.now() - startTime) / range : 0;\n}\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,iBAAiB,CAC5B,SACA,SAAiB,OAAO,EACxB;IAEA,MAAM,OAAO,IAAI,KAAK;IAEtB,OAAO,KAAK,kBAAkB,CAAC,QAAQ;AACzC;AAEO,MAAM,iBAAiB,CAAC,SAAwB,SAAiB,OAAO;IAC7E,OAAO,eAAe,SAAS,QAAQ;QAAE,SAAS;IAAO;AAC3D;AAEO,MAAM,aAAa,CAAC,SAAwB,SAAiB,OAAO;IACzE,OAAO,eAAe,SAAS,QAAQ;QAAE,OAAO;QAAQ,KAAK;IAAU;AACzE;AAEO,MAAM,UAAU,CAAC,SAAwB,SAAiB,OAAO;IACtE,MAAM,OAAO,IAAI,KAAK;IAEtB,OAAO,KAAK,kBAAkB,CAAC,QAAQ;QAAE,MAAM;QAAW,QAAQ;QAAW,QAAQ;IAAK;AAC5F;AAEO,SAAS,cAAc,SAAkB,EAAE,QAAgB,IAAI;IACpE,OAAO,YAAY,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,aAAa,QAAQ;AAClE","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/models/chat.models.ts"],"sourcesContent":["import { AnalyzeStageData } from './api.models';\nimport { Style } from './instruction.models';\n\nexport interface Chat {\n  id: string;\n  name: string;\n  userId: string;\n  created_at: Date | string;\n  currentStage?: string | null;\n  ChatLifeAreas?: JSON;\n  Summary?: JSON;\n  Messages?: Message[];\n  stageAnalysis?: AnalyzeStageData;\n}\n\nexport interface Message {\n  id: string;\n  content: string;\n  originalContent?: string | null;\n  star?: boolean | null;\n  role: MessageRole | string;\n  chatId?: string;\n  created_at?: Date | string;\n  type?: string | null;\n  stage?: string | null;\n  status?: MessageStatus;\n  isLoading?: boolean;\n  error?: boolean;\n  recurring?: boolean;\n}\n\nexport enum MessageStatus {\n  generating = 'generating',\n  complete = 'complete',\n}\n\nexport enum MessageRole {\n  user = 'user',\n  assistant = 'assistant',\n}\n\nexport enum ChatMode {\n  new = 'new',\n  recurring = 'recurring',\n}\n\nexport interface ChatInfo {\n  stage: string;\n  style: Style | null;\n  mode: ChatMode;\n}\n"],"names":[],"mappings":";;;;;AA+BO,IAAA,AAAK,uCAAA;;;WAAA;;AAKL,IAAA,AAAK,qCAAA;;;WAAA;;AAKL,IAAA,AAAK,kCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/chat.utils.ts"],"sourcesContent":["import { AnalyzeStageData } from '../models/api.models';\nimport { ChatInfo, ChatMode, Message, MessageRole } from '../models/chat.models';\nimport { SessionDetailsTab } from '../models/common.models';\nimport { Locale } from '../models/locale.models';\n\n/**\n * Generates a formatted chat session name with the current day and time\n * Format: \"Session - Day [HH:MM]\" (e.g., \"Session - Mon [14:30]\")\n * @returns {string} Formatted session name\n */\nexport const generateSessionName = (locale: Locale | string = 'en-US'): string => {\n  const now = new Date();\n\n  // Get day abbreviation (Mon, Tue, etc.)\n  const day = now.toLocaleDateString(locale, { weekday: 'short' });\n\n  // Get hours and minutes with padding\n  const hours = now.getHours().toString().padStart(2, '0');\n  const minutes = now.getMinutes().toString().padStart(2, '0');\n\n  return `Session - ${day} [${hours}:${minutes}]`;\n};\n\n/**\n * Generates a UUID v4 string with fallback for environments without crypto.randomUUID\n * @returns {string} UUID v4 string\n */\nexport const generateUUID = (): string => {\n  if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n\n  // Fallback implementation\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const getMessage = (content: string, role: MessageRole, { stage, mode }: ChatInfo): Message => ({\n  id: generateUUID(),\n  content,\n  stage,\n  role,\n  created_at: new Date().toISOString(),\n  recurring: mode === ChatMode.recurring,\n});\n\nexport const mapSessionStageAnalysis = (data?: AnalyzeStageData): SessionDetailsTab[] | undefined => {\n  if (!data?.reasoning || !data?.criteria_missing) {\n    return [{ name: 'Details', descriptions: [] }];\n  }\n\n  return [\n    {\n      name: 'Details',\n      descriptions: [\n        { type: 'text', value: data.reasoning },\n        {\n          type: 'list',\n          value: data.criteria_missing.map((item) => `▪︎  ${item}`),\n          title: data.criteria_missing.length ? 'Missing Criterias' : '',\n        },\n      ],\n    },\n  ];\n};\n"],"names":[],"mappings":";;;;;;AACA;;AASO,MAAM,sBAAsB,CAAC,SAA0B,OAAO;IACnE,MAAM,MAAM,IAAI;IAEhB,wCAAwC;IACxC,MAAM,MAAM,IAAI,kBAAkB,CAAC,QAAQ;QAAE,SAAS;IAAQ;IAE9D,qCAAqC;IACrC,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IAExD,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,CAAC;AACjD;AAMO,MAAM,eAAe;IAC1B,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,UAAU,KAAK,YAAY;QAC5E,OAAO,OAAO,UAAU;IAC1B;IAEA,0BAA0B;IAC1B,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAC;QAC9D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,MAAM,IAAI,MAAM,MAAM,IAAI,AAAC,IAAI,MAAO;QACtC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF;AAEO,MAAM,aAAa,CAAC,SAAiB,MAAmB,EAAE,KAAK,EAAE,IAAI,EAAY,GAAc,CAAC;QACrG,IAAI;QACJ;QACA;QACA;QACA,YAAY,IAAI,OAAO,WAAW;QAClC,WAAW,SAAS,sIAAA,CAAA,WAAQ,CAAC,SAAS;IACxC,CAAC;AAEM,MAAM,0BAA0B,CAAC;IACtC,IAAI,CAAC,MAAM,aAAa,CAAC,MAAM,kBAAkB;QAC/C,OAAO;YAAC;gBAAE,MAAM;gBAAW,cAAc,EAAE;YAAC;SAAE;IAChD;IAEA,OAAO;QACL;YACE,MAAM;YACN,cAAc;gBACZ;oBAAE,MAAM;oBAAQ,OAAO,KAAK,SAAS;gBAAC;gBACtC;oBACE,MAAM;oBACN,OAAO,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAS,CAAC,IAAI,EAAE,MAAM;oBACxD,OAAO,KAAK,gBAAgB,CAAC,MAAM,GAAG,sBAAsB;gBAC9D;aACD;QACH;KACD;AACH","debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/db/apiClient.ts"],"sourcesContent":["import { CoachingPayload, CoachingResponse } from '@/lib/models/api.models';\n\nexport enum ApiPath {\n  coaching = '/coaching',\n}\n\nexport enum ResponseContentType {\n  text = 'text/plain',\n  json = 'application/json',\n}\n\nexport class ApiClient {\n  private readonly config: any;\n\n  constructor() {\n    this.config = {\n      baseUrl: process.env.AI_API_BASE_URL || '',\n    };\n  }\n\n  private async makePostRequest<T>(\n    endpoint: string,\n    data: T,\n    tag?: string,\n    method: 'POST' | 'PUT' = 'POST'\n  ): Promise<any> {\n    try {\n      const response = await fetch(`${this.config.baseUrl}${endpoint}`, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n        next: { tags: [tag || endpoint] },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n\n        console.error(error);\n        throw new Error(\n          `[apiClient] ${method} Request failed with status ${response.status}, error: ${JSON.stringify(error)}`\n        );\n      }\n\n      return response.headers.get('content-type') === ResponseContentType.json ? response.json() : response.text();\n    } catch (error) {\n      console.error(`[aiApiClient] ${endpoint} error:`, error);\n\n      throw new Error(`[aiApi] Failed to make ${method} request to ${endpoint}`);\n    }\n  }\n\n  public async sendMessage(payload: CoachingPayload): Promise<CoachingResponse> {\n    return this.makePostRequest(\n      ApiPath.coaching,\n      {\n        ...payload,\n        messages: payload.history.map(({ created_at, ...message }) => message),\n        newMessage: { ...payload.newMessage, created_at: undefined },\n      },\n      'chat_coaching'\n    );\n  }\n}\n\nexport const apiClient = new ApiClient();\n"],"names":[],"mappings":";;;;;;AAEO,IAAA,AAAK,iCAAA;;WAAA;;AAIL,IAAA,AAAK,6CAAA;;;WAAA;;AAKL,MAAM;IACM,OAAY;IAE7B,aAAc;QACZ,IAAI,CAAC,MAAM,GAAG;YACZ,SAAS,QAAQ,GAAG,CAAC,eAAe,IAAI;QAC1C;IACF;IAEA,MAAc,gBACZ,QAAgB,EAChB,IAAO,EACP,GAAY,EACZ,SAAyB,MAAM,EACjB;QACd,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE;gBAChE;gBACA,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;gBACrB,MAAM;oBAAE,MAAM;wBAAC,OAAO;qBAAS;gBAAC;YAClC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBAEjC,QAAQ,KAAK,CAAC;gBACd,MAAM,IAAI,MACR,CAAC,YAAY,EAAE,OAAO,4BAA4B,EAAE,SAAS,MAAM,CAAC,SAAS,EAAE,KAAK,SAAS,CAAC,QAAQ;YAE1G;YAEA,OAAO,SAAS,OAAO,CAAC,GAAG,CAAC,yCAA+C,SAAS,IAAI,KAAK,SAAS,IAAI;QAC5G,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,cAAc,EAAE,SAAS,OAAO,CAAC,EAAE;YAElD,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,OAAO,YAAY,EAAE,UAAU;QAC3E;IACF;IAEA,MAAa,YAAY,OAAwB,EAA6B;QAC5E,OAAO,IAAI,CAAC,eAAe,cAEzB;YACE,GAAG,OAAO;YACV,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,SAAS,GAAK;YAC9D,YAAY;gBAAE,GAAG,QAAQ,UAAU;gBAAE,YAAY;YAAU;QAC7D,GACA;IAEJ;AACF;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/messagesAction.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\n\nimport { MessageSendPayload } from '@/lib/models/api.models';\nimport { Message, MessageRole } from '@/lib/models/chat.models';\nimport { getMessage } from '@/lib/utils/chat.utils';\nimport { apiClient } from '../db/apiClient';\nimport { createChatMessage, updateMessage } from '../db/chatClient';\n\nexport async function createChatMessages(userId: string, messages: Message[], chatId?: string): Promise<string> {\n  try {\n    await Promise.all(\n      messages.map(\n        async (message: Message) => await createChatMessage(chatId || '', { ...message, recurring: undefined })\n      )\n    );\n\n    return chatId || '';\n  } catch (error) {\n    console.error(`[messagesActions] Error during updating chat ${chatId} with messages for user ${userId} :`, error);\n\n    return '';\n  }\n}\n\nexport async function sendMessage({\n  userId,\n  assistantId,\n  newMessage,\n  prevMessages,\n  chat_id,\n  chatInfo,\n}: MessageSendPayload): Promise<string> {\n  try {\n    const payload = {\n      assistant_id: assistantId,\n      user_id: userId,\n      chat_id,\n      current_stage: chatInfo.stage,\n      history: [...prevMessages.reverse()],\n      newMessage,\n      app: 'studio',\n    };\n\n    const { response } = await apiClient.sendMessage(payload);\n    const assistantMessage = {\n      ...getMessage(response, MessageRole.assistant, chatInfo),\n      created_at: new Date().toISOString(),\n    };\n\n    const chatId = await createChatMessages(userId, [newMessage, assistantMessage], chat_id);\n\n    revalidatePath(`/chat/${chatId}`);\n\n    return chatId;\n  } catch (error) {\n    console.error(`[messagesActions] Error sending user ${userId} message: `, error);\n    return '';\n  }\n}\n\nexport async function editMessage(id: string, message: Partial<Message>): Promise<Message | null> {\n  try {\n    return await updateMessage(id, message as any);\n  } catch (error: any) {\n    console.error(`[messagesActions] Error updating message ${id} data: `, error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;;;AAEO,eAAe,mBAAmB,MAAc,EAAE,QAAmB,EAAE,MAAe;IAC3F,IAAI;QACF,MAAM,QAAQ,GAAG,CACf,SAAS,GAAG,CACV,OAAO,UAAqB,MAAM,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD,EAAE,UAAU,IAAI;gBAAE,GAAG,OAAO;gBAAE,WAAW;YAAU;QAIzG,OAAO,UAAU;IACnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,6CAA6C,EAAE,OAAO,wBAAwB,EAAE,OAAO,EAAE,CAAC,EAAE;QAE3G,OAAO;IACT;AACF;AAEO,eAAe,YAAY,EAChC,MAAM,EACN,WAAW,EACX,UAAU,EACV,YAAY,EACZ,OAAO,EACP,QAAQ,EACW;IACnB,IAAI;QACF,MAAM,UAAU;YACd,cAAc;YACd,SAAS;YACT;YACA,eAAe,SAAS,KAAK;YAC7B,SAAS;mBAAI,aAAa,OAAO;aAAG;YACpC;YACA,KAAK;QACP;QAEA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,gIAAA,CAAA,YAAS,CAAC,WAAW,CAAC;QACjD,MAAM,mBAAmB;YACvB,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD,EAAE,UAAU,sIAAA,CAAA,cAAW,CAAC,SAAS,EAAE,SAAS;YACxD,YAAY,IAAI,OAAO,WAAW;QACpC;QAEA,MAAM,SAAS,MAAM,mBAAmB,QAAQ;YAAC;YAAY;SAAiB,EAAE;QAEhF,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,MAAM,EAAE,QAAQ;QAEhC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,qCAAqC,EAAE,OAAO,UAAU,CAAC,EAAE;QAC1E,OAAO;IACT;AACF;AAEO,eAAe,YAAY,EAAU,EAAE,OAAyB;IACrE,IAAI;QACF,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD,EAAE,IAAI;IACjC,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,yCAAyC,EAAE,GAAG,OAAO,CAAC,EAAE;QACvE,OAAO;IACT;AACF;;;IA3DsB;IAgBA;IAoCA;;AApDA,+OAAA;AAgBA,+OAAA;AAoCA,+OAAA","debugId":null}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/chatActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\n\nimport { AnalyzeStageData } from '@/lib/models/api.models';\nimport { Chat, ChatInfo, Message } from '@/lib/models/chat.models';\nimport { generateSessionName } from '@/lib/utils/chat.utils';\nimport {\n  createChat,\n  getUserChat,\n  getUserChats,\n  removeChat,\n  updateLastMessageInChat,\n  updateUserChat,\n} from '../db/chatClient';\nimport { getFirstStage } from './instructionsActions';\nimport { sendMessage } from './messagesAction';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function handleStageAnalysis(chatId: string, stageAnalysis: AnalyzeStageData | null): Promise<void> {\n  try {\n    if (!stageAnalysis) return;\n\n    const { transition_required, current_stage, next_stage } = stageAnalysis;\n\n    const [chat] = await Promise.all([\n      updateUserChat(chatId, {\n        stageAnalysis,\n        currentStage: transition_required ? next_stage : current_stage,\n      }),\n      updateLastMessageInChat(chatId, { stageAnalysis: JSON.stringify(stageAnalysis) }),\n    ]);\n\n    const eventEmitter = (await import('@/lib/eventEmitter')).default;\n    eventEmitter.emit(`message:${chat.userId}`, {\n      user_id: chat.userId,\n      event: 'chat-update',\n      data: { chatId: chat.id, type: 'stage-analysis' },\n    });\n  } catch (error) {\n    console.error(`[chatActions] error during saving chat ${chatId} stage analysis`, error);\n  }\n}\n\nexport async function getChats(): Promise<any> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    return userId ? await getUserChats(userId) : [];\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return [];\n  }\n}\n\nexport async function getChat(id: string): Promise<Chat | null> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return null;\n\n    const chat = await getUserChat(id, userId);\n\n    return chat as any;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n}\n\nexport async function deleteChat(chatId: string) {\n  let user_id;\n  try {\n    user_id = (await getSessionUser()) || '';\n    await removeChat(user_id, chatId);\n\n    revalidateTag(`chats`);\n  } catch (error) {\n    console.error(`[chatsActions] Error during deleting userr ${user_id} chat ${chatId}: `, error);\n  }\n}\n\nexport async function createNewChat(userId: string, assistantId: string): Promise<string> {\n  try {\n    const firstStage = await getFirstStage();\n    const newChat = await createChat(userId, {\n      currentStage: firstStage?.name,\n      name: generateSessionName(),\n      assistantId,\n    });\n\n    return newChat.id;\n  } catch (error) {\n    console.error(`[chatsActions] Error creating new chat for user ${userId}:`, error);\n\n    return '';\n  }\n}\n\nexport async function updateChat(\n  currentChatId: string | undefined,\n  messages: Message[],\n  chatInfo: ChatInfo\n): Promise<string> {\n  let user_id;\n  try {\n    const { userId, assistantId } = (await verifySession()) || {};\n    user_id = userId;\n\n    if (!userId || !assistantId) return '';\n\n    const [newMessage, ...prevMessages] = messages;\n    const chat_id = currentChatId || (await createNewChat(userId, assistantId));\n    await sendMessage({ userId, assistantId, newMessage, prevMessages, chat_id, chatInfo });\n\n    !currentChatId && revalidateTag(`chats`);\n    // TODO: instead revalidate try to return assistant message directly\n    return chat_id;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${user_id} chats:`, error);\n\n    return '';\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/ModalButtons.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DeleteWithConfirmationButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call DeleteWithConfirmationButton() from the server but DeleteWithConfirmationButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/ModalButtons.tsx <module evaluation>\",\n    \"DeleteWithConfirmationButton\",\n);\nexport const EditModalButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditModalButton() from the server but EditModalButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/ModalButtons.tsx <module evaluation>\",\n    \"EditModalButton\",\n);\nexport const ModalButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalButton() from the server but ModalButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/ModalButtons.tsx <module evaluation>\",\n    \"ModalButton\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,+BAA+B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9D;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,6DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA","debugId":null}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/ModalButtons.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DeleteWithConfirmationButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call DeleteWithConfirmationButton() from the server but DeleteWithConfirmationButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/ModalButtons.tsx\",\n    \"DeleteWithConfirmationButton\",\n);\nexport const EditModalButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditModalButton() from the server but EditModalButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/ModalButtons.tsx\",\n    \"EditModalButton\",\n);\nexport const ModalButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalButton() from the server but ModalButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/ModalButtons.tsx\",\n    \"ModalButton\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,+BAA+B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9D;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,yCACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA","debugId":null}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ChatList.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { getTranslations } from 'next-intl/server';\n\nimport { Chat } from '@/lib/models/chat.models';\nimport { getDateDay, getDateWeekDay, getTime } from '@/lib/utils/date.utils';\nimport { deleteChat } from '@/server/actions/chatActions';\nimport { ExportChatButton } from '@/shared/FunctionalButtons';\nimport { DeleteWithConfirmationButton } from '@/shared/ModalButtons';\n\nconst modalConfig = {\n  buttonTitleKey: 'Chat.deleteModal.submitButton',\n  buttonIcon: 'cbi-trash',\n  titleIcon: 'cbi-send',\n  titleKey: 'Chat.deleteModal.title',\n  variant: 'red',\n};\n\nexport default async function ChatList({ chats }: { chats: Promise<Chat[] | null> }) {\n  const [t, allChats] = await Promise.all([getTranslations(), chats]);\n\n  if (!allChats) {\n    return <div>No chats</div>;\n  }\n\n  return (\n    <ul className=\"flex flex-grow flex-col gap-y-1 overflow-y-auto overflow-x-hidden\">\n      {allChats.map((chat: Chat) => (\n        <li\n          key={chat.id}\n          className=\"flex w-full flex-nowrap items-center gap-x-3 rounded-xl px-4 py-2.5 hover:bg-white-opacity\"\n        >\n          <Link href={`/chat/${chat.id}`} className=\"flex flex-grow items-center gap-x-3\">\n            <div className=\"flex flex-grow flex-col\">\n              <span className=\"text-sm text-light-gray\">{getDateWeekDay(chat.created_at)}</span>\n              <span className=\"text-base text-main\">{getDateDay(chat.created_at)}</span>\n            </div>\n            <div className=\"text-base font-medium text-main\">{getTime(chat.created_at)}</div>\n          </Link>\n          <ExportChatButton chat={chat} />\n          <DeleteWithConfirmationButton\n            iconClassName=\"cbi-trash !text-xl\"\n            className=\"p-0 text-xl text-storm-gray hover:text-main\"\n            config={{\n              ...modalConfig,\n              confirm: async () => {\n                'use server';\n                await deleteChat(chat.id);\n              },\n            }}\n          >\n            <div className=\"flex flex-col gap-y-5 text-main\">\n              <p>{t('Chat.deleteModal.content', { name: chat.name })}</p>\n            </div>\n          </DeleteWithConfirmationButton>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEA,MAAM,cAAc;IAClB,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,UAAU;IACV,SAAS;AACX;MA6BuB,uCAAT;;IAEE,MAAM,CAAA,GAAA,uIAAA,CAAA,aAAU,AAAD;AACjB;AA9BC,eAAe,SAAS,EAAE,KAAK,EAAqC;IACjF,MAAM,CAAC,GAAG,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;QAAC,CAAA,GAAA,wPAAA,CAAA,kBAAe,AAAD;QAAK;KAAM;IAElE,IAAI,CAAC,UAAU;QACb,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAG,WAAU;kBACX,SAAS,GAAG,CAAC,CAAC,qBACb,8OAAC;gBAEC,WAAU;;kCAEV,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;wBAAE,WAAU;;0CACxC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAA2B,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,UAAU;;;;;;kDACzE,8OAAC;wCAAK,WAAU;kDAAuB,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD,EAAE,KAAK,UAAU;;;;;;;;;;;;0CAEnE,8OAAC;gCAAI,WAAU;0CAAmC,CAAA,GAAA,oIAAA,CAAA,UAAO,AAAD,EAAE,KAAK,UAAU;;;;;;;;;;;;kCAE3E,8OAAC,mIAAA,CAAA,mBAAgB;wBAAC,MAAM;;;;;;kCACxB,8OAAC,8HAAA,CAAA,+BAA4B;wBAC3B,eAAc;wBACd,WAAU;wBACV,QAAQ;4BACN,GAAG,WAAW;4BACd,OAAO,EAAE,+OAAA;wBAIX;kCAEA,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;0CAAG,EAAE,4BAA4B;oCAAE,MAAM,KAAK,IAAI;gCAAC;;;;;;;;;;;;;;;;;eAvBnD,KAAK,EAAE;;;;;;;;;;AA8BtB","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ChatModeSwitcher.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/ChatModeSwitcher.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/ChatModeSwitcher.tsx <module evaluation>\",\n    \"default\",\n);\nexport const modeOptions = registerClientReference(\n    function() { throw new Error(\"Attempted to call modeOptions() from the server but modeOptions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/ChatModeSwitcher.tsx <module evaluation>\",\n    \"modeOptions\",\n);\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwT,GACrV,sFACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sFACA","debugId":null}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ChatModeSwitcher.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/ChatModeSwitcher.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/ChatModeSwitcher.tsx\",\n    \"default\",\n);\nexport const modeOptions = registerClientReference(\n    function() { throw new Error(\"Attempted to call modeOptions() from the server but modeOptions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/ChatModeSwitcher.tsx\",\n    \"modeOptions\",\n);\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,kEACA","debugId":null}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ControlPanel.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/ControlPanel.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/ControlPanel.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoT,GACjV,kFACA","debugId":null}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/ControlPanel.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/ControlPanel.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/ControlPanel.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Markdown.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/shared/Markdown.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/Markdown.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/shared/Markdown.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/shared/Markdown.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/shared/Markdown.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuQ,GACpS,qCACA","debugId":null}},
    {"offset": {"line": 1035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1045, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/EditableMessage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/EditableMessage.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/EditableMessage.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuT,GACpV,qFACA","debugId":null}},
    {"offset": {"line": 1059, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/EditableMessage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/EditableMessage.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/EditableMessage.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/Messages.tsx"],"sourcesContent":["import { memo } from 'react';\nimport Link from 'next/link';\nimport { useTranslations } from 'next-intl';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Message } from '@/lib/models/chat.models';\nimport Markdown from '@/shared/Markdown';\nimport EditableMessage from './EditableMessage';\n\nexport const CreateAssistantMessage = memo(function MessageItem() {\n  const t = useTranslations();\n  return (\n    <div className=\"flex items-center gap-x-4\">\n      <span className=\"cbi-cpu h-full shrink-0 self-start text-xl text-main\"></span>\n      <div className=\"flex w-full flex-col items-start gap-y-2 self-start p-5 text-main\">\n        <p className=\"text-base text-main\">{t('General.createAssistantMessage.title')}</p>\n        <p className=\"text-base text-main\">{t('General.createAssistantMessage.subTitle')}</p>\n        <Link\n          href={'/create-agent'}\n          className=\"mt-3 py-2 text-base font-bold text-dark-aquamarine underline underline-offset-4\"\n        >\n          {t('General.createAssistantMessage.modalLink')}\n        </Link>\n      </div>\n    </div>\n  );\n});\n\nexport const EditableAssistantMessage = memo(EditableMessage);\n\nexport const MessageItem = memo(function MessageItem({ message }: { message: Message }) {\n  const t = useTranslations();\n\n  return (\n    <>\n      {message.role === 'user' && message.isLoading && (\n        <p className=\"flex w-full items-center gap-x-2 self-start p-5 text-dark-aquamarine\">\n          <i className=\"cbi-cpu-empty animate-spin-and-pulse !text-3xl\" />\n          <span className=\"before:animate-text-sequence before:content-['']\"></span>\n        </p>\n      )}\n      {message.role === 'user' && (\n        <article\n          className={twMerge(\n            'relative flex w-4/5 items-center gap-x-5 self-end rounded-2xl bg-dark-aquamarine/[11%] p-5 text-main'\n          )}\n        >\n          <span className=\"cbi-send shrink-0 self-start text-xl\"></span>\n          <div className=\"flex flex-1 flex-col break-words text-base font-normal\">\n            <Markdown content={message.content} />\n            {message.error && (\n              <p className=\"absolute bottom-2 right-5 self-end text-sm text-salmon\">{t('Common.messageErrorText')}</p>\n            )}\n          </div>\n        </article>\n      )}\n      {message.role === 'assistant' && <EditableAssistantMessage message={message} />}\n      {message.role === 'noAssistant' && <CreateAssistantMessage />}\n    </>\n  );\n});\n\nexport default function Messages({ className, messages = [] }: { className?: string; messages?: Message[] }) {\n  return (\n    <div\n      className={twMerge(\n        'flex w-full flex-grow flex-col-reverse gap-y-1 self-end overflow-y-auto overflow-x-hidden p-2 ps-0 [&>article:first-child>div]:flex',\n        className\n      )}\n    >\n      {messages.map((message: Message, i: number) => (\n        <MessageItem key={message.id + i} message={message} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;AAEO,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS;IAClD,MAAM,IAAI,CAAA,GAAA,8OAAA,CAAA,kBAAe,AAAD;IACxB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,WAAU;;;;;;0BAChB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAuB,EAAE;;;;;;kCACtC,8OAAC;wBAAE,WAAU;kCAAuB,EAAE;;;;;;kCACtC,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAM;wBACN,WAAU;kCAET,EAAE;;;;;;;;;;;;;;;;;;AAKb;AAEO,MAAM,yCAA2B,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,iKAAA,CAAA,UAAe;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS,YAAY,EAAE,OAAO,EAAwB;IACpF,MAAM,IAAI,CAAA,GAAA,8OAAA,CAAA,kBAAe,AAAD;IAExB,qBACE;;YACG,QAAQ,IAAI,KAAK,UAAU,QAAQ,SAAS,kBAC3C,8OAAC;gBAAE,WAAU;;kCACX,8OAAC;wBAAE,WAAU;;;;;;kCACb,8OAAC;wBAAK,WAAU;;;;;;;;;;;;YAGnB,QAAQ,IAAI,KAAK,wBAChB,8OAAC;gBACC,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf;;kCAGF,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0HAAA,CAAA,UAAQ;gCAAC,SAAS,QAAQ,OAAO;;;;;;4BACjC,QAAQ,KAAK,kBACZ,8OAAC;gCAAE,WAAU;0CAA0D,EAAE;;;;;;;;;;;;;;;;;;YAKhF,QAAQ,IAAI,KAAK,6BAAe,8OAAC;gBAAyB,SAAS;;;;;;YACnE,QAAQ,IAAI,KAAK,+BAAiB,8OAAC;;;;;;;AAG1C;AAEe,SAAS,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,EAAgD;IACzG,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EACf,uIACA;kBAGD,SAAS,GAAG,CAAC,CAAC,SAAkB,kBAC/B,8OAAC;gBAAiC,SAAS;eAAzB,QAAQ,EAAE,GAAG;;;;;;;;;;AAIvC","debugId":null}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/StageAnalysisRefresher.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/StageAnalysisRefresher.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/StageAnalysisRefresher.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8T,GAC3V,4FACA","debugId":null}},
    {"offset": {"line": 1275, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/StageAnalysisRefresher.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/chat/_components/StageAnalysisRefresher.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/chat/_components/StageAnalysisRefresher.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 1289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/_components/index.ts"],"sourcesContent":["import Chat from './Chat';\nimport ChatList from './ChatList';\nimport ChatModeSwitcher from './ChatModeSwitcher';\nimport ControlPanel from './ControlPanel';\nimport Messages from './Messages';\nimport StageAnalysisRefresher from './StageAnalysisRefresher';\n\nexport { Chat, ChatList, ChatModeSwitcher, ControlPanel, Messages, StageAnalysisRefresher };\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1369, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%28main%29/chat/layout.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { unstable_cache } from 'next/cache';\n\nimport { AsideContextProvider } from '@/contexts/AsideContext';\nimport { getSessionUser } from '@/server/actions/sessionActions';\nimport { getUserChats } from '@/server/db/chatClient';\nimport { NewChatButton } from '@/shared/FunctionalButtons';\nimport Sidebar from '@/shared/Sidebar';\nimport { ListSkeleton } from '@/shared/skeletons/ListSkeleton';\nimport { ChatList, ChatModeSwitcher } from './_components';\n\nexport const dynamicParams = true;\n\nconst getCachedChats = unstable_cache(async (userId: string) => getUserChats(userId), ['chats'], {\n  revalidate: 1800,\n  tags: ['chats'],\n});\n\nexport default async function ChatLayout({ children }: { children: React.ReactNode }) {\n  const userId = await getSessionUser();\n  const chats$ = userId ? getCachedChats(userId) : Promise.resolve([]);\n\n  return (\n    <AsideContextProvider isOpen={false}>\n      <section className=\"relative flex min-h-0 flex-grow flex-col gap-y-2.5 rounded-xl border border-light-gray p-2.5\">\n        <div className=\"relative flex min-h-0 w-full min-w-0 flex-grow justify-between gap-x-2.5\">\n          <div className=\"flex w-1/4 min-w-72 shrink-0 flex-grow flex-col justify-between gap-y-2.5 2xl:max-w-sm 3xl:max-w-lg\">\n            <Sidebar\n              titleKey=\"Chat.sidebarTitle\"\n              titleClassName=\"text-sm text-light-gray\"\n              openClassName=\"w-full\"\n              showOpen={true}\n              openButtonLabel={'Chat.chatHistoryButton'}\n              className=\"shrink flex-grow bg-graphic/[14%]\"\n              contentClassName=\"pt-0\"\n            >\n              <Suspense fallback={<ListSkeleton length={5} />}>\n                <ChatList chats={chats$} />\n              </Suspense>\n            </Sidebar>\n            <div className=\"flex min-h-0 min-w-0 max-w-96 shrink-0 items-center justify-between gap-x-3 px-2 py-0.5\">\n              <NewChatButton />\n              <ChatModeSwitcher />\n            </div>\n          </div>\n          <div className=\"flex min-h-0 w-3/4 min-w-0 flex-grow flex-col\">{children}</div>\n        </div>\n      </section>\n    </AsideContextProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAEO,MAAM,gBAAgB;AAE7B,MAAM,iBAAiB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,SAAmB,CAAA,GAAA,iIAAA,CAAA,eAAY,AAAD,EAAE,SAAS;IAAC;CAAQ,EAAE;IAC/F,YAAY;IACZ,MAAM;QAAC;KAAQ;AACjB;AAEe,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,SAAS,MAAM,CAAA,GAAA,0IAAA,CAAA,iBAAc,AAAD;IAClC,MAAM,SAAS,SAAS,eAAe,UAAU,QAAQ,OAAO,CAAC,EAAE;IAEnE,qBACE,8OAAC,gIAAA,CAAA,uBAAoB;QAAC,QAAQ;kBAC5B,cAAA,8OAAC;YAAQ,WAAU;sBACjB,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,yHAAA,CAAA,UAAO;gCACN,UAAS;gCACT,gBAAe;gCACf,eAAc;gCACd,UAAU;gCACV,iBAAiB;gCACjB,WAAU;gCACV,kBAAiB;0CAEjB,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oCAAC,wBAAU,8OAAC,2IAAA,CAAA,eAAY;wCAAC,QAAQ;;;;;;8CACxC,cAAA,8OAAC,iMAAA,CAAA,WAAQ;wCAAC,OAAO;;;;;;;;;;;;;;;;0CAGrB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,mIAAA,CAAA,gBAAa;;;;;kDACd,8OAAC,iNAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;;kCAGrB,8OAAC;wBAAI,WAAU;kCAAiD;;;;;;;;;;;;;;;;;;;;;;AAK1E","debugId":null}},
    {"offset": {"line": 1512, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/node_modules/next-intl/dist/esm/development/shared/use.js"],"sourcesContent":["import * as react from 'react';\n\n// @ts-expect-error -- Ooof, Next.js doesn't make this easy.\n// `use` is only available in React 19 canary, but we can\n// use it in Next.js already as Next.js \"vendors\" a fixed\n// version of React. However, if we'd simply put `use` in\n// ESM code, then the build doesn't work since React does\n// not export `use` officially. Therefore, we have to use\n// something that is not statically analyzable. Once React\n// 19 is out, we can remove this in the next major version.\nvar use = react['use'.trim()];\n\nexport { use as default };\n"],"names":[],"mappings":";;;AAAA;;AAEA,4DAA4D;AAC5D,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,0DAA0D;AAC1D,2DAA2D;AAC3D,IAAI,MAAM,qMAAK,CAAC,MAAM,IAAI,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1533, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/node_modules/next-intl/dist/esm/development/react-server/useConfig.js"],"sourcesContent":["import getConfig from '../server/react-server/getConfig.js';\nimport use from '../shared/use.js';\n\nfunction useHook(hookName, promise) {\n  try {\n    return use(promise);\n  } catch (error) {\n    if (error instanceof TypeError && error.message.includes(\"Cannot read properties of null (reading 'use')\")) {\n      throw new Error(`\\`${hookName}\\` is not callable within an async component. Please refer to https://next-intl.dev/docs/environments/server-client-components#async-components`, {\n        cause: error\n      });\n    } else {\n      throw error;\n    }\n  }\n}\nfunction useConfig(hookName) {\n  return useHook(hookName, getConfig());\n}\n\nexport { useConfig as default };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,SAAS,QAAQ,QAAQ,EAAE,OAAO;IAChC,IAAI;QACF,OAAO,CAAA,GAAA,2KAAA,CAAA,UAAG,AAAD,EAAE;IACb,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,aAAa,MAAM,OAAO,CAAC,QAAQ,CAAC,mDAAmD;YAC1G,MAAM,IAAI,MAAM,CAAC,EAAE,EAAE,SAAS,+IAA+I,CAAC,EAAE;gBAC9K,OAAO;YACT;QACF,OAAO;YACL,MAAM;QACR;IACF;AACF;AACA,SAAS,UAAU,QAAQ;IACzB,OAAO,QAAQ,UAAU,CAAA,GAAA,oMAAA,CAAA,UAAS,AAAD;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1563, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/node_modules/next-intl/dist/esm/development/react-server/useTranslations.js"],"sourcesContent":["import getServerTranslator from '../server/react-server/getServerTranslator.js';\nimport useConfig from './useConfig.js';\n\nfunction useTranslations(...[namespace]) {\n  const config = useConfig('useTranslations');\n  return getServerTranslator(config, namespace);\n}\n\nexport { useTranslations as default };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,SAAS,gBAAgB,GAAG,CAAC,UAAU;IACrC,MAAM,SAAS,CAAA,GAAA,0LAAA,CAAA,UAAS,AAAD,EAAE;IACzB,OAAO,CAAA,GAAA,8MAAA,CAAA,UAAmB,AAAD,EAAE,QAAQ;AACrC","ignoreList":[0],"debugId":null}}]
}