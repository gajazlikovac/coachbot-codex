{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/server.utils.ts"],"sourcesContent":["'server only';\n\nimport { Decimal } from '@prisma/client/runtime/library';\n\nexport function convertDecimalValues(obj: Record<string, any>): Record<string, any> {\n  const result: Record<string, any> = {};\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (value instanceof Decimal) {\n      result[key] = value.toNumber();\n    } else {\n      result[key] = value;\n    }\n  }\n\n  return result;\n}\n"],"names":[],"mappings":";;;AAEA;;;;;AAFA;;AAIO,SAAS,qBAAqB,GAAwB;IAC3D,MAAM,SAA8B,CAAC;IAErC,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,KAAM;QAC9C,IAAI,iBAAiB,gLAAA,CAAA,UAAO,EAAE;YAC5B,MAAM,CAAC,IAAI,GAAG,MAAM,QAAQ;QAC9B,OAAO;YACL,MAAM,CAAC,IAAI,GAAG;QAChB;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/db/configurationClient.ts"],"sourcesContent":["import { unstable_cache } from 'next/cache';\nimport { AssistantConfiguration, ModerationRule, ModerationTemplate, Prisma, Stage, Style } from '@prisma/client';\n\nimport prisma from '@/lib/prisma';\nimport { convertDecimalValues } from '@/lib/utils/server.utils';\n\nexport const getFullConfiguration = async (assistantId: string, full?: boolean) => {\n  try {\n    const config: any = await prisma.assistantConfiguration.findUnique({\n      where: { assistantId },\n      include: full\n        ? {\n            stages: true,\n            styles: true,\n            modelConfigs: true,\n            moderationRules: true,\n          }\n        : undefined,\n    });\n\n    return {\n      ...config,\n      modelConfigs: full ? config.modelConfigs.map(convertDecimalValues) : undefined,\n    };\n  } catch (error) {\n    console.error(`[instructionsClient] Error fetching assistant ${assistantId} full configuration:`, error);\n\n    return null;\n  }\n};\n\nexport const getAssistantStyles = unstable_cache(\n  async (assistantId: string): Promise<Style[]> => {\n    try {\n      return await prisma.style.findMany({\n        where: { AssistantConfiguration: { assistantId } },\n        orderBy: { created_at: 'asc' },\n      });\n    } catch (error) {\n      console.error(`[instructionsClient] Error fetching assistant ${assistantId} styles:`, error);\n\n      return [];\n    }\n  },\n  ['assistantStyles'],\n  { tags: ['styles'], revalidate: 3600 }\n);\n\nexport const updateAssistantStyle = async (\n  assistantId: string,\n  id: number,\n  data: Partial<Style>\n): Promise<Style | null> => {\n  try {\n    const updatedData: Prisma.StyleUpdateInput = {\n      ...data,\n      greeting_templates: data.greeting_templates || undefined,\n      response_patterns: data.response_patterns || undefined,\n      closing_templates: data.closing_templates || undefined,\n    };\n\n    return await prisma.style.update({\n      where: {\n        id,\n        AssistantConfiguration: { assistantId },\n      },\n      data: { ...updatedData },\n    });\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} style ${id}:`, error);\n\n    return null;\n  }\n};\n\nexport const createAssistantStyle = async (\n  assistantConfigurationId: string,\n  data: Prisma.StyleCreateInput\n): Promise<Style | null> => {\n  try {\n    return await prisma.style.create({\n      data: {\n        ...data,\n        AssistantConfiguration: { connect: { id: assistantConfigurationId } },\n      },\n    });\n  } catch (error) {\n    console.error(\n      `[instructionsClient] Error creating assistant configuration ${assistantConfigurationId} style:`,\n      error\n    );\n\n    return null;\n  }\n};\n\nexport const deleteAssistantStyle = async (id: number): Promise<void> => {\n  try {\n    await await prisma.style.delete({ where: { id } });\n  } catch (error) {\n    console.error(`[instructionsClient] Error deleting style ${id}:`, error);\n  }\n};\n\nexport const updateConfigurationInstructions = async (\n  assistantId: string,\n  data: Partial<AssistantConfiguration>\n): Promise<AssistantConfiguration> => {\n  try {\n    return await prisma.assistantConfiguration.update({ where: { assistantId }, data });\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} instructions:`, error);\n    throw new Error('Error updating assistant instructions');\n  }\n};\n\nexport const getAssistantStages = unstable_cache(\n  async (assistantId: string): Promise<Stage[]> => {\n    try {\n      return await prisma.stage.findMany({\n        where: { AssistantConfiguration: { assistantId } },\n        orderBy: { order: 'asc' },\n      });\n    } catch (error) {\n      console.error(`[instructionsClient] Error fetching assistant ${assistantId} stages:`, error);\n\n      return [];\n    }\n  },\n  ['assistantStages'],\n  { tags: ['stages'], revalidate: 3600 }\n);\n\nexport const updateAssistantStage = async (\n  assistantId: string,\n  id: string,\n  data: Prisma.StageUpdateInput\n): Promise<Stage> => {\n  try {\n    return prisma.stage.update({\n      where: { id, AssistantConfiguration: { assistantId } },\n      data: { ...data },\n    });\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} stage ${id}:`, error);\n\n    throw new Error('Error updating assistant stage');\n  }\n};\n\nexport const updateAssistantStagesOrder = async (\n  assistantId: string,\n  stages: Pick<Stage, 'id' | 'order'>[]\n): Promise<Stage[]> => {\n  try {\n    return Promise.all(\n      stages.map((stage) =>\n        prisma.stage.update({\n          where: { id: stage.id, AssistantConfiguration: { assistantId } },\n          data: { order: stage.order },\n        })\n      )\n    );\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} stages:`, error);\n    throw new Error('Error updating assistant stages');\n  }\n};\n\nexport const getAssistantFirstStage = unstable_cache(\n  async (assistantId: string, sortingOrder: 'asc' | 'desc' = 'asc', id?: string): Promise<Stage | null> => {\n    try {\n      const where = !!id ? { id } : { AssistantConfiguration: { assistantId } };\n\n      return prisma.stage.findFirst({\n        where,\n        orderBy: { order: sortingOrder },\n      });\n    } catch (error) {\n      console.error(`[instructionsClient] Error getting assistant ${assistantId} first stage:`, error);\n      throw new Error('Error getting assistant first stage');\n    }\n  },\n  ['assistantFirstStage'],\n  { tags: ['firstStage'] }\n);\n\nexport const createAssistantStage = async (\n  assistantConfigurationId: string,\n  { name }: Pick<Stage, 'name'>\n): Promise<Stage> => {\n  try {\n    const lastStage = await getAssistantFirstStage('', 'desc', assistantConfigurationId);\n    const order = lastStage ? lastStage.order + 1 : 1;\n\n    return prisma.stage.create({\n      data: {\n        name,\n        order,\n        AssistantConfiguration: { connect: { id: assistantConfigurationId } },\n      },\n    });\n  } catch (error) {\n    console.error(\n      `[instructionsClient] Error creating assistant configuration ${assistantConfigurationId} stage:`,\n      error\n    );\n    throw new Error('Error creating assistant stage');\n  }\n};\n\nexport const deleteAssistantStage = async (id: string): Promise<Stage> => {\n  try {\n    return prisma.stage.delete({ where: { id } });\n  } catch (error) {\n    console.error(`[instructionsClient] Error deleting assistant stage ${id}:`, error);\n    throw new Error('Error deleting assistant stage');\n  }\n};\n\nexport const getAssistantModerationRules = unstable_cache(\n  async (assistantId: string): Promise<ModerationRule[]> => {\n    try {\n      return prisma.moderationRule.findMany({\n        where: { AssistantConfiguration: { assistantId } },\n        orderBy: { created_at: 'asc' },\n        include: { ModerationTemplate: true },\n      });\n    } catch (error) {\n      console.error(`[instructionsClient] Error fetching assistant ${assistantId} moderation rules:`, error);\n\n      return [];\n    }\n  },\n  ['assistantModerationRules'],\n  { tags: ['moderationRules'], revalidate: 3600 }\n);\n\nexport const createAssistantModerationRule = async (\n  assistantConfigurationId: string,\n  data: Pick<ModerationRule, 'name' | 'custom'>\n): Promise<ModerationRule> => {\n  try {\n    return prisma.moderationRule.create({\n      data: {\n        ...data,\n        AssistantConfiguration: { connect: { id: assistantConfigurationId } },\n      },\n      include: { ModerationTemplate: true },\n    });\n  } catch (error) {\n    console.error(\n      `[instructionsClient] Error creating assistant configuration ${assistantConfigurationId} moderation rule:`,\n      error\n    );\n    throw new Error('Error creating assistant moderation rule.');\n  }\n};\n\nexport const updateAssistantModerationRule = async (\n  assistantId: string,\n  id: string,\n  data: any\n): Promise<ModerationRule> => {\n  try {\n    const updatedData: Prisma.ModerationRuleUpdateInput = {\n      ...data,\n      response_template: undefined,\n      instructions: data.instructions || undefined,\n      updated_at: new Date(),\n      ModerationTemplate: data.ModerationTemplate?.length\n        ? {\n            updateMany: data.ModerationTemplate.map((template: ModerationTemplate) => ({\n              where: {\n                id: template.id,\n                rule_id: id,\n              },\n              data: {\n                ...template,\n                updated_at: new Date(),\n              },\n            })),\n          }\n        : undefined,\n    };\n\n    return prisma.moderationRule.update({\n      where: { id, AssistantConfiguration: { assistantId } },\n      data: { ...updatedData },\n      include: { ModerationTemplate: true },\n    });\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} moderation rule:`, error);\n    throw new Error('Error creating assistant moderation rule.');\n  }\n};\n\nexport const deleteAssistantModerationRule = async (id: string): Promise<ModerationRule> => {\n  try {\n    return prisma.moderationRule.delete({ where: { id } });\n  } catch (error) {\n    console.error(`[instructionsClient] Error deleting moderation rule ${id}:`, error);\n    throw new Error('Error deleting assistant moderation rule.');\n  }\n};\n\nexport const createAssistantModerationTemplate = async (\n  _: any,\n  data: ModerationTemplate\n): Promise<ModerationTemplate> => {\n  try {\n    return prisma.moderationTemplate.create({ data, include: { ModerationRule: true } });\n  } catch (error) {\n    console.error(`[instructionsClient] Error creating new template for moderation rule ${data.rule_id}:`, error);\n    throw new Error('Error creating assistant moderation template.');\n  }\n};\n\nexport const updateAssistantModerationTemplate = async (\n  _: any,\n  id: string,\n  data: Partial<ModerationTemplate>\n): Promise<ModerationTemplate> => {\n  try {\n    return prisma.moderationTemplate.update({ where: { id }, data, include: { ModerationRule: true } });\n  } catch (error) {\n    console.error(`[instructionsClient] Error deleting moderation template ${id}:`, error);\n    throw new Error('Error deleting assistant moderation template.');\n  }\n};\n\nexport const deleteAssistantModerationTemplate = async (id: string): Promise<ModerationTemplate> => {\n  try {\n    return prisma.moderationTemplate.delete({ where: { id } });\n  } catch (error) {\n    console.error(`[instructionsClient] Error deleting moderation template ${id}:`, error);\n    throw new Error('Error deleting assistant moderation template.');\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/db/assistantClient.ts"],"sourcesContent":["'use server';\n\nimport { unstable_cache } from 'next/cache';\nimport {\n  Assistant,\n  AssistantConfiguration,\n  AssistantMeta,\n  ModelConfig,\n  ModerationRule,\n  ModerationTemplate,\n  Prisma,\n  Stage,\n  Style,\n  Template,\n} from '@prisma/client';\n\nimport prisma from '@/lib/prisma';\nimport { getFullConfiguration } from './configurationClient';\n\nexport type ConfigurationRelations = {\n  modelConfigs: ModelConfig[];\n  moderationRules: (ModerationRule & { ModerationTemplate: ModerationTemplate[] })[];\n  stages: Stage[];\n  styles: Style[];\n  meta: AssistantMeta;\n  configuration: AssistantConfiguration;\n};\n\nexport const getAllTemplates = async (): Promise<Template[]> => {\n  try {\n    return prisma.template.findMany({\n      include: {\n        stages: true,\n        modelConfigs: true,\n      },\n    });\n  } catch (error) {\n    console.error(`[assistantClient] Error fetching templates:`, error);\n\n    return [];\n  }\n};\n\nexport const getUserAssitants = unstable_cache(\n  async (userId: string, include?: any): Promise<Assistant[]> => {\n    try {\n      return prisma.assistant.findMany({ where: { userId }, orderBy: { created_at: 'desc' }, include });\n    } catch (error) {\n      console.error(`[assistantClient] Error fetching assistants for user ${userId}:`, error);\n\n      return [];\n    }\n  },\n  ['userAssistants'],\n  { tags: ['assistants'], revalidate: 3600 }\n);\n\nexport const getAssistans = async (ids: string[], include?: any): Promise<Assistant[]> => {\n  try {\n    return prisma.assistant.findMany({ where: { id: { in: ids } }, include });\n  } catch (error) {\n    console.error(`[assistantClient] Error fetching assistants:`, error);\n\n    return [];\n  }\n};\n\nexport const getAssistantData = async (\n  id: string,\n  include?: any\n): Promise<(Assistant & { meta?: AssistantMeta; configuration?: AssistantConfiguration }) | null> => {\n  try {\n    return prisma.assistant.findFirst({\n      where: { id },\n      include,\n    });\n  } catch (error) {\n    console.error(`[assistantClient] Error fetching assistants ${id}:`, error);\n\n    return null;\n  }\n};\n\nexport const createUserAssistant = async (\n  userId: string,\n  data: Pick<Assistant, 'name' | 'description'>,\n  template: Template & ConfigurationRelations\n): Promise<Assistant | null> => {\n  try {\n    if (!template) {\n      console.error('[assistantClient] Could not find initial templater');\n      return null;\n    }\n\n    return prisma.$transaction(async (tx) => {\n      const { modelConfigs, stages, instructions, onboarding, onboardingAnalyzer, id } = template;\n\n      const newAssistant = await tx.assistant.create({\n        data: {\n          ...data,\n          userId,\n          templateId: id,\n        },\n      });\n\n      await tx.assistantConfiguration.create({\n        data: {\n          assistantId: newAssistant.id,\n          templateId: id,\n          instructions,\n          onboarding,\n          onboardingAnalyzer,\n          modelConfigs: {\n            createMany: {\n              data: modelConfigs.map(({ model, temperature, top_p, frequency_penalty, presence_penalty }) => ({\n                model,\n                temperature,\n                top_p,\n                frequency_penalty,\n                presence_penalty,\n              })),\n            },\n          },\n          stages: {\n            createMany: {\n              data: stages.map(({ name, instructions, analyzer, order }) => ({\n                name,\n                instructions,\n                analyzer,\n                order,\n              })),\n            },\n          },\n        },\n      });\n\n      await tx.assistantMeta.create({ data: { assistantId: newAssistant.id } });\n\n      return newAssistant;\n    });\n  } catch (error) {\n    console.error(`[assistantClient] Error creating assistant for user ${userId}:`, error);\n\n    return null;\n  }\n};\n\nexport const duplicateAssistant = async (userId: string, original: any): Promise<Assistant | null> => {\n  try {\n    if (!original) {\n      console.error('[assistantClient] No original assistant provided');\n      return null;\n    }\n\n    return prisma.$transaction(async (tx) => {\n      const { name, description, mode, meta } = original;\n      const configuration = await getFullConfiguration(original.id, true);\n\n      const newAssistant = await tx.assistant.create({\n        data: {\n          name: `${name} (copy)`,\n          description,\n          userId,\n          mode,\n        },\n      });\n\n      await tx.assistantConfiguration.create({\n        data: {\n          assistantId: newAssistant.id,\n          templateId: configuration.templateId,\n          instructions: configuration.instructions,\n          onboarding: configuration.onboarding,\n          onboardingAnalyzer: configuration.onboardingAnalyzer,\n          tokensLimit: configuration.tokensLimit,\n          usageType: configuration.usageType,\n          communicationModes: configuration.communicationModes,\n          modelConfigs: {\n            createMany: {\n              data: configuration.modelConfigs.map(\n                ({ model, temperature, top_p, frequency_penalty, presence_penalty }: ModelConfig) => ({\n                  model,\n                  temperature,\n                  top_p,\n                  frequency_penalty,\n                  presence_penalty,\n                })\n              ),\n            },\n          },\n          stages: {\n            createMany: {\n              data: configuration.stages.map(({ name, instructions, analyzer, order }: Stage) => ({\n                name,\n                instructions,\n                analyzer,\n                order,\n              })),\n            },\n          },\n        },\n      });\n\n      await tx.assistantMeta.create({\n        data: {\n          assistantId: newAssistant.id,\n          topics: meta.topics,\n          visibility: meta.visibility,\n          accessLevel: meta.accessLevel,\n          price: meta.price\n            ? {\n                create: {\n                  amount: meta.price.amount,\n                  monthly: meta.price.monthly,\n                  yearly: meta.price.yearly,\n                  currency: meta.price.currency,\n                  trialDays: meta.price.trialDays,\n                },\n              }\n            : undefined,\n        },\n      });\n\n      return newAssistant;\n    });\n  } catch (error) {\n    console.error(`[assistantClient] Error duplicating assistant for user ${userId}:`, error);\n    return null;\n  }\n};\n\nexport async function updateUserAssistant(userId: string, id: string, data: Partial<Assistant>) {\n  try {\n    return prisma.assistant.update({ where: { userId, id }, data });\n  } catch (error) {\n    console.error(`[assistantClient] Error updating user ${userId} assistant ${id}:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMeta(assistantId: string, data: Prisma.AssistantMetaUpdateInput) {\n  try {\n    return prisma.assistantMeta.update({ where: { assistantId }, data });\n  } catch (error) {\n    console.error(`[assistantClient] Error updating user assistant  ${assistantId} meta:`, error);\n\n    return null;\n  }\n}\n\nexport async function upsertAssistantPrice(assistantMetaId: string, data: Prisma.PriceConfigurationCreateInput) {\n  try {\n    return await prisma.priceConfiguration.upsert({\n      where: { assistantMetaId },\n      update: data,\n      create: {\n        ...data,\n        assistantMeta: {\n          connect: { id: assistantMetaId },\n        },\n      },\n    });\n  } catch (error) {\n    console.error(`[assistantClient] Error updating user assistant meta ${assistantMetaId} price:`, error);\n\n    return null;\n  }\n}\n\nexport async function deleteUserAssistant(userId: string, id: string) {\n  try {\n    return prisma.assistant.delete({ where: { userId, id } });\n  } catch (error) {\n    console.error(`[assistantClient] Error deleting user ${userId} assistant ${id}:`, error);\n\n    return null;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/assistantActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { PriceConfiguration } from '@prisma/client';\n\nimport { Assistant, AssistantConfiguration, AssistantEditable, AssistantMeta } from '@/lib/models/assistant.models';\nimport { State, Template } from '@/lib/models/common.models';\nimport { assistantPriceSchema, assistantSchema, mapRelationConfig } from '@/lib/utils/db.utils';\nimport {\n  createUserAssistant,\n  deleteUserAssistant,\n  duplicateAssistant,\n  getAllTemplates,\n  getUserAssitants,\n  updateAssistantMeta,\n  updateUserAssistant,\n  upsertAssistantPrice,\n} from '../db/assistantClient';\nimport { getFullConfiguration } from '../db/configurationClient';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function getCurrentAssistant(): Promise<string> {\n  try {\n    const { assistantId } = (await verifySession()) || {};\n\n    return assistantId || '';\n  } catch (error) {\n    console.error(`[authActions] Error fetching current assistant`, error);\n\n    return '';\n  }\n}\n\nexport async function getTemplates(): Promise<Template[]> {\n  try {\n    const templates: any[] = await getAllTemplates();\n\n    return templates.map(mapRelationConfig);\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching templates:`, e);\n    return [];\n  }\n}\n\nexport async function getAssistants(include?: any): Promise<Assistant[]> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return [];\n\n    const assistants = await getUserAssitants(userId, include);\n\n    return assistants;\n  } catch (e) {\n    console.error(`[assistantClient] Error fetching assistants for user ${userId}:`, e);\n    return [];\n  }\n}\n\nexport async function upsertAssistant(\n  { template, ...assistantData }: AssistantEditable,\n  id?: string\n): Promise<State<Assistant | null>> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n    let assistant;\n\n    if (!userId) return { value: null };\n\n    const parsedData = assistantSchema.safeParse({ template, ...assistantData });\n\n    if (!parsedData.success) {\n      return { errors: parsedData.error.errors.map(({ message, path }) => ({ name: path.join('.'), message })) };\n    }\n\n    if (!!id) {\n      assistant = await updateUserAssistant(userId, id, {\n        name: assistantData.name,\n        description: assistantData.description,\n        mode: assistantData.mode,\n        status: assistantData.status,\n      });\n    } else {\n      assistant = await createUserAssistant(userId, assistantData, template as any);\n    }\n\n    revalidateTag('assistants');\n\n    return { value: assistant };\n  } catch (e) {\n    console.error(`[assistantClient] Error ${!!id ? 'updating' : 'creating'} assistant for user ${userId}:`, e);\n    return { value: null, error: '' };\n  }\n}\n\nexport async function getAssistantConfiguration(\n  id?: string,\n  full: boolean = true\n): Promise<AssistantConfiguration | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    return (await getFullConfiguration(assistantId || '', full)) as any;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function createCopyAssistant(assistant: Assistant): Promise<Assistant | null> {\n  try {\n    const userId = await getSessionUser();\n\n    if (!assistant || !userId) {\n      console.warn('Assistant not passed or user not authenticated!');\n      return null;\n    }\n\n    const copy = await duplicateAssistant(userId, assistant);\n    revalidateTag('assistants');\n\n    return copy;\n  } catch (error) {\n    console.error(`[instructionsClient] Error creating copy of assistant ${assistant.id}:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaData(id: string, data: Partial<AssistantMeta>): Promise<AssistantMeta | null> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return null;\n    }\n\n    const updatedMeta = await updateAssistantMeta(assistantId, data as any);\n\n    revalidateTag('assistants');\n    return updatedMeta;\n  } catch (error) {\n    console.error(`[instructionsClient] Error getting assistant ${assistantId} data:`, error);\n\n    return null;\n  }\n}\n\nexport async function updateAssistantMetaPrice(\n  assistant: Assistant,\n  formData: FormData\n): Promise<State<PriceConfiguration | null>> {\n  let assistantId;\n  try {\n    assistantId = assistant.id || (await getCurrentAssistant());\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.unexpectedError', value: null };\n    }\n    const price = [...formData].reduce((data: any, [key, value]: any) => ({ ...data, [key]: value }), {});\n    const validatedData = assistantPriceSchema.parse(price);\n\n    if (validatedData instanceof Error) {\n      return { error: validatedData.message };\n    }\n\n    const updatedPrice = await upsertAssistantPrice(assistant.meta?.id || '', {\n      ...validatedData,\n      trialDays: !!validatedData.trialDays ? 14 : null,\n    } as any);\n\n    revalidateTag('assistants');\n    return { successMessage: 'General.successMessages.dataSaved', value: updatedPrice };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} meta price data:`, error);\n\n    return { error: 'General.errors.unexpectedError', value: null };\n  }\n}\n\nexport async function deleteAssistant(id: string) {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return;\n\n    await deleteUserAssistant(userId, id);\n    revalidateTag('assistants');\n  } catch (error) {\n    console.error(`[assistantClient] Error removing user ${userId} assistant ${id}:`, error);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/models/chat.models.ts"],"sourcesContent":["import { AnalyzeStageData } from './api.models';\nimport { Style } from './instruction.models';\n\nexport interface Chat {\n  id: string;\n  name: string;\n  userId: string;\n  created_at: Date | string;\n  currentStage?: string | null;\n  ChatLifeAreas?: JSON;\n  Summary?: JSON;\n  Messages?: Message[];\n  stageAnalysis?: AnalyzeStageData;\n}\n\nexport interface Message {\n  id: string;\n  content: string;\n  originalContent?: string | null;\n  star?: boolean | null;\n  role: MessageRole | string;\n  chatId?: string;\n  created_at?: Date | string;\n  type?: string | null;\n  stage?: string | null;\n  status?: MessageStatus;\n  isLoading?: boolean;\n  error?: boolean;\n  recurring?: boolean;\n}\n\nexport enum MessageStatus {\n  generating = 'generating',\n  complete = 'complete',\n}\n\nexport enum MessageRole {\n  user = 'user',\n  assistant = 'assistant',\n}\n\nexport enum ChatMode {\n  new = 'new',\n  recurring = 'recurring',\n}\n\nexport interface ChatInfo {\n  stage: string;\n  style: Style | null;\n  mode: ChatMode;\n}\n"],"names":[],"mappings":";;;;;AA+BO,IAAA,AAAK,uCAAA;;;WAAA;;AAKL,IAAA,AAAK,qCAAA;;;WAAA;;AAKL,IAAA,AAAK,kCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 1017, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/lib/utils/chat.utils.ts"],"sourcesContent":["import { AnalyzeStageData } from '../models/api.models';\nimport { ChatInfo, ChatMode, Message, MessageRole } from '../models/chat.models';\nimport { SessionDetailsTab } from '../models/common.models';\nimport { Locale } from '../models/locale.models';\n\n/**\n * Generates a formatted chat session name with the current day and time\n * Format: \"Session - Day [HH:MM]\" (e.g., \"Session - Mon [14:30]\")\n * @returns {string} Formatted session name\n */\nexport const generateSessionName = (locale: Locale | string = 'en-US'): string => {\n  const now = new Date();\n\n  // Get day abbreviation (Mon, Tue, etc.)\n  const day = now.toLocaleDateString(locale, { weekday: 'short' });\n\n  // Get hours and minutes with padding\n  const hours = now.getHours().toString().padStart(2, '0');\n  const minutes = now.getMinutes().toString().padStart(2, '0');\n\n  return `Session - ${day} [${hours}:${minutes}]`;\n};\n\n/**\n * Generates a UUID v4 string with fallback for environments without crypto.randomUUID\n * @returns {string} UUID v4 string\n */\nexport const generateUUID = (): string => {\n  if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n\n  // Fallback implementation\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const getMessage = (content: string, role: MessageRole, { stage, mode }: ChatInfo): Message => ({\n  id: generateUUID(),\n  content,\n  stage,\n  role,\n  created_at: new Date().toISOString(),\n  recurring: mode === ChatMode.recurring,\n});\n\nexport const mapSessionStageAnalysis = (data?: AnalyzeStageData): SessionDetailsTab[] | undefined => {\n  if (!data?.reasoning || !data?.criteria_missing) {\n    return [{ name: 'Details', descriptions: [] }];\n  }\n\n  return [\n    {\n      name: 'Details',\n      descriptions: [\n        { type: 'text', value: data.reasoning },\n        {\n          type: 'list',\n          value: data.criteria_missing.map((item) => `▪︎  ${item}`),\n          title: data.criteria_missing.length ? 'Missing Criterias' : '',\n        },\n      ],\n    },\n  ];\n};\n"],"names":[],"mappings":";;;;;;AACA;;AASO,MAAM,sBAAsB,CAAC,SAA0B,OAAO;IACnE,MAAM,MAAM,IAAI;IAEhB,wCAAwC;IACxC,MAAM,MAAM,IAAI,kBAAkB,CAAC,QAAQ;QAAE,SAAS;IAAQ;IAE9D,qCAAqC;IACrC,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IAExD,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,CAAC;AACjD;AAMO,MAAM,eAAe;IAC1B,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,UAAU,KAAK,YAAY;QAC5E,OAAO,OAAO,UAAU;IAC1B;IAEA,0BAA0B;IAC1B,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAC;QAC9D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,MAAM,IAAI,MAAM,MAAM,IAAI,AAAC,IAAI,MAAO;QACtC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF;AAEO,MAAM,aAAa,CAAC,SAAiB,MAAmB,EAAE,KAAK,EAAE,IAAI,EAAY,GAAc,CAAC;QACrG,IAAI;QACJ;QACA;QACA;QACA,YAAY,IAAI,OAAO,WAAW;QAClC,WAAW,SAAS,sIAAA,CAAA,WAAQ,CAAC,SAAS;IACxC,CAAC;AAEM,MAAM,0BAA0B,CAAC;IACtC,IAAI,CAAC,MAAM,aAAa,CAAC,MAAM,kBAAkB;QAC/C,OAAO;YAAC;gBAAE,MAAM;gBAAW,cAAc,EAAE;YAAC;SAAE;IAChD;IAEA,OAAO;QACL;YACE,MAAM;YACN,cAAc;gBACZ;oBAAE,MAAM;oBAAQ,OAAO,KAAK,SAAS;gBAAC;gBACtC;oBACE,MAAM;oBACN,OAAO,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAS,CAAC,IAAI,EAAE,MAAM;oBACxD,OAAO,KAAK,gBAAgB,CAAC,MAAM,GAAG,sBAAsB;gBAC9D;aACD;QACH;KACD;AACH","debugId":null}},
    {"offset": {"line": 1087, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/db/chatClient.ts"],"sourcesContent":["import { cache } from 'react';\nimport { Chat, Message } from '@prisma/client';\n\nimport prisma from '@/lib/prisma';\nimport { Chat as ChatModel } from '../../lib/models/chat.models';\n\nexport const getUserChat = cache(\n  async (id: string, userId: string): Promise<(Chat & { Messages: Message[] }) | null> => {\n    try {\n      return prisma.chat.findFirst({\n        where: { id, userId },\n        include: {\n          Messages: {\n            orderBy: {\n              created_at: 'desc',\n            },\n          },\n        },\n      });\n    } catch (error) {\n      console.error(`[chatClient] Error fetching chat ${id}:`, error);\n\n      return null;\n    }\n  }\n);\n\nexport const getUserChats = async (userId: string): Promise<ChatModel[] | null> => {\n  try {\n    const chats = await prisma.chat.findMany({\n      where: { userId },\n      orderBy: {\n        created_at: 'desc',\n      },\n    });\n\n    return chats.map((chat: Chat) => ({\n      ...chat,\n      stageAnalysis: typeof chat.stageAnalysis === 'string' ? JSON.parse(chat.stageAnalysis) : chat.stageAnalysis,\n    }));\n  } catch (error) {\n    console.error(`[chatClient] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n};\n\nexport const createChat = async (userId: string, chat: any): Promise<Chat> => {\n  try {\n    const createdChat = await prisma.chat.create({ data: { ...chat, userId }, include: { Messages: true } });\n\n    return createdChat;\n  } catch (error) {\n    console.error(`[chatClient] Error creating chat for user ${userId}:`, error);\n\n    throw new Error('[chatClient] Could not create new chat');\n  }\n};\n\nexport const updateUserChat = async (id: string, data: any): Promise<Chat> => {\n  try {\n    const result = await prisma.chat.update({ where: { id }, data: { ...data }, include: { Messages: true } });\n\n    return result;\n  } catch (error) {\n    console.log(`[chatActions debugger] updating chat ${id} error`, JSON.stringify(error));\n    console.error(`[chatClient] Error updating chat ${id}:`, error);\n\n    throw new Error('[chatClient] Could not upadte chat');\n  }\n};\n\nexport const removeChat = async (userId: string, id: string): Promise<Chat> => {\n  try {\n    return prisma.chat.delete({ where: { userId, id } });\n  } catch (error) {\n    console.error(`[chatClient] Error removing chat ${id}:`, error);\n\n    throw new Error('[chatClient] Could not remove chat');\n  }\n};\n\nexport const createChatMessage = async (chatId: string, message: any): Promise<Message> => {\n  try {\n    return await prisma.message.create({ data: { ...message, chatId, created_at: new Date(message.created_at) } });\n  } catch (error) {\n    console.error(`[chatClient] Error during creating message for chat ${chatId}:`, error);\n\n    throw new Error('[chatClient] Could not create chat message');\n  }\n};\n\nexport const updateMessage = async (id: string, data: Partial<Message>): Promise<Message> => {\n  try {\n    return await prisma.message.update({\n      where: { id },\n      data,\n    });\n  } catch (error) {\n    console.error(`[chatClient] Error during updating message  ${id}:`, error);\n\n    throw new Error('[chatClient] Could not upadte message');\n  }\n};\n\nexport const updateLastMessageInChat = async (chatId: string, data: Partial<Message>): Promise<Message | null> => {\n  try {\n    const lastMessage = await prisma.message.findFirst({\n      where: { chatId },\n      orderBy: { created_at: 'desc' },\n    });\n\n    if (!lastMessage) return null;\n\n    return await updateMessage(lastMessage.id, data);\n  } catch (error) {\n    console.error(`[chatClient] Error updating last message in chat ${chatId}:`, error);\n\n    throw new Error('[chatClient] Could not update last message');\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/instructionsActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { z } from 'zod';\n\nimport { AssistantState } from '@/app/(main)/instructions/_components/SystemInstructions';\nimport { State } from '@/lib/models/common.models';\nimport { ModerationRule, ModerationTemplate, Stage, Style } from '@/lib/models/instruction.models';\nimport {\n  categorySchema,\n  defaultModerationRule,\n  defaultStyleData,\n  instructionSchema,\n  mapModerationRule,\n  mapPrismaModerationData,\n  mapStyleData,\n  moderationRuleSchema,\n  nameSchema,\n  stageSchema,\n  styleSchema,\n} from '@/lib/utils/db.utils';\nimport {\n  createAssistantModerationRule,\n  createAssistantModerationTemplate,\n  createAssistantStage,\n  createAssistantStyle,\n  deleteAssistantModerationRule,\n  deleteAssistantModerationTemplate,\n  deleteAssistantStage,\n  deleteAssistantStyle,\n  getAssistantFirstStage,\n  getAssistantModerationRules,\n  getAssistantStages,\n  getAssistantStyles,\n  updateAssistantModerationRule,\n  updateAssistantModerationTemplate,\n  updateAssistantStage,\n  updateAssistantStagesOrder,\n  updateAssistantStyle,\n  updateConfigurationInstructions,\n} from '../db/configurationClient';\nimport { getAssistantConfiguration, getCurrentAssistant } from './assistantActions';\n\nasync function validateAndUpdateItem<S, T extends { id: S }>(\n  data: T,\n  schema: z.ZodSchema<Partial<T>>,\n  updateFunction: (assistantId: string, id: S, data: Partial<T>) => Promise<any>,\n  successMessage: string,\n  tag?: string\n): Promise<State<T>> {\n  let assistantId;\n  try {\n    assistantId = await getCurrentAssistant();\n\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.noAssistantExist', value: null };\n    }\n\n    const parsedData = schema.safeParse(data);\n\n    if (!parsedData.success) {\n      return { errors: parsedData.error.errors.map(({ message, path }) => ({ name: path.join('.'), message })) };\n    }\n\n    const value = await updateFunction(assistantId, data.id, parsedData.data);\n\n    tag && revalidateTag(tag);\n    return { successMessage, value };\n  } catch (error) {\n    console.error(`[instructionsActions] Error during updating '${data.id}' ${tag} item : `, error);\n    return { error: 'Instructions.systemInstruction.errors.saveFailed', value: data };\n  }\n}\n\nasync function createItem<T>(\n  data: T,\n  createFunction: (assistantId: string, data: T) => Promise<T>,\n  successMessage: string,\n  tags: string[] = []\n): Promise<State<T>> {\n  let assistantConfigId;\n  try {\n    const assistantConfig = await getAssistantConfiguration();\n    assistantConfigId = assistantConfig?.id;\n\n    if (!assistantConfigId) {\n      console.warn('Assistant not found or user not authenticated');\n      return { error: 'General.errors.noAssistantExist', value: null };\n    }\n\n    const createdItem: any = await createFunction(assistantConfigId, data as T);\n    tags.forEach(revalidateTag);\n\n    return { successMessage, value: createdItem };\n  } catch (error) {\n    console.error(`[instructionsActions] Error during creating ${tags?.[0]} item`, error);\n    return { error: 'Instructions.systemInstruction.errors.saveFailed' };\n  }\n}\n\nasync function getItems<T>(getFunction: (assistantId: string) => Promise<T>, tag?: string, id?: string): Promise<T> {\n  let assistantId;\n  try {\n    assistantId = id || (await getCurrentAssistant());\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return [] as T;\n    }\n\n    return getFunction(assistantId);\n  } catch (error) {\n    console.error(`[instructionsActions] Error during getting assistant '${assistantId}'  ${tag} data`, error);\n    return [] as T;\n  }\n}\n\nasync function deleteItem<T>(\n  id: T,\n  deleteFunction: (id: T) => Promise<any>,\n  successMessage: string,\n  tags: string[] = []\n): Promise<State<null>> {\n  try {\n    await deleteFunction(id);\n    tags.forEach(revalidateTag);\n\n    return { successMessage, value: null };\n  } catch (error) {\n    console.error(`[instructionsActions] Error during deleting '${id}'  ${tags[0]} data.`, error);\n    return { error: 'Instructions.systemInstruction.errors.saveFailed' };\n  }\n}\n\n// MAIN INSTRUCTIONS\nexport async function updateConfigInstructions(formData: any): Promise<State<AssistantState>> {\n  let assistantId;\n  try {\n    assistantId = (await getCurrentAssistant()) || '';\n    const formInstructions = formData?.get('instructions');\n    const formOnboarding = formData?.get('onboarding');\n    const validatedData = formInstructions && instructionSchema.parse({ instructions: formInstructions });\n\n    if (validatedData instanceof Error) {\n      return { error: validatedData.message };\n    }\n\n    const { instructions, onboarding } = await updateConfigurationInstructions(assistantId, {\n      instructions: !!formInstructions ? formInstructions : undefined,\n      onboarding: !!formOnboarding ? formOnboarding : undefined,\n    });\n    return { successMessage: 'Instructions.systemInstruction.successMessages', value: { instructions, onboarding } };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} instructions:`, error);\n\n    return { error: 'Instructions.systemInstruction.errors.saveFailed' };\n  }\n}\n\n// STYLES\nexport async function getStyles(): Promise<Style[]> {\n  const styles = (await getItems(getAssistantStyles, 'styles')) || [];\n\n  return styles.map(mapStyleData);\n}\n\nexport async function updateStyle(style: Style): Promise<State<Style | null>> {\n  const styleData = {\n    ...style,\n    greeting_templates: JSON.stringify(style.greeting_templates.split('\\n')),\n    response_patterns: JSON.stringify(style.response_patterns.split('\\n')),\n    closing_templates: JSON.stringify(style.closing_templates.split('\\n')),\n  };\n\n  const result = await validateAndUpdateItem<number, Style>(\n    styleData,\n    styleSchema,\n    updateAssistantStyle,\n    'Instructions.Styles.successMessage',\n    'styles'\n  );\n\n  return { ...result, value: result.value ? mapStyleData(result.value) : result.value };\n}\n\nexport async function updateStyleTitle(id: number, title: string): Promise<State<Style | null>> {\n  let assistantId;\n  try {\n    assistantId = (await getCurrentAssistant()) || '';\n    const value: any = await updateAssistantStyle(assistantId || '', id, { ...defaultStyleData, title, assistantId });\n\n    return { successMessage: 'General.successMessages.dataSaved', value: mapStyleData(value) };\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating style ${id} title:`, error);\n\n    return { error: 'General.errors.unexpectedError', value: null };\n  }\n}\n\nexport async function createStyle(title: string): Promise<State<Style | null>> {\n  return createItem<any>({ ...defaultStyleData, title }, createAssistantStyle, 'General.successMessages.dataSaved', [\n    'styles',\n  ]);\n}\n\nexport async function deleteStyle(id: number): Promise<State<null>> {\n  return deleteItem(id, deleteAssistantStyle, 'General.successMessages.dataDeleted', ['styles']);\n}\n\n// STAGES\nexport async function getStages(id?: string): Promise<Stage[]> {\n  return getItems<Stage[]>(getAssistantStages, 'stages', id);\n}\n\nexport async function getFirstStage(): Promise<Stage | null> {\n  return getItems<Stage | null>(getAssistantFirstStage, 'first stage');\n}\n\nexport async function updateStage(stage: Stage, onlyName?: boolean): Promise<State<Stage>> {\n  return validateAndUpdateItem<string, Stage>(\n    stage,\n    onlyName ? nameSchema : stageSchema,\n    updateAssistantStage,\n    'Instructions.systemInstruction.successMessages',\n    'stages'\n  );\n}\nexport async function updateStageOrder(targetStage: Stage, changedOrder: number, stages: Stage[]): Promise<Stage[]> {\n  let assistantId;\n  try {\n    assistantId = await getCurrentAssistant();\n    if (!assistantId) {\n      console.warn('Assistant not found or user not authenticated');\n      return [];\n    }\n\n    const newOrder = targetStage.order + changedOrder;\n\n    const updatedStages = stages.map((stage: Stage) => {\n      if (stage.id === targetStage.id) {\n        return { ...targetStage, order: newOrder };\n      }\n\n      if (stage.order === newOrder) {\n        return { ...stage, order: stage.order - changedOrder || stage.order + changedOrder };\n      }\n\n      return stage;\n    });\n\n    await updateAssistantStagesOrder(assistantId, updatedStages);\n    ['stages', 'firstStage'].forEach(revalidateTag);\n\n    return updatedStages.sort((a, b) => a.order - b.order);\n  } catch (error) {\n    console.error(`[instructionsClient] Error updating assistant ${assistantId} stages order:`, error);\n\n    return [];\n  }\n}\n\nexport async function createStage(name: string): Promise<State<Stage | null>> {\n  return createItem<Stage>({ name } as Stage, createAssistantStage, 'General.successMessages.dataSaved', [\n    'stages',\n    'firstStage',\n  ]);\n}\n\nexport async function deleteStage(id: string): Promise<State<null>> {\n  return deleteItem(id, deleteAssistantStage, 'General.successMessages.dataDeleted', ['stages', 'firstStage']);\n}\n\n// MODERATION RULES & TEMPLATES\nexport async function getModerationRules(): Promise<ModerationRule[]> {\n  const rules = await getItems(getAssistantModerationRules, 'moderation rules');\n\n  return rules.map((rule) => mapPrismaModerationData(rule));\n}\n\nexport async function createModerationRule(name: string): Promise<State<ModerationRule | null>> {\n  const state = await createItem<any>(\n    { ...defaultModerationRule, name },\n    createAssistantModerationRule,\n    'General.successMessages.dataSaved',\n    ['moderationRules']\n  );\n\n  return { ...state, value: mapPrismaModerationData(state.value) };\n}\n\nexport async function updateModerationRule(\n  rule: ModerationRule,\n  onlyName: boolean = false,\n  selectedTemplates: ModerationTemplate[] = []\n): Promise<State<ModerationRule | null>> {\n  const state = await validateAndUpdateItem<string, ModerationRule>(\n    mapModerationRule(rule, selectedTemplates),\n    onlyName ? nameSchema : moderationRuleSchema,\n    updateAssistantModerationRule,\n    'General.successMessages.dataSaved',\n    'moderationRules'\n  );\n\n  return {\n    ...state,\n    value: state.value ? mapPrismaModerationData(state.value as any, selectedTemplates) : state.value,\n  };\n}\n\nexport async function deleteModerationRule(id: string): Promise<State<ModerationRule | null>> {\n  return deleteItem(id, deleteAssistantModerationRule, 'General.successMessages.dataDeleted', ['moderationRules']);\n}\n\nexport async function createModerationTemplate(\n  category: string,\n  rule_id?: string\n): Promise<State<ModerationTemplate | null>> {\n  if (!rule_id) return { error: 'Instructions.ModerationRules.settings.noRuleSelectedError', value: null };\n\n  const template = await createItem<ModerationTemplate>(\n    { rule_id, category, response_template: '' } as ModerationTemplate,\n    createAssistantModerationTemplate,\n    'General.successMessages.dataSaved'\n  );\n\n  return template;\n}\n\nexport async function updateModerationTemplate(\n  template: ModerationTemplate\n): Promise<State<ModerationTemplate | null>> {\n  const state = await validateAndUpdateItem<string, ModerationTemplate>(\n    template,\n    categorySchema,\n    updateAssistantModerationTemplate,\n    'General.successMessages.dataSaved'\n  );\n\n  return state;\n}\n\nexport async function deleteModerationTemplate(id: string): Promise<State<ModerationTemplate | null>> {\n  return deleteItem(id, deleteAssistantModerationTemplate, 'General.successMessages.dataDeleted');\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1603, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/db/apiClient.ts"],"sourcesContent":["import { CoachingPayload, CoachingResponse } from '@/lib/models/api.models';\n\nexport enum ApiPath {\n  coaching = '/coaching',\n}\n\nexport enum ResponseContentType {\n  text = 'text/plain',\n  json = 'application/json',\n}\n\nexport class ApiClient {\n  private readonly config: any;\n\n  constructor() {\n    this.config = {\n      baseUrl: process.env.AI_API_BASE_URL || '',\n    };\n  }\n\n  private async makePostRequest<T>(\n    endpoint: string,\n    data: T,\n    tag?: string,\n    method: 'POST' | 'PUT' = 'POST'\n  ): Promise<any> {\n    try {\n      const response = await fetch(`${this.config.baseUrl}${endpoint}`, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n        next: { tags: [tag || endpoint] },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n\n        console.error(error);\n        throw new Error(\n          `[apiClient] ${method} Request failed with status ${response.status}, error: ${JSON.stringify(error)}`\n        );\n      }\n\n      return response.headers.get('content-type') === ResponseContentType.json ? response.json() : response.text();\n    } catch (error) {\n      console.error(`[aiApiClient] ${endpoint} error:`, error);\n\n      throw new Error(`[aiApi] Failed to make ${method} request to ${endpoint}`);\n    }\n  }\n\n  public async sendMessage(payload: CoachingPayload): Promise<CoachingResponse> {\n    return this.makePostRequest(\n      ApiPath.coaching,\n      {\n        ...payload,\n        messages: payload.history.map(({ created_at, ...message }) => message),\n        newMessage: { ...payload.newMessage, created_at: undefined },\n      },\n      'chat_coaching'\n    );\n  }\n}\n\nexport const apiClient = new ApiClient();\n"],"names":[],"mappings":";;;;;;AAEO,IAAA,AAAK,iCAAA;;WAAA;;AAIL,IAAA,AAAK,6CAAA;;;WAAA;;AAKL,MAAM;IACM,OAAY;IAE7B,aAAc;QACZ,IAAI,CAAC,MAAM,GAAG;YACZ,SAAS,QAAQ,GAAG,CAAC,eAAe,IAAI;QAC1C;IACF;IAEA,MAAc,gBACZ,QAAgB,EAChB,IAAO,EACP,GAAY,EACZ,SAAyB,MAAM,EACjB;QACd,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE;gBAChE;gBACA,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;gBACrB,MAAM;oBAAE,MAAM;wBAAC,OAAO;qBAAS;gBAAC;YAClC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBAEjC,QAAQ,KAAK,CAAC;gBACd,MAAM,IAAI,MACR,CAAC,YAAY,EAAE,OAAO,4BAA4B,EAAE,SAAS,MAAM,CAAC,SAAS,EAAE,KAAK,SAAS,CAAC,QAAQ;YAE1G;YAEA,OAAO,SAAS,OAAO,CAAC,GAAG,CAAC,yCAA+C,SAAS,IAAI,KAAK,SAAS,IAAI;QAC5G,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,cAAc,EAAE,SAAS,OAAO,CAAC,EAAE;YAElD,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,OAAO,YAAY,EAAE,UAAU;QAC3E;IACF;IAEA,MAAa,YAAY,OAAwB,EAA6B;QAC5E,OAAO,IAAI,CAAC,eAAe,cAEzB;YACE,GAAG,OAAO;YACV,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,SAAS,GAAK;YAC9D,YAAY;gBAAE,GAAG,QAAQ,UAAU;gBAAE,YAAY;YAAU;QAC7D,GACA;IAEJ;AACF;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 1668, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/messagesAction.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\n\nimport { MessageSendPayload } from '@/lib/models/api.models';\nimport { Message, MessageRole } from '@/lib/models/chat.models';\nimport { getMessage } from '@/lib/utils/chat.utils';\nimport { apiClient } from '../db/apiClient';\nimport { createChatMessage, updateMessage } from '../db/chatClient';\n\nexport async function createChatMessages(userId: string, messages: Message[], chatId?: string): Promise<string> {\n  try {\n    await Promise.all(\n      messages.map(\n        async (message: Message) => await createChatMessage(chatId || '', { ...message, recurring: undefined })\n      )\n    );\n\n    return chatId || '';\n  } catch (error) {\n    console.error(`[messagesActions] Error during updating chat ${chatId} with messages for user ${userId} :`, error);\n\n    return '';\n  }\n}\n\nexport async function sendMessage({\n  userId,\n  assistantId,\n  newMessage,\n  prevMessages,\n  chat_id,\n  chatInfo,\n}: MessageSendPayload): Promise<string> {\n  try {\n    const payload = {\n      assistant_id: assistantId,\n      user_id: userId,\n      chat_id,\n      current_stage: chatInfo.stage,\n      history: [...prevMessages.reverse()],\n      newMessage,\n      app: 'studio',\n    };\n\n    const { response } = await apiClient.sendMessage(payload);\n    const assistantMessage = {\n      ...getMessage(response, MessageRole.assistant, chatInfo),\n      created_at: new Date().toISOString(),\n    };\n\n    const chatId = await createChatMessages(userId, [newMessage, assistantMessage], chat_id);\n\n    revalidatePath(`/chat/${chatId}`);\n\n    return chatId;\n  } catch (error) {\n    console.error(`[messagesActions] Error sending user ${userId} message: `, error);\n    return '';\n  }\n}\n\nexport async function editMessage(id: string, message: Partial<Message>): Promise<Message | null> {\n  try {\n    return await updateMessage(id, message as any);\n  } catch (error: any) {\n    console.error(`[messagesActions] Error updating message ${id} data: `, error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;;;AAEO,eAAe,mBAAmB,MAAc,EAAE,QAAmB,EAAE,MAAe;IAC3F,IAAI;QACF,MAAM,QAAQ,GAAG,CACf,SAAS,GAAG,CACV,OAAO,UAAqB,MAAM,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD,EAAE,UAAU,IAAI;gBAAE,GAAG,OAAO;gBAAE,WAAW;YAAU;QAIzG,OAAO,UAAU;IACnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,6CAA6C,EAAE,OAAO,wBAAwB,EAAE,OAAO,EAAE,CAAC,EAAE;QAE3G,OAAO;IACT;AACF;AAEO,eAAe,YAAY,EAChC,MAAM,EACN,WAAW,EACX,UAAU,EACV,YAAY,EACZ,OAAO,EACP,QAAQ,EACW;IACnB,IAAI;QACF,MAAM,UAAU;YACd,cAAc;YACd,SAAS;YACT;YACA,eAAe,SAAS,KAAK;YAC7B,SAAS;mBAAI,aAAa,OAAO;aAAG;YACpC;YACA,KAAK;QACP;QAEA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,gIAAA,CAAA,YAAS,CAAC,WAAW,CAAC;QACjD,MAAM,mBAAmB;YACvB,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD,EAAE,UAAU,sIAAA,CAAA,cAAW,CAAC,SAAS,EAAE,SAAS;YACxD,YAAY,IAAI,OAAO,WAAW;QACpC;QAEA,MAAM,SAAS,MAAM,mBAAmB,QAAQ;YAAC;YAAY;SAAiB,EAAE;QAEhF,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,MAAM,EAAE,QAAQ;QAEhC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,qCAAqC,EAAE,OAAO,UAAU,CAAC,EAAE;QAC1E,OAAO;IACT;AACF;AAEO,eAAe,YAAY,EAAU,EAAE,OAAyB;IACrE,IAAI;QACF,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD,EAAE,IAAI;IACjC,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,yCAAyC,EAAE,GAAG,OAAO,CAAC,EAAE;QACvE,OAAO;IACT;AACF;;;IA3DsB;IAgBA;IAoCA;;AApDA,+OAAA;AAgBA,+OAAA;AAoCA,+OAAA","debugId":null}},
    {"offset": {"line": 1752, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/chatActions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\n\nimport { AnalyzeStageData } from '@/lib/models/api.models';\nimport { Chat, ChatInfo, Message } from '@/lib/models/chat.models';\nimport { generateSessionName } from '@/lib/utils/chat.utils';\nimport {\n  createChat,\n  getUserChat,\n  getUserChats,\n  removeChat,\n  updateLastMessageInChat,\n  updateUserChat,\n} from '../db/chatClient';\nimport { getFirstStage } from './instructionsActions';\nimport { sendMessage } from './messagesAction';\nimport { getSessionUser, verifySession } from './sessionActions';\n\nexport async function handleStageAnalysis(chatId: string, stageAnalysis: AnalyzeStageData | null): Promise<void> {\n  try {\n    if (!stageAnalysis) return;\n\n    const { transition_required, current_stage, next_stage } = stageAnalysis;\n\n    const [chat] = await Promise.all([\n      updateUserChat(chatId, {\n        stageAnalysis,\n        currentStage: transition_required ? next_stage : current_stage,\n      }),\n      updateLastMessageInChat(chatId, { stageAnalysis: JSON.stringify(stageAnalysis) }),\n    ]);\n\n    const eventEmitter = (await import('@/lib/eventEmitter')).default;\n    eventEmitter.emit(`message:${chat.userId}`, {\n      user_id: chat.userId,\n      event: 'chat-update',\n      data: { chatId: chat.id, type: 'stage-analysis' },\n    });\n  } catch (error) {\n    console.error(`[chatActions] error during saving chat ${chatId} stage analysis`, error);\n  }\n}\n\nexport async function getChats(): Promise<any> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    return userId ? await getUserChats(userId) : [];\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return [];\n  }\n}\n\nexport async function getChat(id: string): Promise<Chat | null> {\n  let userId;\n  try {\n    userId = await getSessionUser();\n\n    if (!userId) return null;\n\n    const chat = await getUserChat(id, userId);\n\n    return chat as any;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${userId} chats:`, error);\n\n    return null;\n  }\n}\n\nexport async function deleteChat(chatId: string) {\n  let user_id;\n  try {\n    user_id = (await getSessionUser()) || '';\n    await removeChat(user_id, chatId);\n\n    revalidateTag(`chats`);\n  } catch (error) {\n    console.error(`[chatsActions] Error during deleting userr ${user_id} chat ${chatId}: `, error);\n  }\n}\n\nexport async function createNewChat(userId: string, assistantId: string): Promise<string> {\n  try {\n    const firstStage = await getFirstStage();\n    const newChat = await createChat(userId, {\n      currentStage: firstStage?.name,\n      name: generateSessionName(),\n      assistantId,\n    });\n\n    return newChat.id;\n  } catch (error) {\n    console.error(`[chatsActions] Error creating new chat for user ${userId}:`, error);\n\n    return '';\n  }\n}\n\nexport async function updateChat(\n  currentChatId: string | undefined,\n  messages: Message[],\n  chatInfo: ChatInfo\n): Promise<string> {\n  let user_id;\n  try {\n    const { userId, assistantId } = (await verifySession()) || {};\n    user_id = userId;\n\n    if (!userId || !assistantId) return '';\n\n    const [newMessage, ...prevMessages] = messages;\n    const chat_id = currentChatId || (await createNewChat(userId, assistantId));\n    await sendMessage({ userId, assistantId, newMessage, prevMessages, chat_id, chatInfo });\n\n    !currentChatId && revalidateTag(`chats`);\n    // TODO: instead revalidate try to return assistant message directly\n    return chat_id;\n  } catch (error) {\n    console.error(`[chatsActions] Error fetching user ${user_id} chats:`, error);\n\n    return '';\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1899, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/server/actions/authActions.ts"],"sourcesContent":["'use server';\n\nimport { redirect } from 'next/navigation';\nimport {\n  applyActionCode,\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n  sendPasswordResetEmail,\n  signInWithEmailAndPassword,\n  updateProfile,\n  UserCredential,\n} from 'firebase/auth';\n\nimport { HOME_ROUTE, LOGIN_ROUTE } from '@/lib/constants';\nimport { auth } from '@/lib/firebase';\nimport { AuthState } from '@/lib/models/auth.models';\nimport { User } from '@/lib/models/common.models';\nimport { encrypt } from '@/lib/utils/encryption.utils';\nimport { createUser, upsertUser } from '../db/userClient';\nimport { createSession, deleteSession } from './sessionActions';\nimport { checkUserAccessAllowed, getUser } from './userActions';\n\nexport async function signupUser(state: AuthState): Promise<any> {\n  const { email, password, name } = state;\n\n  try {\n    const userData: UserCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const { user } = userData;\n\n    if (!user) throw new Error(`[authActions] User ${email} was not created.`);\n\n    return Promise.all([\n      sendEmailVerification(user),\n      updateProfile(user, { displayName: name || '' }),\n      createUser({ id: user.uid, name, email: user.email, emailVerified: user.emailVerified }),\n    ]);\n  } catch (error: any) {\n    console.error(`[authActions] Error during signup user ${email}`, error);\n\n    return { errorMessage: error.code ? `Auth.errors.${error.code}` : 'Auth.errors.signupFailed' };\n  }\n}\n\nexport async function loginUser({ email, password }: AuthState): Promise<any> {\n  try {\n    const { user } = await signInWithEmailAndPassword(auth, email, password);\n\n    if (!user) throw new Error(`[authActions] User \"${email}\" was not found.`);\n\n    if (!user.emailVerified) {\n      return { errorMessage: 'Auth.errors.emailNotVerified' };\n    }\n\n    const dbUser = await upsertUser(user.uid, {\n      emailVerified: user.emailVerified,\n      email: user.email,\n      name: user.displayName,\n    });\n    const isAccessAllowed = await checkUserAccessAllowed(dbUser as User);\n\n    await createSession(user.uid, isAccessAllowed, dbUser?.assistants[0]?.id || '');\n  } catch (error: any) {\n    console.error(`[authActions] Error during login user ${email}`, error);\n\n    return { errorMessage: error.code ? `Auth.errors.${error.code}` : 'Auth.errors.loginFailed' };\n  }\n\n  redirect(HOME_ROUTE);\n}\n\nexport async function verifyEmail(code: string, mode: string): Promise<any> {\n  try {\n    if (mode !== 'verifyEmail') {\n      throw new Error(`[authActions] Invalid email verification: ${mode}`);\n    }\n\n    await applyActionCode(auth, code);\n\n    return true;\n  } catch (error: any) {\n    console.error(`[authActions] Error during email verification:`, error);\n\n    return false;\n  }\n}\n\nexport async function signOut() {\n  try {\n    await auth.signOut();\n    await deleteSession();\n  } catch (error) {\n    console.error('[authActions] Error signing out', error);\n    return;\n  }\n\n  redirect(LOGIN_ROUTE);\n}\n\ninterface ResetPasswordResponse {\n  errorMessage?: string;\n}\n\nexport async function resetPassword({ email }: { email: string }): Promise<ResetPasswordResponse> {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    return {};\n  } catch (error: any) {\n    console.error('[passwordActions] Error sending reset password email:', error);\n    return {\n      errorMessage: error.code ? `Auth.errors.${error.code}` : 'Auth.ForgotPassword.resetFailed',\n    };\n  }\n}\n\nexport async function getCannySSOToken(): Promise<string | null> {\n  try {\n    const user = await getUser();\n\n    if (!user) throw new Error('[userActions] User not authenticated!');\n\n    return await encrypt({ email: user.email, id: user.id, name: user.name }, process.env.CANNY_API_KEY);\n  } catch (error) {\n    console.error('[authActions] Error get Canny SSO token', error);\n\n    return null;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/.next-internal/server/app/%28auth%29/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getUser as '00f493e29254b15d58fd88f4f4d1857033e824e6ed'} from 'ACTIONS_MODULE0'\nexport {updateUserData as '400fe5b7eae332f55d1570f77f67fb4880e1da66cc'} from 'ACTIONS_MODULE0'\nexport {checkExistingSubscription as '40617daf5d15e4fe06aa3748fbde57cacd4e5c5d76'} from 'ACTIONS_MODULE0'\nexport {deleteUserAccount as '40a3be75c021cc8c57fca1bced4da32245d8a3953c'} from 'ACTIONS_MODULE0'\nexport {checkSignupModeParam as '40a5355ded58ddab19047239cd1337c2b15c013a91'} from 'ACTIONS_MODULE0'\nexport {checkUserAccessAllowed as '40bf5ddfac312f9fe15288cb868c5f0f1a4e7e93ca'} from 'ACTIONS_MODULE0'\nexport {checkUserSubscription as '40ef050ad81136482a8d47b0d661448d7bbda3e264'} from 'ACTIONS_MODULE0'\nexport {updateUserAccount as '60ded4edc2884943f0f937f1dd06d3a3b355ee8d80'} from 'ACTIONS_MODULE0'\nexport {getUserCurrentSubscription as '7f0243638d1fa053b2e125009415e7b77415e7f4e5'} from 'ACTIONS_MODULE1'\nexport {createUserCheckoutSession as '7f08abd42661a1d1fc10ca23e45fa97939bd5771c6'} from 'ACTIONS_MODULE1'\nexport {getUserCurrentPrice as '7f113408b23342dd27bf91e0930201c3c5566814e0'} from 'ACTIONS_MODULE1'\nexport {cancelUserSubscription as '7f38162c1e1ea25645b01b7fc46a9331f8c1f1aa8c'} from 'ACTIONS_MODULE1'\nexport {updateSubscriptionData as '7f6164fb8f7fd92f23914d018279d0565c333c0629'} from 'ACTIONS_MODULE1'\nexport {getPrices as '7f701abfe2f6c437c5e0e355c09e5ca36a214ae4a5'} from 'ACTIONS_MODULE1'\nexport {createUserFreeSubscription as '7f9a3527417a97f0dbec6de5bb446d53c23c76c472'} from 'ACTIONS_MODULE1'\nexport {getCancelSubscriptionData as '7fc8c3060d63dea28a0d23655d8caa453b2dd0fe13'} from 'ACTIONS_MODULE1'\nexport {getUpdatedSubscriptionData as '7fde1dc949db0e2923ce796360116e9428281d8fab'} from 'ACTIONS_MODULE1'\nexport {mapStripePrices as '7fe99dde7a8504d1c0b5ebc320c25fadce39c7bd02'} from 'ACTIONS_MODULE1'\nexport {deleteSession as '003ced715dcb142a06df1c477a7bce1d57c1a0fb1e'} from 'ACTIONS_MODULE2'\nexport {verifySession as '0069ba96f7d5387663470cd879b3d1c554f9078a61'} from 'ACTIONS_MODULE2'\nexport {getSessionUser as '006d0a7129916a3465564fabe7ab4818da32dc51a1'} from 'ACTIONS_MODULE2'\nexport {updateSession as '70425448e81a40aaef871c95f3f46f2a736857ca6f'} from 'ACTIONS_MODULE2'\nexport {createSession as '70e4de43e28aaa533b33b7452ebbfe624254ef9332'} from 'ACTIONS_MODULE2'\nexport {deleteAssistant as '40dd6c761bfb7b8f199153b185c56dac7979a243bb'} from 'ACTIONS_MODULE3'\nexport {getAssistantConfiguration as '6046d8b5cb687c98387129f0a27c6dc38e3cdcbd6a'} from 'ACTIONS_MODULE3'\nexport {getChat as '4070d78f346fa39de08469d427f476fea48c088df6'} from 'ACTIONS_MODULE4'\nexport {loginUser as '4097989a26cb67b95bb809f63fdc7dc7a5ba6d6628'} from 'ACTIONS_MODULE5'\n"],"names":[],"mappings":";AAAA;AAQA;AAUA;AAKA;AAEA;AACA","debugId":null}},
    {"offset": {"line": 2235, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefangajanovic/Desktop/coachbot/coachbot-codex/src/app/%40modal/%5B...catchAll%5D/page.tsx"],"sourcesContent":["export default function CatchAll() {\n  return null;\n}\n"],"names":[],"mappings":";;;AAAe,SAAS;IACtB,OAAO;AACT","debugId":null}}]
}